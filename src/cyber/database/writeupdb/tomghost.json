{
    "note":"title must match route name in App.js",
    "title":"Tomghost",
    "path":"tomghost",
    "tags":["easy","ctf", "box", "thm","cve","ssh","bruteforcing", "python webserver","download file", "privesc", "pgp public key cracking"],
    "date":"27/06/2023",
    "location": "./writeup/",
    "banner":"writeup/tomghost/banner.gif",
    "type":"writeup",
    "search":[
        {
            "section":"Scanning",
            "description":"Scanning with nmap and finding the host exposing posts 22 SSh, 53 tcpwrapped, 8009 ajp13, 8080 http"
        },
        {
            "section":"Enumeration",
            "description":"Enumerating port 8009 ajp13 Apache Jserv (Protocol v1.3) finding publicly availavle Ghostcat CVE-2020-10487"
        },
        {
            "section":"Exploitation",
            "description":"Downloading exploit via searchsploit"
        },
        {
            "section":"Exploitation",
            "description":"Manual exploitaiton with Ghostcat CVE of Apacke Jserv (Protocol v1.3) extracting WEB-INF/web.xml file containing credentals"
        },
        {
            "section":"Exploitation",
            "description":"Log in with ssh username and credential"
        },
        {
            "section":"Privilege Escalation",
            "description":"Downloading .pgp and .asc files with Python3 web server"
        },
        {
            "section":"Privilege Escalation",
            "description":"Extracting passphrase hash from PGP public key (.asc) file with pgp2john and cracking it with John The Ripper"
        },
        {
            "section":"Privilege Escalation",
            "description":"Decrypting credential contained in encrypted .pgp file with passphrase previewsly cracked"
        },
        {
            "section":"Privilege Ecalation",
            "description":"Lateral movement by loggin as a different user with ssh username and passowrd"
        },
        {
            "section":"Privilege Escalation",
            "description":"Exploiting zip program elevating privilege to root"
        }
    ],
    "body":[
        {
            "id":"Ignite",
            "title":"<h1> <span style=\"color:#da1953\">Tom</span>ghost</h1><hr>",
            "body":[
                {
                    "id":"banner",
                    "title":"",
                    "body":[
                        "<img src=\"/cyber/writeup/tomghost/banner.gif\" alt=\"\">"
                    ]
                },
                {
                    "id":"Scanning",
                    "title":"<hr><h1><span style=\"color:#da1953\">Sca</span>nning</h1>",
                    "body":[
                        "<p><pre>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-11 09:30 EST<br>Nmap scan report for 10.10.26.184<br>Host is up (0.027s latency).<br>Not shown: 996 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE    VERSION<br>22/tcp   open  ssh        OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   2048 f3:c8:9f:0b:6a:c5:fe:95:54:0b:e9:e3:ba:93:db:7c (RSA)<br>|   256 dd:1a:09:f5:99:63:a3:43:0d:2d:90:d8:e3:e1:1f:b9 (ECDSA)<br>|_  256 48:d1:30:1b:38:6c:c6:53:ea:30:81:80:5d:0c:f1:05 (ED25519)<br>53/tcp   open  tcpwrapped<br>8009/tcp open  ajp13      Apache Jserv (Protocol v1.3)<br>| ajp-methods: <br>|_  Supported methods: GET HEAD POST OPTIONS<br>8080/tcp open  http       Apache Tomcat 9.0.30<br>|_http-title: Apache Tomcat/9.0.30<br>|_http-favicon: Apache Tomcat<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 13.64 seconds<br></pre></p>",
                        "<p>I have four services: port 22 SSH, 53 TCP wrapper, 8009 AJP13 (Apache Jsever), and 8080 Tomcat. The next step is to enumerate each of them with lots of patient.</p>"
                    ]
                },
                {
                    "id":"Enumeration",
                    "title":"<h1><span style=\"color:#da1953\">Enu</span>meration</h1>",
                    "body":[
                        "<p>Due to my past experience with Tomcat vulnerabilities, I assumed it was the same challenge: bypassing the admin panel and uploading a web shell to access the server. Big mistake!</p>",
                        "<p>Due to this wrong assumption, I started enumerating Tomcat port 8080 and discovered that the admin panel was disabled from the configuration file. For some reason, I was fixated on the idea that the vulnerability was in the Tomcat service and from the enumerating phase I slid into the exploitation phase without even noticing. Second big mistake!</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/bigmistake.jpg\"></p>",
                        "<p>Luckily I took a break and after clearing my mind I decided to proceed with the second service starting from the bottom up. The next service is port 8009 Apache Jserver. What I usually do is use <a href=\"https://book.hacktricks.wiki/en/network-services-pentesting/8009-pentesting-apache-jserv-protocol-ajp.html?highlight=8009#8009---pentesting-apache-jserv-protocol-ajp\">HackTricks</a> for the enumeration phase and it describes a vulnerability named Ghostcat, the same as the challenges banner. Fantastic!</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/yes.jpg\"></p>",
                        "<p>At this point, I stopped the enumeration phase and proceeded with the exploitation phase as there is a public CVE to use.</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/earchsploit.PNG\"></p>",
                        "<p>I tend to avoid using Metasploit as a simulation of different certifications where the tool is banned or limited, for this reason, I used the first option <i>48143.py</i> and trained manual exploitation.</p>",
                        "<p>Note that even if I stopped the enumeration phase and skipped port 22 and port 53 this is the wrong way to approach boxes, it is always suggested to complete the enumeration phase as none guarantees that the exploit I found is going to work, be aware of rabbit holes! Always always complete your enumeration at your best!</p>"
                    ]
                },
                {
                    "id":"Exploitation",
                    "title":"<h1><span style=\"color:#da1953\">Exp</span>loitation</h1>",
                    "body":[
                        "<p>First, this to do is to copy the exploit and open it to understand what it is doing. This is crucial, especially in real-life penetration testing where there is a risk of introducing vulnerabilities or causing unintentional damage to the server, especially if you testing the production server!</p>",
                        "<p><code>searchsploit -m 48143.py</code></p>",
                        "<p>Once opened the Python file, at the bottom of the file, which usually is the starting point (main) of the program I can see what is required to run it and what arguments it takes.</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/cvecode.PNG\"></p>",
                        "<p>It becomes clear that there are 2 parameters set by default: the port and the file to extract,  the only parameter I have to provide is the remote IP address. This script must be run with Python2 otherwise it generates an error as starting from Python3 some library has changes and its syntax.</p>",
                        "<p><pre>chmod +x 48143.py<br>python2 ./48143.py [target.ip.address]</pre></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/cred.PNG\"></p>",
                        "<p>Now we have a credential, what is it for? ssh maybe? Let's try the following command: <code>ssh skyfuck@[target.ip.address]</code> and as a passowrd use the one from the extracted file.</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/remoteshell.PNG\"></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/imin.png\"></p>",
                        "<p>The user flag is in the <b>merlin</b> home directory</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/userflag.PNG\"></p>"
                    ]
                },
                {
                    "id":"Privilege Escalation",
                    "title":"<h1><span style=\"color:#da1953\">Pri</span>vilege Escalation</h1>",
                    "body":[
                        "<p>Once inside I listed the files in the current directory (home directory of skyfuck) and saw a pgp file named credential and a public key (.asc). Thanks to other CTFs I did in past I knew how to deal with these files. The foremost thing to do is to crack the passphrase from the encrypted (tryhackme.asc) file and use that to decrypt <i>credential.pgp</i>.</p>",
                        "<p>Remember that in this case, I am again skipping the whole enumeration of the system as I was presented with those 2 files, and my plan was to proceede with complete enumeration in the even the decryption attemps fails and it is a rabbit hole.</p>",
                        "<p>Before attempting to crack the password, I must download the files, as the necessary tools may not be installed on the target machine. For this reason, I opened a Python web server on the target machine, downloaded the necessary files, and performed the cracking on my local machine.</p>",
                        "<p>On the target machine:</p>",
                        "<p><pre>python3 -m http.server</pre></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/webserver.PNG\"></p>",
                        "<p></p>",
                        "<p>On my local Kali machine:</p>",
                        "<p><pre>wget http://[target.ip.address]:8000/credential.pgp<br>wget http://[target.ip.address]:8000/tryhackme.asc</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/download.png\"></p>",
                        "<p>To decrypt the tryhackme.asc file I have to use <b>pgp2john</b> to extract the hash and then use <b>JohnTheRipper</b> to crack it.</p>",
                        "<p><pre>pgp2john tryhackme.asc > hash<br>john --wordlist=/user/share/wordlist/rockyou.txt hash</pre></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/cracked.PNG\"></p>",
                        "<p>Next step is to import the <i>tryhackme.asc</i> file: <code>gpg --import tryhackme.asc</code> when prompterd enter the phassphrase <i>alexandru</i>.</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/importkey.PNG\"></p>",
                        "<p>Now decryt the file as: <code>gpg --recipient \"John Doe &lt;john.doe@example.com&gt;\" --output decrypted_file.txt --decrypt credential.pgp</code> and when prompted enter the passphrase.</p>",
                        "<p><img src=\"/cyber/writeup/tomghost/passphrase.PNG\"></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/decryption.png\"></p>",
                        "<p>Now this is the ssh credential for <i>merlin</i> account, and similarly, we can log in to <i>merlin</i> and try to elevate our privilege. This is also a sort of lateral movement. The reason why I had to change account it is because as <i>skyfuck</i> user I am not able to elevate my privilege due to its restriction in the system, on the other hand <i>merlin</i> is not as restricted as <i>skyfuck</i> leaving the possibility to compromise the system.</p>",
                        "<p>Log in as <i>merlin</i>: <code>ssh merlin@[target.ip.address]</code></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/merlin.PNG\"></p>",
                        "<p>Upon log in I can see that <i>melin</i> account can run <i>/usr/bin/zip</i> as <b>root</b>, and to check if it is exploitable I used <a href=\"https://gtfobins.github.io/gtfobins/zip/\">gtfobin</a> and searched for <b>zip</b>. Among the different solutions, I chose the sudo one as the user merlin can execute it with sudo privilege, so I am executing in order the following 2 commands:</p>",
                        "<p><pre>TF=$(mktemp -u)<br>sudo zip $TF /etc/hosts -T -TT 'sh #'</pre></p>",
                        "<p><img src=\"/cyber/writeup/tomghost/root.PNG\"></p>"
                    ]
                }
                
            ]
        }
    ]
}
