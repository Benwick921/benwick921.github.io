{
    "note":"title must match route name in App.js",
    "title":"University CTF",
    "path":"uni-ctf",
    "tags":["medium","ctf","web","security","sqli","shellshock","http header","code injection", "bruteforcing", "rot13", "login panel"],
    "date":"27/06/2023",
    "location": "./writeup/",
    "banner":"writeup/unictf/banner.webp",
    "type":"writeup",
    "search":[
        {
                "section":"Level 1 - Password validation",
                "description":"Inspected the source code to find the password validation function to retrieve hard-coded credentials"
             },
             {
                  "section":"Level 2 - Stop!",
                  "description":"Inspected the source to find the password in the alt value of the image"
             },
             {
                  "section":"Level 3 - Password verification",
                  "description":"Inspected the source code and enabled the hidden input to become administrator"
             },
             {
                  "section":"Level 4 - Secure Browser",
                  "description":"Impersonated a different browser by changing the \"user-agent\" and \"referrer\" headers"
             },
             {
                  "section":"Level 5 - Headers",
                  "description":"Changed the \"referrer\" header to get the flag"
             },
             {
                  "section":"Level 6 - Your personal secret",
                  "description":"Changed to \"uid\" parameter in the URL to find the admin page and the flag"
             },
             {
                  "section":"Level 7 - Password protected",
                  "description":"Guessed login credentials by using teacher's email as username"
             },
             {
                  "section":"Level 8 - Your persona secret pt.2",
                  "description":"Used ROT13 to decrypt the \"user\" parameter in the URL and encrypt the \"admin\" value to access the admin page"
             },
             {
                  "section":"Level 9 - Password protected pt.2",
                  "description":"Inspected the source code to find in a comment the file \"session.txt\" containing the active admin session. Updated the current cookie session to access as admin"
             },
             {
                  "section":"Level 10 - Bytestream",
                  "description":"Inspected the source code and found the MD5 hash of the password and decrypted it to access as admin"
             },
             {
                  "section":"Level 11 - Brutus system",
                  "description":"Inspected the source code and found the password check function. Reverse engineered the function logic and implemented a Python function to decrypt the password"
             },
             {
                  "section":"Level 12 - PHP",
                  "description":"Inspected the code and found the PHP filter vulnerable to bash injection, bypasses the restriction, obtained RCE - remote code execution to retrieve the flag"
             },
             {
                  "section":"Level 13 - Bash Environment",
                  "description":"Exploited shellshock vulnerability to bypass the PHP filter and obtain RCE - remote code execution to retrieve the flag"
             },
             {
                  "section":"Level 14 - SQL Injection",
                  "description":"Employed manual SQL Injection (SQLi) to exfiltrate admin credentials"
             }
    ],
    "body":[
        {
            "id":"University web CTF",
            "title":"<h1> <span style=\"color:#da1953\">Uni</span>versity web CTF </h1><hr>",
            "body":[
                {
                    "id":"banner",
                    "title":"",
                    "body":[
                        "<img src=\"/cyber/writeup/unictf/banner.webp\" alt=\"\"><hr>"
                    ]
                },
                {
                    "id":"Introduction",
                    "title":"<hr><h2> <span style=\"color:#da1953\">Int</span>roduction </h2>",
                    "body":[
                        "<p>This was my university CTF during my Masters' degree in Cybersecurity, we compeeted in team and I was paired with one of my university colleague and friend and we completed all the challenges. At that time I was at the start of my journe in the Cybersecurity field, even if now theese challenges seels really easy at during that period was enlighting and they tought me many things about web and web security.</p>",
                        "<p>This writeup is written in a way to show not only the solution but also my process and my thinking behind and action. I believe that learning skills is relatively easy thanks to various resources available for free but the hardest part is to have the right mindset to approach the challenges.</p>",            
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 1 - Password validation",
                    "title":"<h2> <span style=\"color:#da1953\">Lev</span>el 1 - Password validation </h2>",
                    "body":[
                        "<p>The URL of the first level was given as the starting point:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55001/eishohwohpahxooy/</code></p>",
                        "<p>As stated during the Web Security Challenges lectures, the first thing to do when trying to hack a web page was to actually use the web page as it was supposed to be used. So, in other words, you simply do what the web page asks you to do.</p>",
                        "<p>Therefore, we first tried to log in by inserting a random username and password, as requested from the web page itself.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image18.png\" alt=\"\"></p>",
                        "<p>As we expected we received an error:</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image28.png\" alt=\"\"></p>",
                        "<p>Then, we tried to dig further inspecting the web page&rsquo;s source code.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image63.png\" alt=\"\"></p>",
                        "<p>We observed  in the form above that on clicking Submit we actually call a function named <em>verify</em>.</p>",
                        "<p>So, we started looking for a function called verify in the Console section (right click - inspect element).</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image43.png\" alt=\"\"></p>",
                        "<p>As seen from the picture above, we found the function Verify. Now jumping into the definition of the function, to check in detail what was the Verify function supposed to do.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image64.png\" alt=\"\"></p>",
                        "<p>I was in plaintext in the <code>if</code> condition highlighted in red, the password and the username needed in order to access the web page.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image86.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 2 - Stop!",
                    "title":"<h2 id=LV2> <span style=\"color:#da1953\">Lev</span>el 2 - Stop!</h2>",
                    "body":[
                        "<p>Once solved the Level 1, the URL of the second level was found:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55043/zeitaeveishiidef</code></p>",
                        "<p>This was how the Level 2 looked like:</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image67.png\" alt=\"\"></p>",
                        "<p>In this level there was only the possibility to insert a password, there was no username. So, let&rsquo;s try to insert a random password.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image72.png\" alt=\"\"></p>",
                        "<p>Well, wrong password! As done in the previous level, we tried to look further by analyzing the source code.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image70.png\" alt=\"\"></p>",
                        "<p>Reading the first lines we could clearly see that there was a function implementation, the function seems to encrypt the text inserted in the password field, with MD5 function. The first idea was to decrypt what seems to be a ciphertext in the <code>if</code> condition.</p>",
                        "<p>After using numerous MD5 online decrypters without success, we decide to keep on reading the source code. While having a closer look at it, we noticed two images references in the inspector section: one was a reference to the picture in the home page &ldquo;kitten.jpg&rdquo; and the other one was a picture with a hidden parameter &ldquo;srct.png&rdquo;.</p>",
                        "<p>Putting the cursor on top of the reference <em>scrt.png</em> a window popped up with a text.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image77.png\" alt=\"\"></p>",
                        "<p>The text on the picture was the right password to insert in order to solve the level.</p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 3 - Password verification",
                    "title":"<h2> <span style=\"color:#da1953\">Lev</span>el 3 - Password verification</h2>",
                    "body":[
                        "<p>As usual, in the previous level, we found the link to access the next one:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55208/bahjeighahveerae/cgi-bin/index.php</code></p>",
                        "<p>As tried before, as a first step when trying to relate to a new web page, we tried to follow the natural instructions of the web page itself, this time trying to insert a username and password. We decided to try with some random and basic combination of username and password (e.g. <em>admin:admin</em>).</p>",
                        "<p>As we expected, we received the following error message:</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image73.png\" alt=\"\"></p>",
                        "<p>So, we analyzed the source code once again.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image75.png\" alt=\"\"></p>",
                        "<p>In the source code, we found a hidden parameter with a “False” value, we inspected the web page source code proceeded by changing the value from False to True, and submitted the form.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image78.png\" alt=\"\"></p>",
                        "<p>After applying the above-mentioned changes, we finally obtaine the page with the URL of the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image80.png\" alt=\"\"></p>",
                        "<hr>" 
                    ]
                },
                {
                    "id":"Level 4 - Secure Browser",
                    "title":"<h2> <span style=\"color:#da1953\">Lev</span>el 4 - Secure Browser</h2>",
                    "body":[
                        "<p>This was the URL for the Level 4:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55192/ogheucaiheikohhi</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image82.png\" alt=\"\"></p>",
                        "<p>This level consisted of verifying our browser in order to have access.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image84.png\" alt=\"\"></p>",
                        "<p>Only connections from <em>Kevin Browser Rocks</em> were accepted.</p>",
                        "<p>What we had to do was to pretend to be using the browser “Kevin Browser Rocks” by changing the headers in our browser. In order to do that we useded an extension (Simple Modify Headers, on Firefox) that modifies the header and we set it up to do it during the requests.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image87.png\" alt=\"\"></p>",
                        "<p>As we can see we modified our browser <code>user-agent</code> to <em>Kevin Browser Rocks</em>.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image89.png\" alt=\"\"></p>",
                        "<p>Nice! Now the page accepted only connections from Russian (.ru) websites. We have our extension and we can also use it to simulate Russian connection by changing our browser referrer.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image89.png\" alt=\"\"></p>",
                        "<p>By applying this new change, we could finally get the URL to access the new level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image90.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 5 - Headers",
                    "title":"<h2> <span style=\"color:#da1953\">Lev</span>el 5 - Headers</h2>",
                    "body":[
                        "<p>This was the URL obtained to access the fifth level:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55051/iengohquoochieza/</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image47.png\" alt=\"\"></p>",
                        "<p>The first thing we did was to analyze the source code.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image49.png\" alt=\"\"></p>",
                        "<p><em>“Never show secret.txt to the users”</em>, this caught our attention so we searched for the file called: <em>secret.txt</em>, in the current web directory. As we knew the URL was nothing else than a path to a file in a webserver, and we added <em>secret.txt</em> to the urr to the URL in order to find it.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image51.png\" alt=\"\"></p>",
                        "<p>At this point, we needed to find the secret at <em>cgi-bin/getsecret.js</em> and referred to ourselves as <em>di.uniroma1.it/supersecurepage</em>, which could be done with the Firefox extension as done in the previous levels.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image53.png\" alt=\"\"></p>",
                        "<p>After having done this, we were able to find the URL to the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image55.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 6 - Your personal secret",
                    "title":"<h2> <span style=\"color:#da1953\">Lev</span>el 6 - Your personal secret</h2>",
                    "body":[
                        "<p>The URL for the level 6 obtained by solving the level 5:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55005/oaxiweitheerohra</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image57.png\" alt=\"\"></p>",
                        "<p>Here we applied the usual method of trying one of the most common combination of username and password (admin:admin).</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image59.png\" alt=\"\"></p>",
                        "<p>Digging in the source code and reading it did not reveal anything. So, we turned our attention to the URL, and we found a reference to a PHP script with the field <em>uid</em> exposed <em>userinfo.php?uid=0</em>.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image60.png\" alt=\"\"></p>",
                        "<p>The field was set to 0 which was our current user’s ID, so we tried to change it with 1 and we were sent to another web page, Angelo's web page. Then we started to change the value of uid until we found the user with the secret at <em>uid=6</em>.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image61.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 7 - Password protected",
                    "title":"<h2 id=LV7> <span style=\"color:#da1953\">Lev</span>el 7 - Password protected</h2>",
                    "body":[
                        "<p>The URL found by solving level 6:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55215/shieduekecometha/</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image62.png\" alt=\"\"></p>",
                        "<p>As stated in the picture, in order to log in we need an e-mail and the username.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image24.png\" alt=\"\"></p>",
                        "<p>So, we tried a fake and random email and a random string as a password. At that point, we noticed that the site check if the username was an e-mail just by checking if the username string contained the character <em>@</em>.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image26.png\" alt=\"\"></p>",
                        "<p>We could try to insert any kind of random email for instance <em>admin@admin</em> or even <em>teacher@something</em> but we always received the same kind of message. After having tried some standard types of email, we thought that we could try by inserting a real teacher’s email address.</p>",
                        "<p>Our first attempt was to try with course main teacher&rsquo;s email but it was not the right solution. Then we tried again with our laboratorys teacher&rsquo;s email and finally, that one was the key solution for the next level because we were able to log in as a teacher and consequently obtain the link for the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image29.png\" alt=\"\"></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image31.png\" alt=\"\"></p>",
                        "<hr>"
                    ]   
                },
                {
                    "id":"Level 8 - Your persona secret pt.2",
                    "title":"<h2 id=LV8> <span style=\"color:#da1953\">Lev</span>el 8 - Your persona secret pt.2</h2>",
                    "body":[
                        "<p>Let’s start with the URL obtained from the previous levels:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55493/zangiepaegaizeex/cgi-bin/index.php</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image33.png\" alt=\"\"></p>",
                        "<p>Our first attempt was as usual the standard combination of <em>admin:admin</em> as username and password.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image35.png\" alt=\"\"></p>",
                        "<p>And we noticed a code in the URL which should be the ID of the current user.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image37.png\" alt=\"\"></p>",
                        "<p>We tried to figure it out why the current user (admin) has that precise value, and we also noticed that the string <em>admin</em> and the string <em>nqzva</em> had the same length, so we started to match the characters from the first string with the ones from the other string hence <em>a=n</em>, <em>d=q</em>.</p>",
                        "<p>We immediately notice that the distance between the characters was 13, so we tried to ROT13 the string <em>admin</em> and the result string was <em>nqzva</em>.</p>",
                        "<p>After many random tries, our attention was captured by the sentence <em>“Page created by MessyAdmin”</em> present on the first page of the level.</p>",
                        "<p>So, we decide to ROT13 the string <em>messyadmin</em> which resulted in <em>zrfflnqzva</em> which has been copied and pasted to the URL instead of <em>nqzva</em> and we ended up with the MessyAdmin’s page where we found the link to the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image38.png\" alt=\"\"></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image39.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 9 - Password protected pt.2",
                    "title":"<h2 id=LV9> <span style=\"color:#da1953\">Lev</span>el 9 - Password protected pt.2</h2>",
                    "body":[
                        "<p>URL obtained from the 8th level:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55413/eereezeighohfeim</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image40.png\" alt=\"\"></p>",
                        "<p>The first thing we do was to try the <em>admin@admin:admin</em> username and password combination but without success. Then we investigated the source code looking for some information and we found a comment that said <em>“Never show the sessions.txt file”</em>.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image2.png\" alt=\"\"></p>",
                        "<p>As usual, we proceede to change the URL trying to open the <em>sessions.txt</em> file.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image4.png\" alt=\"\"></p>",
                        "<p>After having seen the information in this file, we immediately understood what we had to do because we already knew about an attack where if you can steal a user session you can log in as that user.</p>",
                        "<p>While this session was saved in the cookie, we proceeded to open the cookie and change the value. To obtain the cookie we had to log in as a Guest user.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image6.png\" alt=\"\"></p>",
                        "<p>Once in the page, we check if we received the cookie.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image8.png\" alt=\"\"></p>",
                        "<p>We notice that the value of this cookie was different from the value found in the <em>sessions.txt</em> file.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image10.png\" alt=\"\"></p>",
                        "<p>So, we proceede to change it, and our new cookie was:</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image12.png\" alt=\"\"></p>",
                        "<p>After reloading the page, we end up in the administrator’s page and logged as him, where we could find the link for the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image14.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 10 - Bytestream",
                    "title":"<h2 id=LV10> <span style=\"color:#da1953\">Lev</span>el 10 - Bytestream</h2>",
                    "body":[
                        "<p>The link obtained from level 9:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55255/leighaghuuzasaex/</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image15.png\" alt=\"\"></p>",
                        "<p>As usual, we tried the same combination (admin:admin) without any success.</p>",
                        "<p>Then we tried many random combinations of usernames and passwords, for instance, we used some teachers’ usernames just in case we could get it correct, but it failed every time.</p>",
                        "<p>The last attempt was to analyse the source code of the web page where we found the following script:</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image16.png\" alt=\"\"></p>",
                        "<p>Inside the script, there was a variable called <em>password_hashes</em> which contained the correspondent encrypted password for each user.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image17.png\" alt=\"\"></p>",
                        "<p>The first thing that came into our mind was MD5, so we proceeded to decrypt the hash with an online tool <em>haskiller.co.uk</em> (this site does not exit any more). It resulted in a very good website where it was possible to encrypt and decrypt by using various algorithms.</p>",
                        "<p>In addition, you could also download their wordlist in case you need to proceed with an offline hash cracking.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image66.png\" alt=\"\"></p>",
                        "<p>Obviously, we took the hash of the user <em>admin</em> and try to log in with the new credential <em>admin:qwertyuiop</em> and we succeeded in proceeding to the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image68.png\" alt=\"\"></p>",
                        "<p>But it did not end here because after decrypting the hash we notice that the function <em>checkPassword</em> does not decrypt the user input in order to access the admin page.</p>",
                        "<p>So, we tried to reverse the function to understand its logic.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image69.png\" alt=\"\"></p>",
                        "<p>The function follows these steps:</p>",
                        "<ol>",
                        "<li>Retrieve the values from the form and hash the given password.</li>",
                        "<li>It checks if the given user as input in the login form was in the dictionary “password_hashes”, if not it gives an error.</li>",
                        "<li>If the user exists, it checks the computed hash with the stored hash, if they don’t match it gives an error.</li>",
                        "<li>If the hash matches, it generates the link for the next level by hashing again the input hash and taking the initial 8 characters.</li>",
                        "</ol>",
                        "<p>We followed the script steps in order to solve the level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image71.png\" alt=\"\"></p>",
                        "<p>In fact, we can access the right page by adding <em>62aa4dcf.html</em> as the script was doing.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image74.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 11 - Brutus system",
                    "title":"<h2 id=LV11> <span style=\"color:#da1953\">Lev</span>el 11 - Brutus system</h2>",
                    "body":[
                        "<p>We started from the following URL:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55025/eepugeighovoorou/</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image76.png\" alt=\"\"></p>",
                        "<p>The first attempt was to use a few commonly used numbers such as <em>0000</em>, <em>12345</em>, <em>1337</em> but without any success.</p>",
                        "<p>As usual, we proceede to analyze the source code where we found a script like the previous levels and our attention was caught by a function called <em>checkPassword</em>.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image79.png\" alt=\"\"></p>",
                        "<p>As we can see the <code>if</code> statement checks if the number was between 1 and 1000000 excluded, if it was <em>NaN</em> (empty form) and if it hah at least six digits.</p>",
                        "<p>So, we supposed that a valid code could have been a number between 1 and 999999. Then the function hashes the code with MD5 with the salt <em>localsalt</em> and checks if the result hashing was equal to <em>4d1ea4c067daa4dec768540bbcfe80b2</em>.</p>",
                        "<p>The first idea was to decrypt the hash to retrieve the right value but due to the lack of an online tool we proceeded to hash with salt all the passwords from 1 to 99999 and check which one matched the string: <em>“4d1ea4c067daa4dec768540bbcfe80b2”</em>.</p>",
                        "<p>In order to do it we wrote a Python script.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image81.png\" alt=\"\"></p>",
                        "<p>And this was the result produced by the script.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image83.png\" alt=\"\"></p>",
                        "<p>As expected, the code worked fine.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image85.png\" alt=\"\"></p>",
                        "<hr>" 
                    ]
                },
                {
                    "id":"Level 12 - PHP",
                    "title":"<h2 id=LV12> <span style=\"color:#da1953\">Lev</span>el 12 - PHP</h2>",
                    "body":[
                        "<p>The URL obtained from level 11:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55528/ithochexephizoof</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image65.png\" alt=\"\"></p>",
                        "<p>In this case, there was no form or text box where to write so we proceede by analyzing the code where, as usual, we found a script and we focused on a portion of the code.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image44.png\" alt=\"\"></p>",
                        "<p>Here, we can see that the script creates a new link concatenating two strings to complete the URL.</p>",
                        "<p>These strings were: <em>“cgi-bin/users.php”</em> and <em>“?filter=”</em>, after which a value was concatenated, but we didn&rsquo;t know which kind of value could follow the string.</p>",
                        "<p>We decide to copy and paste the strings to the URL to complete it ourselves and append something in order to execute an XSS since it was JavaScript.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image45.png\" alt=\"\"></p>",
                        "<p>We tried several times but for some reason, no one of our attempts worked (in addition, we were not really good in JavaScript!).</p>",
                        "<p>Then we noticed what the home page was prompting: <em>daemon</em>, <em>root</em>, and <em>mysql</em>, things that reminded us of Linux users so we tried to execute a simple Linux command instead of a JavaScript one.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image46.png\" alt=\"\"></p>",
                        "<p>Once find the files in the directory we could try to open <em>secretusers.txt</em> with the command <code>cat</code>.</p>",
                        "<p>And the file contain the link for the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image48.png\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 13 - Shellshock",
                    "title":"<h2 id=LV13> <span style=\"color:#da1953\">Lev</span>el 13 - Bash Envirorment</h2>",
                    "body":[
                        "<p>The starting point was the URL obtained from the previous level:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55277/neifeesuopheeghu/</code></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image50.png\" alt=\"\"></p>",
                        "<p>The first thing we did was to write something in the text box to see what happens and we tried many different kinds of values to check how well it validated the input.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image52.png\" alt=\"\"></p>",
                        "<p>As usuals we proceede to analyze the code in search of information or scripts to reverse. In fact, we fpund a script, and in particular we focused our attention on the function “getenv”.</p>",
                        "<p>In addition, we saw the sanitize function on the user input which removes the illegal character from the input: that was the reason why it did not generate any kind of error.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image54.png\" alt=\"\"></p>",
                        "<p>Also, here we could see the making of the URL like the previous levels so we attempted the same method as in the level 12 without any success.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image56.png\" alt=\"\"></p>",
                        "<p>The response was <i>“no variable found”</i> and also when we put an input it prints a <i>“TESTENV”</i> which recalls something similar to the bash environment variable so we decided to do some research to see if there were any vulnerabilities with the bash in the past or something similar.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image58.png\" alt=\"\"></p>",
                        "<p>The first thing we found was something called “Shellshock”. The document explained what and how to exploit this vulnerability providing the string to use in order to execute remote shell commands.</p>",
                        "<p>The string was: <code>() { :;}; echo “NS:” $(&lt;/etc/passwd)</code>.</p>",
                        "<p>Digging more into the topic we found a <a href=\"https://owasp.org/www-pdf-archive/Shellshock_-_Tudor_Enache.pdf\">PDF</a> where the shellshock vulnerability was explained alongside its syntax.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image41.png\" alt=\"\"></p>",
                        "<p>So again, we tried to remake the right link appending <em>cgi-bin/env.php?filter=</em> and tried to copy and paste the string suggested but for some reason, no one of the strings were working.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image42.png\" alt=\"\"></p>",
                        "<p>During the laboratory lessons, we were suggested by the teacher to use <strong>Burp</strong> so we tried again with it.</p>",
                        "<p>The first thing we did was to copy and paste the payload found on the internet on the link like we did with the browser but without any success.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image22.jpg\" alt=\"\"></p>",
                        "<p>After a few research and random tries, we figured out that we have to encode a few characters and substitute the spaces with <em>+</em>.</p>",
                        "<p>So we encoded the “:” and “;” with “%3a” and “%3b” following the guide in this link, and our resulting payload was <code>()+{+%3a%3b}+/bin/ls</code> but still did not work for some reason.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image23.jpg\" alt=\"\"></p>",
                        "<p>Then we remembered, after a lot of struggle, a file called <em>“user.php”</em> on level 12 which has a particular comment.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image25.jpg\" alt=\"\"></p>",
                        "<p>The referrer was disabled for that level and maybe it was enabled in this one, so we tried to add the referrer in our level URL.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image27.jpg\" alt=\"\"></p>",
                        "<p>Which works perfectly, and we succeeded in listing the directory content.</p>",
                        "<p>The next step was to read the <em>secret4uou0.txt</em> with the command <code>cat</code> and we sent the payload with a different command <code>/bin/cat+secret4uou0.txt</code> where we found the link for the next level.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image30.jpg\" alt=\"\"></p>",
                        "<hr>"
                    ]
                },
                {
                    "id":"Level 14 - SQL Injection",
                    "title":"<h2 id=LV14> <span style=\"color:#da1953\">Lev</span>el 14 - SQL Injection</h2>",
                    "body":[
                        "<p>The starting point was the URL obtained from the previous level:</p>",
                        "<p><code>http://eth-lab.di.uniroma1.it:55424/aetiasaeghongohx</code></p>",
                        "<p>At the beginning of this level, we had no idea what to do, we try to register a user, we try to log in as <em>admin:admin</em> but nothing, then we remembered our Lab class on XSS attack and we try to do it but without success.</p>",
                        "<p>Only after few days later we had a class on SQL Injection then we tried to do so.</p>",
                        "<p>First of all, we had to find where the vulnerability was, it could be in a form, since it was very common to find them, or we could perform an injection from the URL.</p>",
                        "<p>We checked all the forms by writing inside the “ ’ ” character to see if we would get any query error, and we found it on the page “new user” on the field “username”.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image32.png\" alt=\"\"></p>",  
                        "<p>Since the class material was not published yet we used a friend presentation about the JSQL Injection from <a href=\"https://github.com/edoardoPredieri/SQLinjection_Training/blob/master/SQL_Injection.pptx\">GitHub</a>.</p>",
                        "<p>So, our first attempt was to find the number of columns, by doing the queries until we reached the 6th.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image34.jpg\" alt=\"\"></p>", 
                        "<p>And saw where were the leaks:</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image36.jpg\" alt=\"\"></p>",
                        "<p>Once found that leaks were on row 1, 3 and 4, we tried to find the schema names with the following query.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image19.jpg\" alt=\"\"></p>",
                        "<p>The schema found did not help us.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image20.jpg\" alt=\"\"></p>",
                        "This was really helpful when there were many databases but this was not the case, so we proceeded on finding the tables.",
                        "<p><img src=\"/cyber/writeup/unictf/image21.jpg\" alt=\"\"></p>",
                        "<p>The result shows a lot of names of tables but we were looking for something particular where it was possible to find users information.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image1.jpg\" alt=\"\"></p>",
                        "<p>The “users” table seemed to perfectly fit our case, so subsequently it was possible to retrieve the column names.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image3.jpg\" alt=\"\"></p>",
                        "<p>Due to a bad query without the “WHERE” statement it shows all the columns on the database but luckily, we managed to find the interested columns.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image5.jpg\" alt=\"\"></p>",
                        "<p>At this point we have all the necessary information to try to retrieve the credentials of the users.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image7.jpg\" alt=\"\"></p>",
                        "<p>Also, this query gives us as result few credentials (username and password) but we had to choose only two of them.</p>",
                        "<p><img src=\"/cyber/writeup/unictf/image9.jpg\" alt=\"\"></p>",
                        "After reading their blogs we found the link of the next level on Tsutomu’s blog.",
                        "<p><img src=\"/cyber/writeup/unictf/image11.jpg\" alt=\"\"></p>",
                        "<p><img src=\"/cyber/writeup/unictf/image13.png\" alt=\"\"></p>"
                    ]
                }
            ]
        }
    ]
}
